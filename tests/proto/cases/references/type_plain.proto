syntax = "proto3";

package type_plain;

option go_package = "xgo/tests/pb/pbref";

//import "google/protobuf/any.proto";
//import "google/protobuf/duration.proto";
//import "google/protobuf/timestamp.proto";

//import "tests/proto/module/external.proto";

//import "tests/proto/cases/references/private.proto";

import "proto/json.proto";

message TypePlain1 {
  int32 f_int32a = 1 [ (json.field) = {
    reference: { plain: { value: { int32: { codec: Number } } } }
  } ];
  int32 f_int32b = 2 [ (json.field) = {
    reference: { plain: { value: { int32: { codec: String } } } }
  } ];

  int64 f_int64a = 3 [ (json.field) = {
    reference: { plain: { value: { int64: { codec: Number } } } }
  } ];
  int64 f_int64b = 4 [ (json.field) = {
    reference: { plain: { value: { int64: { codec: String } } } }
  } ];

  uint32 f_uint32a = 5 [ (json.field) = {
    reference: { plain: { value: { uint32: { codec: Number } } } }
  } ];
  uint32 f_uint32b = 6 [ (json.field) = {
    reference: { plain: { value: { uint32: { codec: String } } } }
  } ];

  uint64 f_uint64a = 7 [ (json.field) = {
    reference: { plain: { value: { uint64: { codec: Number } } } }
  } ];
  uint64 f_uint64b = 8 [ (json.field) = {
    reference: { plain: { value: { uint64: { codec: String } } } }
  } ];

  sint32 f_sint32a = 9 [ (json.field) = {
    reference: { plain: { value: { sint32: { codec: Number } } } }
  } ];
  sint32 f_sint32b = 10 [ (json.field) = {
    reference: { plain: { value: { sint32: { codec: String } } } }
  } ];

  sint64 f_sint64a = 11 [ (json.field) = {
    reference: { plain: { value: { sint64: { codec: Number } } } }
  } ];
  sint64 f_sint64b = 12 [ (json.field) = {
    reference: { plain: { value: { sint64: { codec: String } } } }
  } ];

  sfixed32 f_sfixed32a = 13 [ (json.field) = {
    reference: { plain: { value: { sfixed32: { codec: Number } } } }
  } ];
  sfixed32 f_sfixed32b = 14 [ (json.field) = {
    reference: { plain: { value: { sfixed32: { codec: String } } } }
  } ];

  sfixed64 f_sfixed64a = 15 [ (json.field) = {
    reference: { plain: { value: { sfixed64: { codec: Number } } } }
  } ];
  sfixed64 f_sfixed64b = 16 [ (json.field) = {
    reference: { plain: { value: { sfixed64: { codec: String } } } }
  } ];

  fixed32 f_fixed32a = 17 [ (json.field) = {
    reference: { plain: { value: { fixed32: { codec: Number } } } }
  } ];
  fixed32 f_fixed32b = 18 [ (json.field) = {
    reference: { plain: { value: { fixed32: { codec: String } } } }
  } ];

  fixed64 f_fixed64a = 19 [ (json.field) = {
    reference: { plain: { value: { fixed64: { codec: Number } } } }
  } ];
  fixed64 f_fixed64b = 20 [ (json.field) = {
    reference: { plain: { value: { fixed64: { codec: String } } } }
  } ];

  float f_float1 = 21 [ (json.field) = {
    reference: { plain: { value: { float: { codec: Number } } } }
  } ];
  float f_float2 = 22 [ (json.field) = {
    reference: { plain: { value: { float: { codec: String } } } }
  } ];

  double f_double1 = 23 [ (json.field) = {
    reference: { plain: { value: { double: { codec: Number } } } }
  } ];
  double f_double2 = 24 [ (json.field) = {
    reference: { plain: { value: { double: { codec: String } } } }
  } ];

  bool f_bool1 = 25 [ (json.field) = {
    reference: { plain: { value: { bool: { codec: Bool } } } }
  } ];
  bool f_bool2 = 27 [ (json.field) = {
    reference: { plain: { value: { bool: { codec: String } } } }
  } ];
}

// Only used to test type error.
message TypePlain2 {
  string f_string1 = 1 [ (json.field) = { } ];

  bytes f_bytes1  = 2 [ (json.field) = { } ];
}
