syntax = "proto3";

package errors;

option go_package = "xgo/tests/pb/pberrors";

import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

import "tests/proto/cases/errors/private.proto";
//import "tests/proto/module/external.proto";

import "proto/json.proto";

message InvalidCodecOptional {
  optional int32 f_int32_numeric = 1 [ (json.field) = { format: { int32: { codec: Numeric } } } ];
  optional int32 f_int32_string  = 2 [ (json.field) = { format: { int32: { codec: String } } } ];

  optional int64 f_int64_numeric = 3 [ (json.field) = { format: { int64: { codec: Numeric } } } ];
  optional int64 f_int64_string  = 4 [ (json.field) = { format: { int64: { codec: String } } } ];

  optional uint32 f_uint32_numeric = 5 [ (json.field) = { format: { uint32: { codec: Numeric } } } ];
  optional uint32 f_uint32_string  = 6 [ (json.field) = { format: { uint32: { codec: String } } } ];

  optional uint64 f_uint64_numeric = 7 [ (json.field) = { format: { uint64: { codec: Numeric } } } ];
  optional uint64 f_uint64_string  = 8 [ (json.field) = { format: { uint64: { codec: String } } } ];

  optional sint32 f_sint32_numeric = 9 [ (json.field) = { format: { sint32: { codec: Numeric } } } ];
  optional sint32 f_sint32_string  = 10 [ (json.field) = { format: { sint32: { codec: String } } } ];

  optional sint64 f_sint64_numeric = 11 [ (json.field) = { format: { sint64: { codec: Numeric } } } ];
  optional sint64 f_sint64_string  = 12 [ (json.field) = { format: { sint64: { codec: String } } } ];

  optional sfixed32 f_sfixed32_numeric = 13 [ (json.field) = { format: { sfixed32: { codec: Numeric } } } ];
  optional sfixed32 f_sfixed32_string  = 14 [ (json.field) = { format: { sfixed32: { codec: String } } } ];

  optional sfixed64 f_sfixed64_numeric = 15 [ (json.field) = { format: { sfixed64: { codec: Numeric } } } ];
  optional sfixed64 f_sfixed64_string  = 16 [ (json.field) = { format: { sfixed64: { codec: String } } } ];

  optional fixed32 f_fixed32_numeric = 17 [ (json.field) = { format: { fixed32: { codec: Numeric } } } ];
  optional fixed32 f_fixed32_string  = 18 [ (json.field) = { format: { fixed32: { codec: String } } } ];

  optional fixed64 f_fixed64_numeric = 19 [ (json.field) = { format: { fixed64: { codec: Numeric } } } ];
  optional fixed64 f_fixed64_string  = 20 [ (json.field) = { format: { fixed64: { codec: String } } } ];

  optional float f_float_numeric = 21 [ (json.field) = { format: { float: { codec: Numeric } } } ];
  optional float f_float_string  = 22 [ (json.field) = { format: { float: { codec: String } } } ];

  optional double f_double_numeric = 23 [ (json.field) = { format: { double: { codec: Numeric } } } ];
  optional double f_double_string  = 24 [ (json.field) = { format: { double: { codec: String } } } ];

  optional bool f_bool_bool   = 25 [ (json.field) = { format: { bool: { codec: Bool } } } ];
  optional bool f_bool_string = 26 [ (json.field) = { format: { bool: { codec: String } } } ];

  optional string f_string_none = 31 [ (json.field) = { format: { string: { } } } ];
  optional bytes f_bytes_none   = 32 [ (json.field) = { format: { bytes: { } } } ];

  // Cases for Enum
  optional private.EnumNum1 f_enum_numeric        = 41 [ (json.field) = { format: { enum: { codec: Numeric } } } ];
  optional private.EnumNum1 f_enum_numeric_string = 42 [ (json.field) = { format: { enum: { codec: NumericString } } } ];
  optional private.EnumNum1 f_enum_string         = 43 [ (json.field) = { format: { enum: { codec: EnumString } } } ];

  // Cases for google.protobuf.Any
  optional google.protobuf.Any f_any_native = 51 [ (json.field) = { format: { any: { codec: Object } } } ];
  optional google.protobuf.Any f_any_proto  = 52 [ (json.field) = { format: { any: { codec: Proto } } } ];

  // Cases for google.protobuf.Duration
  optional google.protobuf.Duration f_duration_native = 61 [ (json.field) = { format: { duration: { codec: Object } } } ];
  optional google.protobuf.Duration f_duration_string = 62 [ (json.field) = { format: { duration: { codec: TimeString } } } ];

  optional google.protobuf.Duration f_duration_nanosecond        = 63 [ (json.field) = { format: { duration: { codec: Nanosecond } } } ];
  optional google.protobuf.Duration f_duration_nanosecond_string = 64 [ (json.field) = { format: { duration: { codec: NanosecondString } } } ];

  optional google.protobuf.Duration f_duration_microsecond        = 65 [ (json.field) = { format: { duration: { codec: Microsecond } } } ];
  optional google.protobuf.Duration f_duration_microsecond_string = 66 [ (json.field) = { format: { duration: { codec: MicrosecondString } } } ];

  optional google.protobuf.Duration f_duration_millisecond        = 67 [ (json.field) = { format: { duration: { codec: Millisecond } } } ];
  optional google.protobuf.Duration f_duration_millisecond_string = 68 [ (json.field) = { format: { duration: { codec: MillisecondString } } } ];

  optional google.protobuf.Duration f_duration_second        = 69 [ (json.field) = { format: { duration: { codec: Second } } } ];
  optional google.protobuf.Duration f_duration_second_string = 70 [ (json.field) = { format: { duration: { codec: SecondString } } } ];

  optional google.protobuf.Duration f_duration_minute        = 71 [ (json.field) = { format: { duration: { codec: Minute } } } ];
  optional google.protobuf.Duration f_duration_minute_string = 72 [ (json.field) = { format: { duration: { codec: MinuteString } } } ];

  optional google.protobuf.Duration f_duration_hour        = 73 [ (json.field) = { format: { duration: { codec: Hour } } } ];
  optional google.protobuf.Duration f_duration_hour_string = 74 [ (json.field) = { format: { duration: { codec: HourString } } } ];

  // Cases for google.protobuf.Timestamp
  optional google.protobuf.Timestamp f_timestamp_native      = 81 [ (json.field) = { format: { timestamp: { codec: Object } } } ];
  optional google.protobuf.Timestamp f_timestamp_time_layout = 82 [ (json.field) = { format: { timestamp: { codec: TimeLayout, layout: { golang: "2006-01-02T15:04:05Z07:00" } } } } ];

  optional google.protobuf.Timestamp f_timestamp_unix_nano        = 83 [ (json.field) = { format: { timestamp: { codec: UnixNano } } } ];
  optional google.protobuf.Timestamp f_timestamp_unix_nano_string = 84 [ (json.field) = { format: { timestamp: { codec: UnixNanoString } } } ];

  optional google.protobuf.Timestamp f_timestamp_unix_micro        = 85 [ (json.field) = { format: { timestamp: { codec: UnixMicro } } } ];
  optional google.protobuf.Timestamp f_timestamp_unix_micro_string = 86 [ (json.field) = { format: { timestamp: { codec: UnixMicroString } } } ];

  optional google.protobuf.Timestamp f_timestamp_unix_milli        = 87 [ (json.field) = { format: { timestamp: { codec: UnixMilli } } } ];
  optional google.protobuf.Timestamp f_timestamp_unix_milli_string = 88 [ (json.field) = { format: { timestamp: { codec: UnixMilliString } } } ];

  optional google.protobuf.Timestamp f_timestamp_unix_sec        = 89 [ (json.field) = { format: { timestamp: { codec: UnixSec } } } ];
  optional google.protobuf.Timestamp f_timestamp_unix_sec_string = 90 [ (json.field) = { format: { timestamp: { codec: UnixSecString } } } ];
}
