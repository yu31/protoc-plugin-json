syntax = "proto3";

package options;

option go_package = "xgo/tests/pb/pboptions";

import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

import "tests/proto/module/external.proto";

import "proto/json.proto";

// For test cases:
// 1. custom json key.
// 2. omitempty
message TypePlain1 {
  int32 f_int32 = 1 [ (json.field) = { json: "t_int32"; omitempty: true } ];

  int64 f_int64 = 2 [ (json.field) = { json: "t_int64"; omitempty: true } ];

  uint32 f_uint32 = 3 [ (json.field) = { json: "t_uint32"; omitempty: true } ];

  uint64 f_uint64 = 4 [ (json.field) = { json: "t_uint64"; omitempty: true } ];

  sint32 f_sint32 = 5 [ (json.field) = { json: "t_sint32"; omitempty: true } ];

  sint64 f_sint64 = 6 [ (json.field) = { json: "t_sint64"; omitempty: true } ];

  sfixed32 f_sfixed32 = 7 [ (json.field) = { json: "t_sfixed32"; omitempty: true } ];

  sfixed64 f_sfixed64 = 8 [ (json.field) = { json: "t_sfixed64"; omitempty: true } ];

  fixed32 f_fixed32 = 9 [ (json.field) = { json: "t_fixed32"; omitempty: true } ];

  fixed64 f_fixed64 = 10 [ (json.field) = { json: "t_fixed64"; omitempty: true } ];

  float f_float = 11 [ (json.field) = { json: "t_float"; omitempty: true } ];

  double f_double = 12 [ (json.field) = { json: "t_double"; omitempty: true } ];

  bool f_bool1 = 21 [ (json.field) = { json: "t_bool1"; omitempty: true } ];

  string f_string1 = 22 [ (json.field) = { json: "t_string1"; omitempty: true } ];

  bytes f_bytes1  = 23 [ (json.field) = { json: "t_bytes1"; omitempty: true } ];

  external.EnumNum1 f_enum1 = 31 [ (json.field) = { json: "t_enum1"; omitempty: true } ];

  external.Message1 f_message1 = 32 [ (json.field) = { json: "t_message1"; omitempty: true } ];

  google.protobuf.Any f_any1 = 41 [ (json.field) = { json: "t_any1"; omitempty: true } ];

  google.protobuf.Duration f_duration1 = 42 [ (json.field) = { json: "t_duration1"; omitempty: true } ];

  google.protobuf.Timestamp f_timestamp1 = 43 [ (json.field) = { json: "t_timestamp1"; omitempty: true } ];
}
