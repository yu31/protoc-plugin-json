syntax = "proto3";

package benchmark;

option go_package = "xgo/tests/pb/pbbenchmark";

//import "google/protobuf/any.proto";
//import "google/protobuf/duration.proto";
//import "google/protobuf/timestamp.proto";

import "proto/json.proto";

enum Enum1 {
  Zero  = 0;
  One   = 2;
  Two   = 3;
  Three = 5;
  Four  = 6;
  Five  = 7;
  Six   = 9;
  Seven = 11;
  Eight = 12;
  Nine  = 15;
  Ten   = 17;
}

message Message1 {
  string f_string1 = 1 [ (json.field) = { } ];
  string f_string2 = 2 [ (json.field) = { } ];
  string f_string3 = 3 [ (json.field) = { } ];
}

message BenchModelSimple {
  string f_string1 = 1 [ (json.field) = { } ];
  string f_string2 = 2 [ (json.field) = { } ];
  string f_string3 = 3 [ (json.field) = { } ];
  string f_string4 = 4 [ (json.field) = { } ];
  string f_string5 = 5 [ (json.field) = { } ];
  string f_string6 = 6 [ (json.field) = { } ];
  string f_string7 = 7 [ (json.field) = { } ];
  string f_string8 = 8 [ (json.field) = { } ];
  string f_string9 = 9 [ (json.field) = { } ];

  int32    f_int32    = 11 [ (json.field) = { } ];
  int64    f_int64    = 12 [ (json.field) = { } ];
  uint32   f_uint32   = 13 [ (json.field) = { } ];
  uint64   f_uint64   = 14 [ (json.field) = { } ];
  sint32   f_sint32   = 15 [ (json.field) = { } ];
  sint64   f_sint64   = 16 [ (json.field) = { } ];
  sfixed32 f_sfixed32 = 17 [ (json.field) = { } ];
  sfixed64 f_sfixed64 = 18 [ (json.field) = { } ];
  fixed32  f_fixed32  = 19 [ (json.field) = { } ];
  fixed64  f_fixed64  = 20 [ (json.field) = { } ];
  float    f_float    = 21 [ (json.field) = { } ];
  double   f_double   = 22 [ (json.field) = { } ];

  bool f_bool1 = 31 [ (json.field) = { } ];
  bool f_bool2 = 32 [ (json.field) = { } ];
  bool f_bool3 = 33 [ (json.field) = { } ];
}

message BenchModelComplex {
  string f_string1 = 1 [ (json.field) = { } ];
  string f_string2 = 2 [ (json.field) = { } ];
  string f_string3 = 3 [ (json.field) = { } ];
  string f_string4 = 4 [ (json.field) = { } ];
  string f_string5 = 5 [ (json.field) = { } ];
  string f_string6 = 6 [ (json.field) = { } ];
  string f_string7 = 7 [ (json.field) = { } ];
  string f_string8 = 8 [ (json.field) = { } ];
  string f_string9 = 9 [ (json.field) = { } ];

  int32    f_int32    = 11 [ (json.field) = { } ];
  int64    f_int64    = 12 [ (json.field) = { } ];
  uint32   f_uint32   = 13 [ (json.field) = { } ];
  uint64   f_uint64   = 14 [ (json.field) = { } ];
  sint32   f_sint32   = 15 [ (json.field) = { } ];
  sint64   f_sint64   = 16 [ (json.field) = { } ];
  sfixed32 f_sfixed32 = 17 [ (json.field) = { } ];
  sfixed64 f_sfixed64 = 18 [ (json.field) = { } ];
  fixed32  f_fixed32  = 19 [ (json.field) = { } ];
  fixed64  f_fixed64  = 20 [ (json.field) = { } ];
  float    f_float    = 21 [ (json.field) = { } ];
  double   f_double   = 22 [ (json.field) = { } ];

  bool f_bool1 = 31 [ (json.field) = { } ];
  bool f_bool2 = 32 [ (json.field) = { } ];
  bool f_bool3 = 33 [ (json.field) = { } ];

  bytes f_bytes1 = 34 [ (json.field) = { } ];
  bytes f_bytes2 = 35 [ (json.field) = { } ];
  bytes f_bytes3 = 36 [ (json.field) = { } ];

  Enum1 f_enum1 = 41 [ (json.field) = { } ];
  Enum1 f_enum2 = 42 [ (json.field) = { } ];
  Enum1 f_enum3 = 43 [ (json.field) = { } ];
  Enum1 f_enum4 = 44 [ (json.field) = { } ];
  Enum1 f_enum5 = 45 [ (json.field) = { } ];
  Enum1 f_enum6 = 46 [ (json.field) = { } ];
  Enum1 f_enum7 = 47 [ (json.field) = { } ];
  
  Message1 f_message1 = 51 [ (json.field) = { } ];
  Message1 f_message2 = 52 [ (json.field) = { } ];
  Message1 f_message3 = 53 [ (json.field) = { } ];
  Message1 f_message4 = 54 [ (json.field) = { } ];
  Message1 f_message5 = 55 [ (json.field) = { } ];
  Message1 f_message6 = 56 [ (json.field) = { } ];
  Message1 f_message7 = 57 [ (json.field) = { } ];

  // type optional.

  optional string p_string1 = 101 [ (json.field) = { } ];
  optional string p_string2 = 102 [ (json.field) = { } ];
  optional string p_string3 = 103 [ (json.field) = { } ];
  optional string p_string4 = 104 [ (json.field) = { } ];
  optional string p_string5 = 105 [ (json.field) = { } ];
  optional string p_string6 = 106 [ (json.field) = { } ];
  optional string p_string7 = 107 [ (json.field) = { } ];
  optional string p_string8 = 108 [ (json.field) = { } ];
  optional string p_string9 = 109 [ (json.field) = { } ];

  optional int32    p_int32    = 111 [ (json.field) = { } ];
  optional int64    p_int64    = 112 [ (json.field) = { } ];
  optional uint32   p_uint32   = 113 [ (json.field) = { } ];
  optional uint64   p_uint64   = 114 [ (json.field) = { } ];
  optional sint32   p_sint32   = 115 [ (json.field) = { } ];
  optional sint64   p_sint64   = 116 [ (json.field) = { } ];
  optional sfixed32 p_sfixed32 = 117 [ (json.field) = { } ];
  optional sfixed64 p_sfixed64 = 118 [ (json.field) = { } ];
  optional fixed32  p_fixed32  = 119 [ (json.field) = { } ];
  optional fixed64  p_fixed64  = 120 [ (json.field) = { } ];
  optional float    p_float    = 121 [ (json.field) = { } ];
  optional double   p_double   = 122 [ (json.field) = { } ];

  optional bool p_bool1 = 131 [ (json.field) = { } ];
  optional bool p_bool2 = 132 [ (json.field) = { } ];
  optional bool p_bool3 = 133 [ (json.field) = { } ];

  optional bytes p_bytes1 = 134 [ (json.field) = { } ];
  optional bytes p_bytes2 = 135 [ (json.field) = { } ];
  optional bytes p_bytes3 = 136 [ (json.field) = { } ];

  optional Enum1 p_enum1 = 141 [ (json.field) = { } ];
  optional Enum1 p_enum2 = 142 [ (json.field) = { } ];
  optional Enum1 p_enum3 = 143 [ (json.field) = { } ];
  optional Enum1 p_enum4 = 144 [ (json.field) = { } ];
  optional Enum1 p_enum5 = 145 [ (json.field) = { } ];
  optional Enum1 p_enum6 = 146 [ (json.field) = { } ];
  optional Enum1 p_enum7 = 147 [ (json.field) = { } ];

  optional Message1 p_message1 = 151 [ (json.field) = { } ];
  optional Message1 p_message2 = 152 [ (json.field) = { } ];
  optional Message1 p_message3 = 153 [ (json.field) = { } ];
  optional Message1 p_message4 = 154 [ (json.field) = { } ];
  optional Message1 p_message5 = 155 [ (json.field) = { } ];
  optional Message1 p_message6 = 156 [ (json.field) = { } ];
  optional Message1 p_message7 = 157 [ (json.field) = { } ];

  // type repeated.

  repeated string r_string1 = 201 [ (json.field) = { } ];
  repeated string r_string2 = 202 [ (json.field) = { } ];
  repeated string r_string3 = 203 [ (json.field) = { } ];
  repeated string r_string4 = 204 [ (json.field) = { } ];
  repeated string r_string5 = 205 [ (json.field) = { } ];
  repeated string r_string6 = 206 [ (json.field) = { } ];
  repeated string r_string7 = 207 [ (json.field) = { } ];
  repeated string r_string8 = 208 [ (json.field) = { } ];
  repeated string r_string9 = 209 [ (json.field) = { } ];

  repeated int32    r_int32    = 211 [ (json.field) = { } ];
  repeated int64    r_int64    = 212 [ (json.field) = { } ];
  repeated uint32   r_uint32   = 213 [ (json.field) = { } ];
  repeated uint64   r_uint64   = 214 [ (json.field) = { } ];
  repeated sint32   r_sint32   = 215 [ (json.field) = { } ];
  repeated sint64   r_sint64   = 216 [ (json.field) = { } ];
  repeated sfixed32 r_sfixed32 = 217 [ (json.field) = { } ];
  repeated sfixed64 r_sfixed64 = 218 [ (json.field) = { } ];
  repeated fixed32  r_fixed32  = 219 [ (json.field) = { } ];
  repeated fixed64  r_fixed64  = 220 [ (json.field) = { } ];
  repeated float    r_float    = 221 [ (json.field) = { } ];
  repeated double   r_double   = 222 [ (json.field) = { } ];

  repeated bool r_bool1 = 231 [ (json.field) = { } ];
  repeated bool r_bool2 = 232 [ (json.field) = { } ];
  repeated bool r_bool3 = 233 [ (json.field) = { } ];

  repeated bytes r_bytes1 = 234 [ (json.field) = { } ];
  repeated bytes r_bytes2 = 235 [ (json.field) = { } ];
  repeated bytes r_bytes3 = 236 [ (json.field) = { } ];

  repeated Enum1 r_enum1 = 241 [ (json.field) = { } ];
  repeated Enum1 r_enum2 = 242 [ (json.field) = { } ];
  repeated Enum1 r_enum3 = 243 [ (json.field) = { } ];
  repeated Enum1 r_enum4 = 244 [ (json.field) = { } ];
  repeated Enum1 r_enum5 = 245 [ (json.field) = { } ];
  repeated Enum1 r_enum6 = 246 [ (json.field) = { } ];
  repeated Enum1 r_enum7 = 247 [ (json.field) = { } ];

  repeated Message1 r_message1 = 251 [ (json.field) = { } ];
  repeated Message1 r_message2 = 252 [ (json.field) = { } ];
  repeated Message1 r_message3 = 253 [ (json.field) = { } ];
  repeated Message1 r_message4 = 254 [ (json.field) = { } ];
  repeated Message1 r_message5 = 255 [ (json.field) = { } ];
  repeated Message1 r_message6 = 256 [ (json.field) = { } ];
  repeated Message1 r_message7 = 257 [ (json.field) = { } ];

  // type map

  map<string, string> m_string1 = 301 [ (json.field) = { } ];
  map<string, string> m_string2 = 302 [ (json.field) = { } ];
  map<string, string> m_string3 = 303 [ (json.field) = { } ];
  map<string, string> m_string4 = 304 [ (json.field) = { } ];
  map<string, string> m_string5 = 305 [ (json.field) = { } ];
  map<string, string> m_string6 = 306 [ (json.field) = { } ];
  map<string, string> m_string7 = 307 [ (json.field) = { } ];
  map<string, string> m_string8 = 308 [ (json.field) = { } ];
  map<string, string> m_string9 = 309 [ (json.field) = { } ];

  map<string, int32>    m_int32    = 311 [ (json.field) = { } ];
  map<string, int64>    m_int64    = 312 [ (json.field) = { } ];
  map<string, uint32>   m_uint32   = 313 [ (json.field) = { } ];
  map<string, uint64>   m_uint64   = 314 [ (json.field) = { } ];
  map<string, sint32>   m_sint32   = 315 [ (json.field) = { } ];
  map<string, sint64>   m_sint64   = 316 [ (json.field) = { } ];
  map<string, sfixed32> m_sfixed32 = 317 [ (json.field) = { } ];
  map<string, sfixed64> m_sfixed64 = 318 [ (json.field) = { } ];
  map<string, fixed32>  m_fixed32  = 319 [ (json.field) = { } ];
  map<string, fixed64>  m_fixed64  = 320 [ (json.field) = { } ];
  map<string, float>    m_float    = 321 [ (json.field) = { } ];
  map<string, double>   m_double   = 322 [ (json.field) = { } ];

  map<string, bool> m_bool1 = 331 [ (json.field) = { } ];
  map<string, bool> m_bool2 = 332 [ (json.field) = { } ];
  map<string, bool> m_bool3 = 333 [ (json.field) = { } ];

  map<string, bytes> m_bytes1 = 334 [ (json.field) = { } ];
  map<string, bytes> m_bytes2 = 335 [ (json.field) = { } ];
  map<string, bytes> m_bytes3 = 336 [ (json.field) = { } ];

  map<string, Enum1> m_enum1 = 341 [ (json.field) = { } ];
  map<string, Enum1> m_enum2 = 342 [ (json.field) = { } ];
  map<string, Enum1> m_enum3 = 343 [ (json.field) = { } ];
  map<string, Enum1> m_enum4 = 344 [ (json.field) = { } ];
  map<string, Enum1> m_enum5 = 345 [ (json.field) = { } ];
  map<string, Enum1> m_enum6 = 346 [ (json.field) = { } ];
  map<string, Enum1> m_enum7 = 347 [ (json.field) = { } ];

  map<string, Message1> m_message1 = 351 [ (json.field) = { } ];
  map<string, Message1> m_message2 = 352 [ (json.field) = { } ];
  map<string, Message1> m_message3 = 353 [ (json.field) = { } ];
  map<string, Message1> m_message4 = 354 [ (json.field) = { } ];
  map<string, Message1> m_message5 = 355 [ (json.field) = { } ];
  map<string, Message1> m_message6 = 356 [ (json.field) = { } ];
  map<string, Message1> m_message7 = 357 [ (json.field) = { } ];
}

