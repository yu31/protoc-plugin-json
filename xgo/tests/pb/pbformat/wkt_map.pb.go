// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: tests/proto/cases/format/wkt_map.proto

package pbformat

import (
	_ "github.com/yu31/protoc-plugin-json/xgo/pb/pbjson"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WKTMap1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Cases for Enum
	//
	FEnumNumber1       map[string]Enum1 `protobuf:"bytes,1,rep,name=f_enum_number1,json=fEnumNumber1,proto3" json:"f_enum_number1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=private.Enum1"`
	FEnumNumberString1 map[string]Enum1 `protobuf:"bytes,2,rep,name=f_enum_number_string1,json=fEnumNumberString1,proto3" json:"f_enum_number_string1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=private.Enum1"`
	FEnumString1       map[string]Enum1 `protobuf:"bytes,3,rep,name=f_enum_string1,json=fEnumString1,proto3" json:"f_enum_string1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=private.Enum1"`
	// Cases for google.protobuf.Any
	//
	FAnyNative1 map[string]*anypb.Any `protobuf:"bytes,4,rep,name=f_any_native1,json=fAnyNative1,proto3" json:"f_any_native1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FAnyProto1  map[string]*anypb.Any `protobuf:"bytes,5,rep,name=f_any_proto1,json=fAnyProto1,proto3" json:"f_any_proto1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Cases for google.protobuf.Duration
	//
	FDurationNative1            map[string]*durationpb.Duration `protobuf:"bytes,11,rep,name=f_duration_native1,json=fDurationNative1,proto3" json:"f_duration_native1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationString1            map[string]*durationpb.Duration `protobuf:"bytes,12,rep,name=f_duration_string1,json=fDurationString1,proto3" json:"f_duration_string1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationNanosecond1        map[string]*durationpb.Duration `protobuf:"bytes,13,rep,name=f_duration_nanosecond1,json=fDurationNanosecond1,proto3" json:"f_duration_nanosecond1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationNanosecondString1  map[string]*durationpb.Duration `protobuf:"bytes,14,rep,name=f_duration_nanosecond_string1,json=fDurationNanosecondString1,proto3" json:"f_duration_nanosecond_string1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationMicrosecond1       map[string]*durationpb.Duration `protobuf:"bytes,15,rep,name=f_duration_microsecond1,json=fDurationMicrosecond1,proto3" json:"f_duration_microsecond1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationMicrosecondString1 map[string]*durationpb.Duration `protobuf:"bytes,16,rep,name=f_duration_microsecond_string1,json=fDurationMicrosecondString1,proto3" json:"f_duration_microsecond_string1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationMillisecond1       map[string]*durationpb.Duration `protobuf:"bytes,17,rep,name=f_duration_millisecond1,json=fDurationMillisecond1,proto3" json:"f_duration_millisecond1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationMillisecondString1 map[string]*durationpb.Duration `protobuf:"bytes,18,rep,name=f_duration_millisecond_string1,json=fDurationMillisecondString1,proto3" json:"f_duration_millisecond_string1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationSecond1            map[string]*durationpb.Duration `protobuf:"bytes,19,rep,name=f_duration_second1,json=fDurationSecond1,proto3" json:"f_duration_second1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationSecondString1      map[string]*durationpb.Duration `protobuf:"bytes,20,rep,name=f_duration_second_string1,json=fDurationSecondString1,proto3" json:"f_duration_second_string1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationMinute1            map[string]*durationpb.Duration `protobuf:"bytes,21,rep,name=f_duration_minute1,json=fDurationMinute1,proto3" json:"f_duration_minute1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationMinuteString1      map[string]*durationpb.Duration `protobuf:"bytes,22,rep,name=f_duration_minute_string1,json=fDurationMinuteString1,proto3" json:"f_duration_minute_string1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationHour1              map[string]*durationpb.Duration `protobuf:"bytes,23,rep,name=f_duration_hour1,json=fDurationHour1,proto3" json:"f_duration_hour1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationHourString1        map[string]*durationpb.Duration `protobuf:"bytes,24,rep,name=f_duration_hour_string1,json=fDurationHourString1,proto3" json:"f_duration_hour_string1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Cases for google.protobuf.Timestamp
	//
	FTimestampNative1          map[string]*timestamppb.Timestamp `protobuf:"bytes,31,rep,name=f_timestamp_native1,json=fTimestampNative1,proto3" json:"f_timestamp_native1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampTimeLayout1      map[string]*timestamppb.Timestamp `protobuf:"bytes,32,rep,name=f_timestamp_time_layout1,json=fTimestampTimeLayout1,proto3" json:"f_timestamp_time_layout1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampUnixNano1        map[string]*timestamppb.Timestamp `protobuf:"bytes,33,rep,name=f_timestamp_unix_nano1,json=fTimestampUnixNano1,proto3" json:"f_timestamp_unix_nano1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampUnixNanoString1  map[string]*timestamppb.Timestamp `protobuf:"bytes,34,rep,name=f_timestamp_unix_nano_string1,json=fTimestampUnixNanoString1,proto3" json:"f_timestamp_unix_nano_string1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampUnixMicro1       map[string]*timestamppb.Timestamp `protobuf:"bytes,35,rep,name=f_timestamp_unix_micro1,json=fTimestampUnixMicro1,proto3" json:"f_timestamp_unix_micro1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampUnixMicroString1 map[string]*timestamppb.Timestamp `protobuf:"bytes,36,rep,name=f_timestamp_unix_micro_string1,json=fTimestampUnixMicroString1,proto3" json:"f_timestamp_unix_micro_string1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampUnixMilli1       map[string]*timestamppb.Timestamp `protobuf:"bytes,37,rep,name=f_timestamp_unix_milli1,json=fTimestampUnixMilli1,proto3" json:"f_timestamp_unix_milli1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampUnixMilliString1 map[string]*timestamppb.Timestamp `protobuf:"bytes,38,rep,name=f_timestamp_unix_milli_string1,json=fTimestampUnixMilliString1,proto3" json:"f_timestamp_unix_milli_string1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampUnixSec1         map[string]*timestamppb.Timestamp `protobuf:"bytes,39,rep,name=f_timestamp_unix_sec1,json=fTimestampUnixSec1,proto3" json:"f_timestamp_unix_sec1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampUnixSecString1   map[string]*timestamppb.Timestamp `protobuf:"bytes,40,rep,name=f_timestamp_unix_sec_string1,json=fTimestampUnixSecString1,proto3" json:"f_timestamp_unix_sec_string1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WKTMap1) Reset() {
	*x = WKTMap1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_format_wkt_map_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WKTMap1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WKTMap1) ProtoMessage() {}

func (x *WKTMap1) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_format_wkt_map_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WKTMap1.ProtoReflect.Descriptor instead.
func (*WKTMap1) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_format_wkt_map_proto_rawDescGZIP(), []int{0}
}

func (x *WKTMap1) GetFEnumNumber1() map[string]Enum1 {
	if x != nil {
		return x.FEnumNumber1
	}
	return nil
}

func (x *WKTMap1) GetFEnumNumberString1() map[string]Enum1 {
	if x != nil {
		return x.FEnumNumberString1
	}
	return nil
}

func (x *WKTMap1) GetFEnumString1() map[string]Enum1 {
	if x != nil {
		return x.FEnumString1
	}
	return nil
}

func (x *WKTMap1) GetFAnyNative1() map[string]*anypb.Any {
	if x != nil {
		return x.FAnyNative1
	}
	return nil
}

func (x *WKTMap1) GetFAnyProto1() map[string]*anypb.Any {
	if x != nil {
		return x.FAnyProto1
	}
	return nil
}

func (x *WKTMap1) GetFDurationNative1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationNative1
	}
	return nil
}

func (x *WKTMap1) GetFDurationString1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationString1
	}
	return nil
}

func (x *WKTMap1) GetFDurationNanosecond1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationNanosecond1
	}
	return nil
}

func (x *WKTMap1) GetFDurationNanosecondString1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationNanosecondString1
	}
	return nil
}

func (x *WKTMap1) GetFDurationMicrosecond1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationMicrosecond1
	}
	return nil
}

func (x *WKTMap1) GetFDurationMicrosecondString1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationMicrosecondString1
	}
	return nil
}

func (x *WKTMap1) GetFDurationMillisecond1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationMillisecond1
	}
	return nil
}

func (x *WKTMap1) GetFDurationMillisecondString1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationMillisecondString1
	}
	return nil
}

func (x *WKTMap1) GetFDurationSecond1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationSecond1
	}
	return nil
}

func (x *WKTMap1) GetFDurationSecondString1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationSecondString1
	}
	return nil
}

func (x *WKTMap1) GetFDurationMinute1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationMinute1
	}
	return nil
}

func (x *WKTMap1) GetFDurationMinuteString1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationMinuteString1
	}
	return nil
}

func (x *WKTMap1) GetFDurationHour1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationHour1
	}
	return nil
}

func (x *WKTMap1) GetFDurationHourString1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationHourString1
	}
	return nil
}

func (x *WKTMap1) GetFTimestampNative1() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampNative1
	}
	return nil
}

func (x *WKTMap1) GetFTimestampTimeLayout1() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampTimeLayout1
	}
	return nil
}

func (x *WKTMap1) GetFTimestampUnixNano1() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampUnixNano1
	}
	return nil
}

func (x *WKTMap1) GetFTimestampUnixNanoString1() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampUnixNanoString1
	}
	return nil
}

func (x *WKTMap1) GetFTimestampUnixMicro1() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampUnixMicro1
	}
	return nil
}

func (x *WKTMap1) GetFTimestampUnixMicroString1() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampUnixMicroString1
	}
	return nil
}

func (x *WKTMap1) GetFTimestampUnixMilli1() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampUnixMilli1
	}
	return nil
}

func (x *WKTMap1) GetFTimestampUnixMilliString1() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampUnixMilliString1
	}
	return nil
}

func (x *WKTMap1) GetFTimestampUnixSec1() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampUnixSec1
	}
	return nil
}

func (x *WKTMap1) GetFTimestampUnixSecString1() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampUnixSecString1
	}
	return nil
}

var File_tests_proto_cases_format_wkt_map_proto protoreflect.FileDescriptor

var file_tests_proto_cases_format_wkt_map_proto_rawDesc = []byte{
	0x0a, 0x26, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61,
	0x73, 0x65, 0x73, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2f, 0x77, 0x6b, 0x74, 0x5f, 0x6d,
	0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61,
	0x70, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x74,
	0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73,
	0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6a, 0x73, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2, 0x30, 0x0a, 0x07, 0x57, 0x4b, 0x54, 0x4d,
	0x61, 0x70, 0x31, 0x12, 0x59, 0x0a, 0x0e, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x31, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x6b,
	0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x45,
	0x6e, 0x75, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x0f, 0x8a, 0xa2, 0x1f, 0x0b, 0x5a, 0x09, 0x82, 0x02, 0x06, 0x12, 0x04, 0x72, 0x02, 0x08, 0x01,
	0x52, 0x0c, 0x66, 0x45, 0x6e, 0x75, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x31, 0x12, 0x6c,
	0x0a, 0x15, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e,
	0x46, 0x45, 0x6e, 0x75, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0f, 0x8a, 0xa2, 0x1f, 0x0b, 0x5a, 0x09, 0x82,
	0x02, 0x06, 0x12, 0x04, 0x72, 0x02, 0x08, 0x02, 0x52, 0x12, 0x66, 0x45, 0x6e, 0x75, 0x6d, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x59, 0x0a, 0x0e,
	0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57,
	0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x45, 0x6e, 0x75, 0x6d, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0f, 0x8a, 0xa2, 0x1f, 0x0b, 0x5a, 0x09,
	0x82, 0x02, 0x06, 0x12, 0x04, 0x72, 0x02, 0x08, 0x03, 0x52, 0x0c, 0x66, 0x45, 0x6e, 0x75, 0x6d,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x57, 0x0a, 0x0d, 0x66, 0x5f, 0x61, 0x6e, 0x79,
	0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31,
	0x2e, 0x46, 0x41, 0x6e, 0x79, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x10, 0x8a, 0xa2, 0x1f, 0x0c, 0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xaa, 0x01,
	0x02, 0x08, 0x01, 0x52, 0x0b, 0x66, 0x41, 0x6e, 0x79, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31,
	0x12, 0x54, 0x0a, 0x0c, 0x66, 0x5f, 0x61, 0x6e, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x31,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70,
	0x2e, 0x57, 0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x41, 0x6e, 0x79, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x10, 0x8a, 0xa2, 0x1f, 0x0c, 0x5a, 0x0a,
	0x82, 0x02, 0x07, 0x12, 0x05, 0xaa, 0x01, 0x02, 0x08, 0x02, 0x52, 0x0a, 0x66, 0x41, 0x6e, 0x79,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x31, 0x12, 0x66, 0x0a, 0x12, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54,
	0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x10, 0x8a, 0xa2, 0x1f, 0x0c,
	0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x10, 0x66, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x12, 0x66,
	0x0a, 0x12, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x31, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x6b, 0x74,
	0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x42, 0x10, 0x8a, 0xa2, 0x1f, 0x0c, 0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xb2,
	0x01, 0x02, 0x08, 0x02, 0x52, 0x10, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x72, 0x0a, 0x16, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70,
	0x2e, 0x57, 0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x42, 0x10, 0x8a, 0xa2, 0x1f, 0x0c, 0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xb2,
	0x01, 0x02, 0x08, 0x03, 0x52, 0x14, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31, 0x12, 0x85, 0x01, 0x0a, 0x1d, 0x66,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54,
	0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x42, 0x10, 0x8a, 0xa2, 0x1f, 0x0c, 0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12,
	0x05, 0xb2, 0x01, 0x02, 0x08, 0x04, 0x52, 0x1a, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x31, 0x12, 0x75, 0x0a, 0x17, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b,
	0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x42, 0x10, 0x8a, 0xa2, 0x1f, 0x0c, 0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02,
	0x08, 0x05, 0x52, 0x15, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31, 0x12, 0x88, 0x01, 0x0a, 0x1e, 0x66, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54,
	0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69,
	0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x10, 0x8a, 0xa2, 0x1f, 0x0c, 0x5a, 0x0a, 0x82, 0x02, 0x07,
	0x12, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x06, 0x52, 0x1b, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x31, 0x12, 0x75, 0x0a, 0x17, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31, 0x18,
	0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e,
	0x57, 0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x42, 0x10, 0x8a, 0xa2, 0x1f, 0x0c, 0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xb2,
	0x01, 0x02, 0x08, 0x07, 0x52, 0x15, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31, 0x12, 0x88, 0x01, 0x0a, 0x1e,
	0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x12,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57,
	0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x10, 0x8a, 0xa2, 0x1f, 0x0c, 0x5a, 0x0a, 0x82,
	0x02, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x08, 0x52, 0x1b, 0x66, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x66, 0x0a, 0x12, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31, 0x18, 0x13, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54,
	0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x10, 0x8a, 0xa2, 0x1f, 0x0c,
	0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x09, 0x52, 0x10, 0x66, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31, 0x12, 0x79,
	0x0a, 0x19, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x14, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54, 0x4d,
	0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x10, 0x8a, 0xa2, 0x1f, 0x0c, 0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x08,
	0x0a, 0x52, 0x16, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x66, 0x0a, 0x12, 0x66, 0x5f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x31, 0x18,
	0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e,
	0x57, 0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x10, 0x8a,
	0xa2, 0x1f, 0x0c, 0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x0b, 0x52,
	0x10, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x31, 0x12, 0x79, 0x0a, 0x19, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x16,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57,
	0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x42, 0x10, 0x8a, 0xa2, 0x1f, 0x0c, 0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xb2,
	0x01, 0x02, 0x08, 0x0c, 0x52, 0x16, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x69, 0x6e, 0x75, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x60, 0x0a, 0x10,
	0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x31,
	0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70,
	0x2e, 0x57, 0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x10, 0x8a, 0xa2,
	0x1f, 0x0c, 0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x0d, 0x52, 0x0e,
	0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x31, 0x12, 0x73,
	0x0a, 0x17, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x75,
	0x72, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54, 0x4d, 0x61, 0x70,
	0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x10, 0x8a, 0xa2, 0x1f,
	0x0c, 0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x0e, 0x52, 0x14, 0x66,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x31, 0x12, 0x69, 0x0a, 0x13, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54, 0x4d, 0x61,
	0x70, 0x31, 0x2e, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x10, 0x8a, 0xa2, 0x1f, 0x0c, 0x5a,
	0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xba, 0x01, 0x02, 0x08, 0x01, 0x52, 0x11, 0x66, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x12, 0x93,
	0x01, 0x0a, 0x18, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x31, 0x18, 0x20, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54, 0x4d,
	0x61, 0x70, 0x31, 0x2e, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x2d,
	0x8a, 0xa2, 0x1f, 0x29, 0x5a, 0x27, 0x82, 0x02, 0x24, 0x12, 0x22, 0xba, 0x01, 0x1f, 0x08, 0x02,
	0x12, 0x1b, 0x0a, 0x19, 0x32, 0x30, 0x30, 0x36, 0x2d, 0x30, 0x31, 0x2d, 0x30, 0x32, 0x54, 0x31,
	0x35, 0x3a, 0x30, 0x34, 0x3a, 0x30, 0x35, 0x5a, 0x30, 0x37, 0x3a, 0x30, 0x30, 0x52, 0x15, 0x66,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x31, 0x12, 0x70, 0x0a, 0x16, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x31, 0x18, 0x21,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57,
	0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x55, 0x6e, 0x69, 0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x10, 0x8a, 0xa2, 0x1f, 0x0c, 0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xba, 0x01, 0x02, 0x08,
	0x03, 0x52, 0x13, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69,
	0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x31, 0x12, 0x83, 0x01, 0x0a, 0x1d, 0x66, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6e, 0x61, 0x6e, 0x6f,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x22, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31,
	0x2e, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4e,
	0x61, 0x6e, 0x6f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x10, 0x8a, 0xa2, 0x1f, 0x0c, 0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xba, 0x01, 0x02, 0x08,
	0x04, 0x52, 0x19, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69,
	0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x73, 0x0a, 0x17,
	0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78,
	0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x31, 0x18, 0x23, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e,
	0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69,
	0x63, 0x72, 0x6f, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x10, 0x8a, 0xa2, 0x1f, 0x0c, 0x5a,
	0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xba, 0x01, 0x02, 0x08, 0x05, 0x52, 0x14, 0x66, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x63, 0x72, 0x6f,
	0x31, 0x12, 0x86, 0x01, 0x0a, 0x1e, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x31, 0x18, 0x24, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x77, 0x6b, 0x74,
	0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x63, 0x72, 0x6f,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x10, 0x8a, 0xa2,
	0x1f, 0x0c, 0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xba, 0x01, 0x02, 0x08, 0x06, 0x52, 0x1a,
	0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69,
	0x63, 0x72, 0x6f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x73, 0x0a, 0x17, 0x66, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6d,
	0x69, 0x6c, 0x6c, 0x69, 0x31, 0x18, 0x25, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x77, 0x6b,
	0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6c, 0x6c,
	0x69, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x10, 0x8a, 0xa2, 0x1f, 0x0c, 0x5a, 0x0a, 0x82,
	0x02, 0x07, 0x12, 0x05, 0xba, 0x01, 0x02, 0x08, 0x07, 0x52, 0x14, 0x66, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x31, 0x12,
	0x86, 0x01, 0x0a, 0x1e, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f,
	0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x31, 0x18, 0x26, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d,
	0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x10, 0x8a, 0xa2, 0x1f, 0x0c,
	0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xba, 0x01, 0x02, 0x08, 0x08, 0x52, 0x1a, 0x66, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6c, 0x6c,
	0x69, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x6d, 0x0a, 0x15, 0x66, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x73, 0x65, 0x63,
	0x31, 0x18, 0x27, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61,
	0x70, 0x2e, 0x57, 0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x53, 0x65, 0x63, 0x31, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x10, 0x8a, 0xa2, 0x1f, 0x0c, 0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xba, 0x01,
	0x02, 0x08, 0x09, 0x52, 0x12, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55,
	0x6e, 0x69, 0x78, 0x53, 0x65, 0x63, 0x31, 0x12, 0x80, 0x01, 0x0a, 0x1c, 0x66, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x73, 0x65, 0x63,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x77, 0x6b, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x57, 0x4b, 0x54, 0x4d, 0x61, 0x70, 0x31,
	0x2e, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x53,
	0x65, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x10,
	0x8a, 0xa2, 0x1f, 0x0c, 0x5a, 0x0a, 0x82, 0x02, 0x07, 0x12, 0x05, 0xba, 0x01, 0x02, 0x08, 0x0a,
	0x52, 0x18, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78,
	0x53, 0x65, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x1a, 0x4f, 0x0a, 0x11, 0x46, 0x45,
	0x6e, 0x75, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x31,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x55, 0x0a, 0x17, 0x46,
	0x45, 0x6e, 0x75, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x31, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x4f, 0x0a, 0x11, 0x46, 0x45, 0x6e, 0x75, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x31, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x54, 0x0a, 0x10, 0x46, 0x41, 0x6e, 0x79, 0x4e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x53, 0x0a, 0x0f, 0x46, 0x41, 0x6e,
	0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5e,
	0x0a, 0x15, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5e,
	0x0a, 0x15, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x62,
	0x0a, 0x19, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6e, 0x6f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x68, 0x0a, 0x1f, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x63, 0x0a, 0x1a,
	0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x69, 0x0a, 0x20, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69,
	0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x63, 0x0a, 0x1a,
	0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x69, 0x0a, 0x20, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5e, 0x0a, 0x15,
	0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x64, 0x0a, 0x1b,
	0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x5e, 0x0a, 0x15, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x69, 0x6e, 0x75, 0x74, 0x65, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x64, 0x0a, 0x1b, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x69, 0x6e, 0x75, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5c, 0x0a, 0x13, 0x46, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x62, 0x0a, 0x19, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x60, 0x0a, 0x16, 0x46, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x64, 0x0a, 0x1a,
	0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x62, 0x0a, 0x18, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x55, 0x6e, 0x69, 0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x68, 0x0a, 0x1e, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x63, 0x0a, 0x19, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e,
	0x69, 0x78, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x69, 0x0a, 0x1f, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x63, 0x0a, 0x19, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e,
	0x69, 0x78, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x69, 0x0a, 0x1f, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x61, 0x0a, 0x17, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e,
	0x69, 0x78, 0x53, 0x65, 0x63, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x67, 0x0a, 0x1d, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x55, 0x6e, 0x69, 0x78, 0x53, 0x65, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x17, 0x5a, 0x15,
	0x78, 0x67, 0x6f, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x62, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tests_proto_cases_format_wkt_map_proto_rawDescOnce sync.Once
	file_tests_proto_cases_format_wkt_map_proto_rawDescData = file_tests_proto_cases_format_wkt_map_proto_rawDesc
)

func file_tests_proto_cases_format_wkt_map_proto_rawDescGZIP() []byte {
	file_tests_proto_cases_format_wkt_map_proto_rawDescOnce.Do(func() {
		file_tests_proto_cases_format_wkt_map_proto_rawDescData = protoimpl.X.CompressGZIP(file_tests_proto_cases_format_wkt_map_proto_rawDescData)
	})
	return file_tests_proto_cases_format_wkt_map_proto_rawDescData
}

var file_tests_proto_cases_format_wkt_map_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_tests_proto_cases_format_wkt_map_proto_goTypes = []interface{}{
	(*WKTMap1)(nil),               // 0: wkt_map.WKTMap1
	nil,                           // 1: wkt_map.WKTMap1.FEnumNumber1Entry
	nil,                           // 2: wkt_map.WKTMap1.FEnumNumberString1Entry
	nil,                           // 3: wkt_map.WKTMap1.FEnumString1Entry
	nil,                           // 4: wkt_map.WKTMap1.FAnyNative1Entry
	nil,                           // 5: wkt_map.WKTMap1.FAnyProto1Entry
	nil,                           // 6: wkt_map.WKTMap1.FDurationNative1Entry
	nil,                           // 7: wkt_map.WKTMap1.FDurationString1Entry
	nil,                           // 8: wkt_map.WKTMap1.FDurationNanosecond1Entry
	nil,                           // 9: wkt_map.WKTMap1.FDurationNanosecondString1Entry
	nil,                           // 10: wkt_map.WKTMap1.FDurationMicrosecond1Entry
	nil,                           // 11: wkt_map.WKTMap1.FDurationMicrosecondString1Entry
	nil,                           // 12: wkt_map.WKTMap1.FDurationMillisecond1Entry
	nil,                           // 13: wkt_map.WKTMap1.FDurationMillisecondString1Entry
	nil,                           // 14: wkt_map.WKTMap1.FDurationSecond1Entry
	nil,                           // 15: wkt_map.WKTMap1.FDurationSecondString1Entry
	nil,                           // 16: wkt_map.WKTMap1.FDurationMinute1Entry
	nil,                           // 17: wkt_map.WKTMap1.FDurationMinuteString1Entry
	nil,                           // 18: wkt_map.WKTMap1.FDurationHour1Entry
	nil,                           // 19: wkt_map.WKTMap1.FDurationHourString1Entry
	nil,                           // 20: wkt_map.WKTMap1.FTimestampNative1Entry
	nil,                           // 21: wkt_map.WKTMap1.FTimestampTimeLayout1Entry
	nil,                           // 22: wkt_map.WKTMap1.FTimestampUnixNano1Entry
	nil,                           // 23: wkt_map.WKTMap1.FTimestampUnixNanoString1Entry
	nil,                           // 24: wkt_map.WKTMap1.FTimestampUnixMicro1Entry
	nil,                           // 25: wkt_map.WKTMap1.FTimestampUnixMicroString1Entry
	nil,                           // 26: wkt_map.WKTMap1.FTimestampUnixMilli1Entry
	nil,                           // 27: wkt_map.WKTMap1.FTimestampUnixMilliString1Entry
	nil,                           // 28: wkt_map.WKTMap1.FTimestampUnixSec1Entry
	nil,                           // 29: wkt_map.WKTMap1.FTimestampUnixSecString1Entry
	(Enum1)(0),                    // 30: private.Enum1
	(*anypb.Any)(nil),             // 31: google.protobuf.Any
	(*durationpb.Duration)(nil),   // 32: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil), // 33: google.protobuf.Timestamp
}
var file_tests_proto_cases_format_wkt_map_proto_depIdxs = []int32{
	1,  // 0: wkt_map.WKTMap1.f_enum_number1:type_name -> wkt_map.WKTMap1.FEnumNumber1Entry
	2,  // 1: wkt_map.WKTMap1.f_enum_number_string1:type_name -> wkt_map.WKTMap1.FEnumNumberString1Entry
	3,  // 2: wkt_map.WKTMap1.f_enum_string1:type_name -> wkt_map.WKTMap1.FEnumString1Entry
	4,  // 3: wkt_map.WKTMap1.f_any_native1:type_name -> wkt_map.WKTMap1.FAnyNative1Entry
	5,  // 4: wkt_map.WKTMap1.f_any_proto1:type_name -> wkt_map.WKTMap1.FAnyProto1Entry
	6,  // 5: wkt_map.WKTMap1.f_duration_native1:type_name -> wkt_map.WKTMap1.FDurationNative1Entry
	7,  // 6: wkt_map.WKTMap1.f_duration_string1:type_name -> wkt_map.WKTMap1.FDurationString1Entry
	8,  // 7: wkt_map.WKTMap1.f_duration_nanosecond1:type_name -> wkt_map.WKTMap1.FDurationNanosecond1Entry
	9,  // 8: wkt_map.WKTMap1.f_duration_nanosecond_string1:type_name -> wkt_map.WKTMap1.FDurationNanosecondString1Entry
	10, // 9: wkt_map.WKTMap1.f_duration_microsecond1:type_name -> wkt_map.WKTMap1.FDurationMicrosecond1Entry
	11, // 10: wkt_map.WKTMap1.f_duration_microsecond_string1:type_name -> wkt_map.WKTMap1.FDurationMicrosecondString1Entry
	12, // 11: wkt_map.WKTMap1.f_duration_millisecond1:type_name -> wkt_map.WKTMap1.FDurationMillisecond1Entry
	13, // 12: wkt_map.WKTMap1.f_duration_millisecond_string1:type_name -> wkt_map.WKTMap1.FDurationMillisecondString1Entry
	14, // 13: wkt_map.WKTMap1.f_duration_second1:type_name -> wkt_map.WKTMap1.FDurationSecond1Entry
	15, // 14: wkt_map.WKTMap1.f_duration_second_string1:type_name -> wkt_map.WKTMap1.FDurationSecondString1Entry
	16, // 15: wkt_map.WKTMap1.f_duration_minute1:type_name -> wkt_map.WKTMap1.FDurationMinute1Entry
	17, // 16: wkt_map.WKTMap1.f_duration_minute_string1:type_name -> wkt_map.WKTMap1.FDurationMinuteString1Entry
	18, // 17: wkt_map.WKTMap1.f_duration_hour1:type_name -> wkt_map.WKTMap1.FDurationHour1Entry
	19, // 18: wkt_map.WKTMap1.f_duration_hour_string1:type_name -> wkt_map.WKTMap1.FDurationHourString1Entry
	20, // 19: wkt_map.WKTMap1.f_timestamp_native1:type_name -> wkt_map.WKTMap1.FTimestampNative1Entry
	21, // 20: wkt_map.WKTMap1.f_timestamp_time_layout1:type_name -> wkt_map.WKTMap1.FTimestampTimeLayout1Entry
	22, // 21: wkt_map.WKTMap1.f_timestamp_unix_nano1:type_name -> wkt_map.WKTMap1.FTimestampUnixNano1Entry
	23, // 22: wkt_map.WKTMap1.f_timestamp_unix_nano_string1:type_name -> wkt_map.WKTMap1.FTimestampUnixNanoString1Entry
	24, // 23: wkt_map.WKTMap1.f_timestamp_unix_micro1:type_name -> wkt_map.WKTMap1.FTimestampUnixMicro1Entry
	25, // 24: wkt_map.WKTMap1.f_timestamp_unix_micro_string1:type_name -> wkt_map.WKTMap1.FTimestampUnixMicroString1Entry
	26, // 25: wkt_map.WKTMap1.f_timestamp_unix_milli1:type_name -> wkt_map.WKTMap1.FTimestampUnixMilli1Entry
	27, // 26: wkt_map.WKTMap1.f_timestamp_unix_milli_string1:type_name -> wkt_map.WKTMap1.FTimestampUnixMilliString1Entry
	28, // 27: wkt_map.WKTMap1.f_timestamp_unix_sec1:type_name -> wkt_map.WKTMap1.FTimestampUnixSec1Entry
	29, // 28: wkt_map.WKTMap1.f_timestamp_unix_sec_string1:type_name -> wkt_map.WKTMap1.FTimestampUnixSecString1Entry
	30, // 29: wkt_map.WKTMap1.FEnumNumber1Entry.value:type_name -> private.Enum1
	30, // 30: wkt_map.WKTMap1.FEnumNumberString1Entry.value:type_name -> private.Enum1
	30, // 31: wkt_map.WKTMap1.FEnumString1Entry.value:type_name -> private.Enum1
	31, // 32: wkt_map.WKTMap1.FAnyNative1Entry.value:type_name -> google.protobuf.Any
	31, // 33: wkt_map.WKTMap1.FAnyProto1Entry.value:type_name -> google.protobuf.Any
	32, // 34: wkt_map.WKTMap1.FDurationNative1Entry.value:type_name -> google.protobuf.Duration
	32, // 35: wkt_map.WKTMap1.FDurationString1Entry.value:type_name -> google.protobuf.Duration
	32, // 36: wkt_map.WKTMap1.FDurationNanosecond1Entry.value:type_name -> google.protobuf.Duration
	32, // 37: wkt_map.WKTMap1.FDurationNanosecondString1Entry.value:type_name -> google.protobuf.Duration
	32, // 38: wkt_map.WKTMap1.FDurationMicrosecond1Entry.value:type_name -> google.protobuf.Duration
	32, // 39: wkt_map.WKTMap1.FDurationMicrosecondString1Entry.value:type_name -> google.protobuf.Duration
	32, // 40: wkt_map.WKTMap1.FDurationMillisecond1Entry.value:type_name -> google.protobuf.Duration
	32, // 41: wkt_map.WKTMap1.FDurationMillisecondString1Entry.value:type_name -> google.protobuf.Duration
	32, // 42: wkt_map.WKTMap1.FDurationSecond1Entry.value:type_name -> google.protobuf.Duration
	32, // 43: wkt_map.WKTMap1.FDurationSecondString1Entry.value:type_name -> google.protobuf.Duration
	32, // 44: wkt_map.WKTMap1.FDurationMinute1Entry.value:type_name -> google.protobuf.Duration
	32, // 45: wkt_map.WKTMap1.FDurationMinuteString1Entry.value:type_name -> google.protobuf.Duration
	32, // 46: wkt_map.WKTMap1.FDurationHour1Entry.value:type_name -> google.protobuf.Duration
	32, // 47: wkt_map.WKTMap1.FDurationHourString1Entry.value:type_name -> google.protobuf.Duration
	33, // 48: wkt_map.WKTMap1.FTimestampNative1Entry.value:type_name -> google.protobuf.Timestamp
	33, // 49: wkt_map.WKTMap1.FTimestampTimeLayout1Entry.value:type_name -> google.protobuf.Timestamp
	33, // 50: wkt_map.WKTMap1.FTimestampUnixNano1Entry.value:type_name -> google.protobuf.Timestamp
	33, // 51: wkt_map.WKTMap1.FTimestampUnixNanoString1Entry.value:type_name -> google.protobuf.Timestamp
	33, // 52: wkt_map.WKTMap1.FTimestampUnixMicro1Entry.value:type_name -> google.protobuf.Timestamp
	33, // 53: wkt_map.WKTMap1.FTimestampUnixMicroString1Entry.value:type_name -> google.protobuf.Timestamp
	33, // 54: wkt_map.WKTMap1.FTimestampUnixMilli1Entry.value:type_name -> google.protobuf.Timestamp
	33, // 55: wkt_map.WKTMap1.FTimestampUnixMilliString1Entry.value:type_name -> google.protobuf.Timestamp
	33, // 56: wkt_map.WKTMap1.FTimestampUnixSec1Entry.value:type_name -> google.protobuf.Timestamp
	33, // 57: wkt_map.WKTMap1.FTimestampUnixSecString1Entry.value:type_name -> google.protobuf.Timestamp
	58, // [58:58] is the sub-list for method output_type
	58, // [58:58] is the sub-list for method input_type
	58, // [58:58] is the sub-list for extension type_name
	58, // [58:58] is the sub-list for extension extendee
	0,  // [0:58] is the sub-list for field type_name
}

func init() { file_tests_proto_cases_format_wkt_map_proto_init() }
func file_tests_proto_cases_format_wkt_map_proto_init() {
	if File_tests_proto_cases_format_wkt_map_proto != nil {
		return
	}
	file_tests_proto_cases_format_private_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tests_proto_cases_format_wkt_map_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WKTMap1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tests_proto_cases_format_wkt_map_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tests_proto_cases_format_wkt_map_proto_goTypes,
		DependencyIndexes: file_tests_proto_cases_format_wkt_map_proto_depIdxs,
		MessageInfos:      file_tests_proto_cases_format_wkt_map_proto_msgTypes,
	}.Build()
	File_tests_proto_cases_format_wkt_map_proto = out.File
	file_tests_proto_cases_format_wkt_map_proto_rawDesc = nil
	file_tests_proto_cases_format_wkt_map_proto_goTypes = nil
	file_tests_proto_cases_format_wkt_map_proto_depIdxs = nil
}
