// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: tests/proto/cases/sets/set_map.proto

package pbsets

import (
	_ "github.com/yu31/protoc-plugin-json/xgo/pb/pbjson"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TypeSetMap1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FAnyNative1            map[string]*anypb.Any             `protobuf:"bytes,1,rep,name=f_any_native1,json=fAnyNative1,proto3" json:"f_any_native1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FAnyNative2            map[string]*anypb.Any             `protobuf:"bytes,2,rep,name=f_any_native2,json=fAnyNative2,proto3" json:"f_any_native2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FAnyProto1             map[string]*anypb.Any             `protobuf:"bytes,3,rep,name=f_any_proto1,json=fAnyProto1,proto3" json:"f_any_proto1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FAnyProto2             map[string]*anypb.Any             `protobuf:"bytes,4,rep,name=f_any_proto2,json=fAnyProto2,proto3" json:"f_any_proto2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationNative1       map[string]*durationpb.Duration   `protobuf:"bytes,11,rep,name=f_duration_native1,json=fDurationNative1,proto3" json:"f_duration_native1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationNative2       map[string]*durationpb.Duration   `protobuf:"bytes,21,rep,name=f_duration_native2,json=fDurationNative2,proto3" json:"f_duration_native2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationString1       map[string]*durationpb.Duration   `protobuf:"bytes,12,rep,name=f_duration_string1,json=fDurationString1,proto3" json:"f_duration_string1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationString2       map[string]*durationpb.Duration   `protobuf:"bytes,22,rep,name=f_duration_string2,json=fDurationString2,proto3" json:"f_duration_string2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationNanoseconds1  map[string]*durationpb.Duration   `protobuf:"bytes,13,rep,name=f_duration_nanoseconds1,json=fDurationNanoseconds1,proto3" json:"f_duration_nanoseconds1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationNanoseconds2  map[string]*durationpb.Duration   `protobuf:"bytes,23,rep,name=f_duration_nanoseconds2,json=fDurationNanoseconds2,proto3" json:"f_duration_nanoseconds2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationMicroseconds1 map[string]*durationpb.Duration   `protobuf:"bytes,14,rep,name=f_duration_microseconds1,json=fDurationMicroseconds1,proto3" json:"f_duration_microseconds1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationMicroseconds2 map[string]*durationpb.Duration   `protobuf:"bytes,24,rep,name=f_duration_microseconds2,json=fDurationMicroseconds2,proto3" json:"f_duration_microseconds2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationMilliseconds1 map[string]*durationpb.Duration   `protobuf:"bytes,15,rep,name=f_duration_milliseconds1,json=fDurationMilliseconds1,proto3" json:"f_duration_milliseconds1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationMilliseconds2 map[string]*durationpb.Duration   `protobuf:"bytes,25,rep,name=f_duration_milliseconds2,json=fDurationMilliseconds2,proto3" json:"f_duration_milliseconds2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationSeconds1      map[string]*durationpb.Duration   `protobuf:"bytes,16,rep,name=f_duration_seconds1,json=fDurationSeconds1,proto3" json:"f_duration_seconds1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationSeconds2      map[string]*durationpb.Duration   `protobuf:"bytes,26,rep,name=f_duration_seconds2,json=fDurationSeconds2,proto3" json:"f_duration_seconds2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationMinutes1      map[string]*durationpb.Duration   `protobuf:"bytes,17,rep,name=f_duration_minutes1,json=fDurationMinutes1,proto3" json:"f_duration_minutes1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationMinutes2      map[string]*durationpb.Duration   `protobuf:"bytes,27,rep,name=f_duration_minutes2,json=fDurationMinutes2,proto3" json:"f_duration_minutes2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationHours1        map[string]*durationpb.Duration   `protobuf:"bytes,18,rep,name=f_duration_hours1,json=fDurationHours1,proto3" json:"f_duration_hours1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FDurationHours2        map[string]*durationpb.Duration   `protobuf:"bytes,28,rep,name=f_duration_hours2,json=fDurationHours2,proto3" json:"f_duration_hours2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampNative1      map[string]*timestamppb.Timestamp `protobuf:"bytes,31,rep,name=f_timestamp_native1,json=fTimestampNative1,proto3" json:"f_timestamp_native1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampNative2      map[string]*timestamppb.Timestamp `protobuf:"bytes,41,rep,name=f_timestamp_native2,json=fTimestampNative2,proto3" json:"f_timestamp_native2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampTimeLayout1  map[string]*timestamppb.Timestamp `protobuf:"bytes,32,rep,name=f_timestamp_time_layout1,json=fTimestampTimeLayout1,proto3" json:"f_timestamp_time_layout1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampTimeLayout2  map[string]*timestamppb.Timestamp `protobuf:"bytes,42,rep,name=f_timestamp_time_layout2,json=fTimestampTimeLayout2,proto3" json:"f_timestamp_time_layout2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampUnixNano1    map[string]*timestamppb.Timestamp `protobuf:"bytes,33,rep,name=f_timestamp_unix_nano1,json=fTimestampUnixNano1,proto3" json:"f_timestamp_unix_nano1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampUnixNano2    map[string]*timestamppb.Timestamp `protobuf:"bytes,43,rep,name=f_timestamp_unix_nano2,json=fTimestampUnixNano2,proto3" json:"f_timestamp_unix_nano2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampUnixMicro1   map[string]*timestamppb.Timestamp `protobuf:"bytes,34,rep,name=f_timestamp_unix_micro1,json=fTimestampUnixMicro1,proto3" json:"f_timestamp_unix_micro1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampUnixMicro2   map[string]*timestamppb.Timestamp `protobuf:"bytes,44,rep,name=f_timestamp_unix_micro2,json=fTimestampUnixMicro2,proto3" json:"f_timestamp_unix_micro2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampUnixMilli1   map[string]*timestamppb.Timestamp `protobuf:"bytes,35,rep,name=f_timestamp_unix_milli1,json=fTimestampUnixMilli1,proto3" json:"f_timestamp_unix_milli1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampUnixMilli2   map[string]*timestamppb.Timestamp `protobuf:"bytes,45,rep,name=f_timestamp_unix_milli2,json=fTimestampUnixMilli2,proto3" json:"f_timestamp_unix_milli2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampUnixSec1     map[string]*timestamppb.Timestamp `protobuf:"bytes,36,rep,name=f_timestamp_unix_sec1,json=fTimestampUnixSec1,proto3" json:"f_timestamp_unix_sec1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FTimestampUnixSec2     map[string]*timestamppb.Timestamp `protobuf:"bytes,46,rep,name=f_timestamp_unix_sec2,json=fTimestampUnixSec2,proto3" json:"f_timestamp_unix_sec2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TypeSetMap1) Reset() {
	*x = TypeSetMap1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_sets_set_map_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeSetMap1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeSetMap1) ProtoMessage() {}

func (x *TypeSetMap1) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_sets_set_map_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeSetMap1.ProtoReflect.Descriptor instead.
func (*TypeSetMap1) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_sets_set_map_proto_rawDescGZIP(), []int{0}
}

func (x *TypeSetMap1) GetFAnyNative1() map[string]*anypb.Any {
	if x != nil {
		return x.FAnyNative1
	}
	return nil
}

func (x *TypeSetMap1) GetFAnyNative2() map[string]*anypb.Any {
	if x != nil {
		return x.FAnyNative2
	}
	return nil
}

func (x *TypeSetMap1) GetFAnyProto1() map[string]*anypb.Any {
	if x != nil {
		return x.FAnyProto1
	}
	return nil
}

func (x *TypeSetMap1) GetFAnyProto2() map[string]*anypb.Any {
	if x != nil {
		return x.FAnyProto2
	}
	return nil
}

func (x *TypeSetMap1) GetFDurationNative1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationNative1
	}
	return nil
}

func (x *TypeSetMap1) GetFDurationNative2() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationNative2
	}
	return nil
}

func (x *TypeSetMap1) GetFDurationString1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationString1
	}
	return nil
}

func (x *TypeSetMap1) GetFDurationString2() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationString2
	}
	return nil
}

func (x *TypeSetMap1) GetFDurationNanoseconds1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationNanoseconds1
	}
	return nil
}

func (x *TypeSetMap1) GetFDurationNanoseconds2() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationNanoseconds2
	}
	return nil
}

func (x *TypeSetMap1) GetFDurationMicroseconds1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationMicroseconds1
	}
	return nil
}

func (x *TypeSetMap1) GetFDurationMicroseconds2() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationMicroseconds2
	}
	return nil
}

func (x *TypeSetMap1) GetFDurationMilliseconds1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationMilliseconds1
	}
	return nil
}

func (x *TypeSetMap1) GetFDurationMilliseconds2() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationMilliseconds2
	}
	return nil
}

func (x *TypeSetMap1) GetFDurationSeconds1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationSeconds1
	}
	return nil
}

func (x *TypeSetMap1) GetFDurationSeconds2() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationSeconds2
	}
	return nil
}

func (x *TypeSetMap1) GetFDurationMinutes1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationMinutes1
	}
	return nil
}

func (x *TypeSetMap1) GetFDurationMinutes2() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationMinutes2
	}
	return nil
}

func (x *TypeSetMap1) GetFDurationHours1() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationHours1
	}
	return nil
}

func (x *TypeSetMap1) GetFDurationHours2() map[string]*durationpb.Duration {
	if x != nil {
		return x.FDurationHours2
	}
	return nil
}

func (x *TypeSetMap1) GetFTimestampNative1() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampNative1
	}
	return nil
}

func (x *TypeSetMap1) GetFTimestampNative2() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampNative2
	}
	return nil
}

func (x *TypeSetMap1) GetFTimestampTimeLayout1() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampTimeLayout1
	}
	return nil
}

func (x *TypeSetMap1) GetFTimestampTimeLayout2() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampTimeLayout2
	}
	return nil
}

func (x *TypeSetMap1) GetFTimestampUnixNano1() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampUnixNano1
	}
	return nil
}

func (x *TypeSetMap1) GetFTimestampUnixNano2() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampUnixNano2
	}
	return nil
}

func (x *TypeSetMap1) GetFTimestampUnixMicro1() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampUnixMicro1
	}
	return nil
}

func (x *TypeSetMap1) GetFTimestampUnixMicro2() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampUnixMicro2
	}
	return nil
}

func (x *TypeSetMap1) GetFTimestampUnixMilli1() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampUnixMilli1
	}
	return nil
}

func (x *TypeSetMap1) GetFTimestampUnixMilli2() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampUnixMilli2
	}
	return nil
}

func (x *TypeSetMap1) GetFTimestampUnixSec1() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampUnixSec1
	}
	return nil
}

func (x *TypeSetMap1) GetFTimestampUnixSec2() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.FTimestampUnixSec2
	}
	return nil
}

var File_tests_proto_cases_sets_set_map_proto protoreflect.FileDescriptor

var file_tests_proto_cases_sets_set_map_proto_rawDesc = []byte{
	0x0a, 0x24, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61,
	0x73, 0x65, 0x73, 0x2f, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x1a,
	0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x33,
	0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x12, 0x53, 0x0a,
	0x0d, 0x66, 0x5f, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x41, 0x6e, 0x79, 0x4e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f,
	0x04, 0x62, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x66, 0x41, 0x6e, 0x79, 0x4e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x31, 0x12, 0x53, 0x0a, 0x0d, 0x66, 0x5f, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x32, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x74, 0x5f,
	0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e,
	0x46, 0x41, 0x6e, 0x79, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x62, 0x02, 0x08, 0x00, 0x52, 0x0b, 0x66, 0x41, 0x6e, 0x79,
	0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x32, 0x12, 0x50, 0x0a, 0x0c, 0x66, 0x5f, 0x61, 0x6e, 0x79,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x31, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d,
	0x61, 0x70, 0x31, 0x2e, 0x46, 0x41, 0x6e, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x31, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x62, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x66,
	0x41, 0x6e, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x31, 0x12, 0x50, 0x0a, 0x0c, 0x66, 0x5f, 0x61,
	0x6e, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65,
	0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x41, 0x6e, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x32,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x62, 0x02, 0x10, 0x00, 0x52,
	0x0a, 0x66, 0x41, 0x6e, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x12, 0x62, 0x0a, 0x12, 0x66,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x31, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61,
	0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x08, 0x01, 0x52, 0x10, 0x66,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x12,
	0x62, 0x0a, 0x12, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x32, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x65,
	0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70,
	0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x08,
	0x00, 0x52, 0x10, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x32, 0x12, 0x62, 0x0a, 0x12, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65,
	0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f,
	0x04, 0x6a, 0x02, 0x10, 0x01, 0x52, 0x10, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x62, 0x0a, 0x12, 0x66, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x18, 0x16, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x10, 0x00, 0x52, 0x10, 0x66, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x71, 0x0a, 0x17, 0x66,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x31, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73,
	0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61,
	0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6e, 0x6f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a,
	0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x18, 0x01, 0x52, 0x15, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x31, 0x12, 0x71,
	0x0a, 0x17, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6e,
	0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x32, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65,
	0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x18, 0x00, 0x52, 0x15, 0x66, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x32, 0x12, 0x74, 0x0a, 0x18, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x31, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x31,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x20, 0x01, 0x52,
	0x16, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x31, 0x12, 0x74, 0x0a, 0x18, 0x66, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x32, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x65, 0x74, 0x5f,
	0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e,
	0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f,
	0x04, 0x6a, 0x02, 0x20, 0x00, 0x52, 0x16, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x32, 0x12, 0x74, 0x0a,
	0x18, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6c, 0x6c,
	0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x31, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65,
	0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x31, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x28, 0x01, 0x52, 0x16, 0x66, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x31, 0x12, 0x74, 0x0a, 0x18, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x32, 0x18,
	0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x28,
	0x00, 0x52, 0x16, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c,
	0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x32, 0x12, 0x65, 0x0a, 0x13, 0x66, 0x5f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x31,
	0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x31, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x30, 0x01, 0x52, 0x11, 0x66,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x31,
	0x12, 0x65, 0x0a, 0x13, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x32, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d,
	0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04,
	0x6a, 0x02, 0x30, 0x00, 0x52, 0x11, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x32, 0x12, 0x65, 0x0a, 0x13, 0x66, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x31, 0x18, 0x11,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x31, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x38, 0x01, 0x52, 0x11, 0x66, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x31, 0x12, 0x65,
	0x0a, 0x13, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x73, 0x32, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x65,
	0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70,
	0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x73, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02,
	0x38, 0x00, 0x52, 0x11, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x73, 0x32, 0x12, 0x5f, 0x0a, 0x11, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x31, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53,
	0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f,
	0x04, 0x6a, 0x02, 0x40, 0x01, 0x52, 0x0f, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x31, 0x12, 0x5f, 0x0a, 0x11, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x32, 0x18, 0x1c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2,
	0x1f, 0x04, 0x6a, 0x02, 0x40, 0x00, 0x52, 0x0f, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x32, 0x12, 0x65, 0x0a, 0x13, 0x66, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x18, 0x1f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x72, 0x02, 0x08, 0x01, 0x52, 0x11, 0x66, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x12, 0x65,
	0x0a, 0x13, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x32, 0x18, 0x29, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x65,
	0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70,
	0x31, 0x2e, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x72, 0x02,
	0x08, 0x00, 0x52, 0x11, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x32, 0x12, 0x8d, 0x01, 0x0a, 0x18, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x31, 0x18, 0x20, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d,
	0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x23, 0x8a, 0xa2, 0x1f, 0x1f, 0x72,
	0x1d, 0x12, 0x1b, 0x0a, 0x19, 0x32, 0x30, 0x30, 0x36, 0x2d, 0x30, 0x31, 0x2d, 0x30, 0x32, 0x54,
	0x31, 0x35, 0x3a, 0x30, 0x34, 0x3a, 0x30, 0x35, 0x5a, 0x30, 0x37, 0x3a, 0x30, 0x30, 0x52, 0x15,
	0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x31, 0x12, 0x91, 0x01, 0x0a, 0x18, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x32, 0x18, 0x2a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d,
	0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x27, 0x8a, 0xa2, 0x1f, 0x23, 0x72,
	0x21, 0x12, 0x1f, 0x0a, 0x1d, 0x4d, 0x6f, 0x6e, 0x2c, 0x20, 0x30, 0x32, 0x20, 0x4a, 0x61, 0x6e,
	0x20, 0x32, 0x30, 0x30, 0x36, 0x20, 0x31, 0x35, 0x3a, 0x30, 0x34, 0x3a, 0x30, 0x35, 0x20, 0x4d,
	0x53, 0x54, 0x52, 0x15, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x32, 0x12, 0x6c, 0x0a, 0x16, 0x66, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6e, 0x61,
	0x6e, 0x6f, 0x31, 0x18, 0x21, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x65, 0x74, 0x5f,
	0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e,
	0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4e, 0x61,
	0x6e, 0x6f, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x72, 0x02,
	0x18, 0x01, 0x52, 0x13, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e,
	0x69, 0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x31, 0x12, 0x6c, 0x0a, 0x16, 0x66, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6e, 0x61, 0x6e, 0x6f,
	0x32, 0x18, 0x2b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61,
	0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4e, 0x61, 0x6e, 0x6f,
	0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x72, 0x02, 0x18, 0x00,
	0x52, 0x13, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78,
	0x4e, 0x61, 0x6e, 0x6f, 0x32, 0x12, 0x6f, 0x0a, 0x17, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x31,
	0x18, 0x22, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x63, 0x72, 0x6f,
	0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x72, 0x02, 0x20, 0x01,
	0x52, 0x14, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78,
	0x4d, 0x69, 0x63, 0x72, 0x6f, 0x31, 0x12, 0x6f, 0x0a, 0x17, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x32, 0x18, 0x2c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61,
	0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x63, 0x72,
	0x6f, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x72, 0x02, 0x20,
	0x00, 0x52, 0x14, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69,
	0x78, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x32, 0x12, 0x6f, 0x0a, 0x17, 0x66, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6d, 0x69, 0x6c, 0x6c,
	0x69, 0x31, 0x18, 0x23, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d,
	0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6c,
	0x6c, 0x69, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x72, 0x02,
	0x28, 0x01, 0x52, 0x14, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e,
	0x69, 0x78, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x31, 0x12, 0x6f, 0x0a, 0x17, 0x66, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6d, 0x69, 0x6c,
	0x6c, 0x69, 0x32, 0x18, 0x2d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x65, 0x74, 0x5f,
	0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e,
	0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69,
	0x6c, 0x6c, 0x69, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x72,
	0x02, 0x28, 0x00, 0x52, 0x14, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55,
	0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x32, 0x12, 0x69, 0x0a, 0x15, 0x66, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x73, 0x65,
	0x63, 0x31, 0x18, 0x24, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d,
	0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x53, 0x65, 0x63,
	0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x72, 0x02, 0x30, 0x01,
	0x52, 0x12, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78,
	0x53, 0x65, 0x63, 0x31, 0x12, 0x69, 0x0a, 0x15, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x73, 0x65, 0x63, 0x32, 0x18, 0x2e, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x53, 0x65, 0x63, 0x32, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x72, 0x02, 0x30, 0x00, 0x52, 0x12, 0x66, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x53, 0x65, 0x63, 0x32, 0x1a,
	0x54, 0x0a, 0x10, 0x46, 0x41, 0x6e, 0x79, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x54, 0x0a, 0x10, 0x46, 0x41, 0x6e, 0x79, 0x4e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x53, 0x0a, 0x0f, 0x46,
	0x41, 0x6e, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x53, 0x0a, 0x0f, 0x46, 0x41, 0x6e, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5e, 0x0a, 0x15, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5e, 0x0a, 0x15, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5e, 0x0a, 0x15, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5e, 0x0a, 0x15, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x63, 0x0a, 0x1a, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x31, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x63, 0x0a, 0x1a, 0x46, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x64, 0x0a, 0x1b, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x64, 0x0a, 0x1b, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x32, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x64, 0x0a, 0x1b, 0x46,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x64, 0x0a, 0x1b, 0x46, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5f, 0x0a, 0x16, 0x46, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x31, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5f, 0x0a, 0x16, 0x46, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x32, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5f, 0x0a, 0x16, 0x46, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x31, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5f, 0x0a, 0x16, 0x46, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x32, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5d, 0x0a, 0x14, 0x46,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x31, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5d, 0x0a, 0x14, 0x46, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x32, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x60, 0x0a, 0x16, 0x46, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x60, 0x0a, 0x16, 0x46,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x32,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x64, 0x0a,
	0x1a, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x4c,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x64, 0x0a, 0x1a, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x32, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x62, 0x0a, 0x18, 0x46, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x31,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x62, 0x0a,
	0x18, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4e,
	0x61, 0x6e, 0x6f, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x63, 0x0a, 0x19, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55,
	0x6e, 0x69, 0x78, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x63, 0x0a, 0x19, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x32, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x63, 0x0a, 0x19, 0x46,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6c,
	0x6c, 0x69, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x63, 0x0a, 0x19, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e,
	0x69, 0x78, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x61, 0x0a, 0x17, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x53, 0x65, 0x63, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x61, 0x0a, 0x17, 0x46, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x53, 0x65, 0x63, 0x32, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x15, 0x5a, 0x13, 0x78,
	0x67, 0x6f, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x62, 0x73, 0x65,
	0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tests_proto_cases_sets_set_map_proto_rawDescOnce sync.Once
	file_tests_proto_cases_sets_set_map_proto_rawDescData = file_tests_proto_cases_sets_set_map_proto_rawDesc
)

func file_tests_proto_cases_sets_set_map_proto_rawDescGZIP() []byte {
	file_tests_proto_cases_sets_set_map_proto_rawDescOnce.Do(func() {
		file_tests_proto_cases_sets_set_map_proto_rawDescData = protoimpl.X.CompressGZIP(file_tests_proto_cases_sets_set_map_proto_rawDescData)
	})
	return file_tests_proto_cases_sets_set_map_proto_rawDescData
}

var file_tests_proto_cases_sets_set_map_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_tests_proto_cases_sets_set_map_proto_goTypes = []interface{}{
	(*TypeSetMap1)(nil),           // 0: set_map.TypeSetMap1
	nil,                           // 1: set_map.TypeSetMap1.FAnyNative1Entry
	nil,                           // 2: set_map.TypeSetMap1.FAnyNative2Entry
	nil,                           // 3: set_map.TypeSetMap1.FAnyProto1Entry
	nil,                           // 4: set_map.TypeSetMap1.FAnyProto2Entry
	nil,                           // 5: set_map.TypeSetMap1.FDurationNative1Entry
	nil,                           // 6: set_map.TypeSetMap1.FDurationNative2Entry
	nil,                           // 7: set_map.TypeSetMap1.FDurationString1Entry
	nil,                           // 8: set_map.TypeSetMap1.FDurationString2Entry
	nil,                           // 9: set_map.TypeSetMap1.FDurationNanoseconds1Entry
	nil,                           // 10: set_map.TypeSetMap1.FDurationNanoseconds2Entry
	nil,                           // 11: set_map.TypeSetMap1.FDurationMicroseconds1Entry
	nil,                           // 12: set_map.TypeSetMap1.FDurationMicroseconds2Entry
	nil,                           // 13: set_map.TypeSetMap1.FDurationMilliseconds1Entry
	nil,                           // 14: set_map.TypeSetMap1.FDurationMilliseconds2Entry
	nil,                           // 15: set_map.TypeSetMap1.FDurationSeconds1Entry
	nil,                           // 16: set_map.TypeSetMap1.FDurationSeconds2Entry
	nil,                           // 17: set_map.TypeSetMap1.FDurationMinutes1Entry
	nil,                           // 18: set_map.TypeSetMap1.FDurationMinutes2Entry
	nil,                           // 19: set_map.TypeSetMap1.FDurationHours1Entry
	nil,                           // 20: set_map.TypeSetMap1.FDurationHours2Entry
	nil,                           // 21: set_map.TypeSetMap1.FTimestampNative1Entry
	nil,                           // 22: set_map.TypeSetMap1.FTimestampNative2Entry
	nil,                           // 23: set_map.TypeSetMap1.FTimestampTimeLayout1Entry
	nil,                           // 24: set_map.TypeSetMap1.FTimestampTimeLayout2Entry
	nil,                           // 25: set_map.TypeSetMap1.FTimestampUnixNano1Entry
	nil,                           // 26: set_map.TypeSetMap1.FTimestampUnixNano2Entry
	nil,                           // 27: set_map.TypeSetMap1.FTimestampUnixMicro1Entry
	nil,                           // 28: set_map.TypeSetMap1.FTimestampUnixMicro2Entry
	nil,                           // 29: set_map.TypeSetMap1.FTimestampUnixMilli1Entry
	nil,                           // 30: set_map.TypeSetMap1.FTimestampUnixMilli2Entry
	nil,                           // 31: set_map.TypeSetMap1.FTimestampUnixSec1Entry
	nil,                           // 32: set_map.TypeSetMap1.FTimestampUnixSec2Entry
	(*anypb.Any)(nil),             // 33: google.protobuf.Any
	(*durationpb.Duration)(nil),   // 34: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil), // 35: google.protobuf.Timestamp
}
var file_tests_proto_cases_sets_set_map_proto_depIdxs = []int32{
	1,  // 0: set_map.TypeSetMap1.f_any_native1:type_name -> set_map.TypeSetMap1.FAnyNative1Entry
	2,  // 1: set_map.TypeSetMap1.f_any_native2:type_name -> set_map.TypeSetMap1.FAnyNative2Entry
	3,  // 2: set_map.TypeSetMap1.f_any_proto1:type_name -> set_map.TypeSetMap1.FAnyProto1Entry
	4,  // 3: set_map.TypeSetMap1.f_any_proto2:type_name -> set_map.TypeSetMap1.FAnyProto2Entry
	5,  // 4: set_map.TypeSetMap1.f_duration_native1:type_name -> set_map.TypeSetMap1.FDurationNative1Entry
	6,  // 5: set_map.TypeSetMap1.f_duration_native2:type_name -> set_map.TypeSetMap1.FDurationNative2Entry
	7,  // 6: set_map.TypeSetMap1.f_duration_string1:type_name -> set_map.TypeSetMap1.FDurationString1Entry
	8,  // 7: set_map.TypeSetMap1.f_duration_string2:type_name -> set_map.TypeSetMap1.FDurationString2Entry
	9,  // 8: set_map.TypeSetMap1.f_duration_nanoseconds1:type_name -> set_map.TypeSetMap1.FDurationNanoseconds1Entry
	10, // 9: set_map.TypeSetMap1.f_duration_nanoseconds2:type_name -> set_map.TypeSetMap1.FDurationNanoseconds2Entry
	11, // 10: set_map.TypeSetMap1.f_duration_microseconds1:type_name -> set_map.TypeSetMap1.FDurationMicroseconds1Entry
	12, // 11: set_map.TypeSetMap1.f_duration_microseconds2:type_name -> set_map.TypeSetMap1.FDurationMicroseconds2Entry
	13, // 12: set_map.TypeSetMap1.f_duration_milliseconds1:type_name -> set_map.TypeSetMap1.FDurationMilliseconds1Entry
	14, // 13: set_map.TypeSetMap1.f_duration_milliseconds2:type_name -> set_map.TypeSetMap1.FDurationMilliseconds2Entry
	15, // 14: set_map.TypeSetMap1.f_duration_seconds1:type_name -> set_map.TypeSetMap1.FDurationSeconds1Entry
	16, // 15: set_map.TypeSetMap1.f_duration_seconds2:type_name -> set_map.TypeSetMap1.FDurationSeconds2Entry
	17, // 16: set_map.TypeSetMap1.f_duration_minutes1:type_name -> set_map.TypeSetMap1.FDurationMinutes1Entry
	18, // 17: set_map.TypeSetMap1.f_duration_minutes2:type_name -> set_map.TypeSetMap1.FDurationMinutes2Entry
	19, // 18: set_map.TypeSetMap1.f_duration_hours1:type_name -> set_map.TypeSetMap1.FDurationHours1Entry
	20, // 19: set_map.TypeSetMap1.f_duration_hours2:type_name -> set_map.TypeSetMap1.FDurationHours2Entry
	21, // 20: set_map.TypeSetMap1.f_timestamp_native1:type_name -> set_map.TypeSetMap1.FTimestampNative1Entry
	22, // 21: set_map.TypeSetMap1.f_timestamp_native2:type_name -> set_map.TypeSetMap1.FTimestampNative2Entry
	23, // 22: set_map.TypeSetMap1.f_timestamp_time_layout1:type_name -> set_map.TypeSetMap1.FTimestampTimeLayout1Entry
	24, // 23: set_map.TypeSetMap1.f_timestamp_time_layout2:type_name -> set_map.TypeSetMap1.FTimestampTimeLayout2Entry
	25, // 24: set_map.TypeSetMap1.f_timestamp_unix_nano1:type_name -> set_map.TypeSetMap1.FTimestampUnixNano1Entry
	26, // 25: set_map.TypeSetMap1.f_timestamp_unix_nano2:type_name -> set_map.TypeSetMap1.FTimestampUnixNano2Entry
	27, // 26: set_map.TypeSetMap1.f_timestamp_unix_micro1:type_name -> set_map.TypeSetMap1.FTimestampUnixMicro1Entry
	28, // 27: set_map.TypeSetMap1.f_timestamp_unix_micro2:type_name -> set_map.TypeSetMap1.FTimestampUnixMicro2Entry
	29, // 28: set_map.TypeSetMap1.f_timestamp_unix_milli1:type_name -> set_map.TypeSetMap1.FTimestampUnixMilli1Entry
	30, // 29: set_map.TypeSetMap1.f_timestamp_unix_milli2:type_name -> set_map.TypeSetMap1.FTimestampUnixMilli2Entry
	31, // 30: set_map.TypeSetMap1.f_timestamp_unix_sec1:type_name -> set_map.TypeSetMap1.FTimestampUnixSec1Entry
	32, // 31: set_map.TypeSetMap1.f_timestamp_unix_sec2:type_name -> set_map.TypeSetMap1.FTimestampUnixSec2Entry
	33, // 32: set_map.TypeSetMap1.FAnyNative1Entry.value:type_name -> google.protobuf.Any
	33, // 33: set_map.TypeSetMap1.FAnyNative2Entry.value:type_name -> google.protobuf.Any
	33, // 34: set_map.TypeSetMap1.FAnyProto1Entry.value:type_name -> google.protobuf.Any
	33, // 35: set_map.TypeSetMap1.FAnyProto2Entry.value:type_name -> google.protobuf.Any
	34, // 36: set_map.TypeSetMap1.FDurationNative1Entry.value:type_name -> google.protobuf.Duration
	34, // 37: set_map.TypeSetMap1.FDurationNative2Entry.value:type_name -> google.protobuf.Duration
	34, // 38: set_map.TypeSetMap1.FDurationString1Entry.value:type_name -> google.protobuf.Duration
	34, // 39: set_map.TypeSetMap1.FDurationString2Entry.value:type_name -> google.protobuf.Duration
	34, // 40: set_map.TypeSetMap1.FDurationNanoseconds1Entry.value:type_name -> google.protobuf.Duration
	34, // 41: set_map.TypeSetMap1.FDurationNanoseconds2Entry.value:type_name -> google.protobuf.Duration
	34, // 42: set_map.TypeSetMap1.FDurationMicroseconds1Entry.value:type_name -> google.protobuf.Duration
	34, // 43: set_map.TypeSetMap1.FDurationMicroseconds2Entry.value:type_name -> google.protobuf.Duration
	34, // 44: set_map.TypeSetMap1.FDurationMilliseconds1Entry.value:type_name -> google.protobuf.Duration
	34, // 45: set_map.TypeSetMap1.FDurationMilliseconds2Entry.value:type_name -> google.protobuf.Duration
	34, // 46: set_map.TypeSetMap1.FDurationSeconds1Entry.value:type_name -> google.protobuf.Duration
	34, // 47: set_map.TypeSetMap1.FDurationSeconds2Entry.value:type_name -> google.protobuf.Duration
	34, // 48: set_map.TypeSetMap1.FDurationMinutes1Entry.value:type_name -> google.protobuf.Duration
	34, // 49: set_map.TypeSetMap1.FDurationMinutes2Entry.value:type_name -> google.protobuf.Duration
	34, // 50: set_map.TypeSetMap1.FDurationHours1Entry.value:type_name -> google.protobuf.Duration
	34, // 51: set_map.TypeSetMap1.FDurationHours2Entry.value:type_name -> google.protobuf.Duration
	35, // 52: set_map.TypeSetMap1.FTimestampNative1Entry.value:type_name -> google.protobuf.Timestamp
	35, // 53: set_map.TypeSetMap1.FTimestampNative2Entry.value:type_name -> google.protobuf.Timestamp
	35, // 54: set_map.TypeSetMap1.FTimestampTimeLayout1Entry.value:type_name -> google.protobuf.Timestamp
	35, // 55: set_map.TypeSetMap1.FTimestampTimeLayout2Entry.value:type_name -> google.protobuf.Timestamp
	35, // 56: set_map.TypeSetMap1.FTimestampUnixNano1Entry.value:type_name -> google.protobuf.Timestamp
	35, // 57: set_map.TypeSetMap1.FTimestampUnixNano2Entry.value:type_name -> google.protobuf.Timestamp
	35, // 58: set_map.TypeSetMap1.FTimestampUnixMicro1Entry.value:type_name -> google.protobuf.Timestamp
	35, // 59: set_map.TypeSetMap1.FTimestampUnixMicro2Entry.value:type_name -> google.protobuf.Timestamp
	35, // 60: set_map.TypeSetMap1.FTimestampUnixMilli1Entry.value:type_name -> google.protobuf.Timestamp
	35, // 61: set_map.TypeSetMap1.FTimestampUnixMilli2Entry.value:type_name -> google.protobuf.Timestamp
	35, // 62: set_map.TypeSetMap1.FTimestampUnixSec1Entry.value:type_name -> google.protobuf.Timestamp
	35, // 63: set_map.TypeSetMap1.FTimestampUnixSec2Entry.value:type_name -> google.protobuf.Timestamp
	64, // [64:64] is the sub-list for method output_type
	64, // [64:64] is the sub-list for method input_type
	64, // [64:64] is the sub-list for extension type_name
	64, // [64:64] is the sub-list for extension extendee
	0,  // [0:64] is the sub-list for field type_name
}

func init() { file_tests_proto_cases_sets_set_map_proto_init() }
func file_tests_proto_cases_sets_set_map_proto_init() {
	if File_tests_proto_cases_sets_set_map_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tests_proto_cases_sets_set_map_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeSetMap1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tests_proto_cases_sets_set_map_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tests_proto_cases_sets_set_map_proto_goTypes,
		DependencyIndexes: file_tests_proto_cases_sets_set_map_proto_depIdxs,
		MessageInfos:      file_tests_proto_cases_sets_set_map_proto_msgTypes,
	}.Build()
	File_tests_proto_cases_sets_set_map_proto = out.File
	file_tests_proto_cases_sets_set_map_proto_rawDesc = nil
	file_tests_proto_cases_sets_set_map_proto_goTypes = nil
	file_tests_proto_cases_sets_set_map_proto_depIdxs = nil
}
