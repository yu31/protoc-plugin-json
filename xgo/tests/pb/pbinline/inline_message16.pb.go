// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: tests/proto/cases/inline/inline_message16.proto

package pbinline

import (
	_ "github.com/yu31/protoc-plugin-json/xgo/pb/pbjson"
	pbexternal "github.com/yu31/protoc-plugin-json/xgo/tests/pb/pbexternal"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Link to 26/27/28/29
type MessageLevel16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Field for literal.
	Level16FString1 string `protobuf:"bytes,1,opt,name=level16_f_string1,json=level16FString1,proto3" json:"level16_f_string1,omitempty"`
	Level16FString2 string `protobuf:"bytes,2,opt,name=level16_f_string2,json=level16FString2,proto3" json:"level16_f_string2,omitempty"`
	// Field for optional.
	Level16PString1 *string `protobuf:"bytes,11,opt,name=level16_p_string1,json=level16PString1,proto3,oneof" json:"level16_p_string1,omitempty"`
	Level16PString2 *string `protobuf:"bytes,12,opt,name=level16_p_string2,json=level16PString2,proto3,oneof" json:"level16_p_string2,omitempty"`
	// Field for repeated.
	Level16RString1 []string `protobuf:"bytes,21,rep,name=level16_r_string1,json=level16RString1,proto3" json:"level16_r_string1,omitempty"`
	Level16RString2 []string `protobuf:"bytes,22,rep,name=level16_r_string2,json=level16RString2,proto3" json:"level16_r_string2,omitempty"`
	// Field for map.
	Level16MString1 map[string]string `protobuf:"bytes,31,rep,name=level16_m_string1,json=level16MString1,proto3" json:"level16_m_string1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Level16MString2 map[string]string `protobuf:"bytes,32,rep,name=level16_m_string2,json=level16MString2,proto3" json:"level16_m_string2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Field message and extern-line.
	Level16FMessageExtern1 *pbexternal.Message1 `protobuf:"bytes,41,opt,name=level16_f_message_extern1,json=level16FMessageExtern1,proto3" json:"level16_f_message_extern1,omitempty"`
	Level16FMessageExtern2 *pbexternal.Message1 `protobuf:"bytes,47,opt,name=level16_f_message_extern2,json=level16FMessageExtern2,proto3" json:"level16_f_message_extern2,omitempty"`
	// Field message and inline.
	Level16FMessageInline26 *MessageLevel26 `protobuf:"bytes,42,opt,name=level16_f_message_inline26,json=level16FMessageInline26,proto3" json:"level16_f_message_inline26,omitempty"`
	Level16FMessageInline27 *MessageLevel27 `protobuf:"bytes,46,opt,name=level16_f_message_inline27,json=level16FMessageInline27,proto3" json:"level16_f_message_inline27,omitempty"`
	// Field for oneof and extern-line.
	//
	// Types that are assignable to Level16OneOfExtern1:
	//	*MessageLevel16_Level16One1String1
	//	*MessageLevel16_Level16One1MessageInline26
	//	*MessageLevel16_Level16One1MessageInline27
	//	*MessageLevel16_Level16One1MessageInlineEmtpy
	//	*MessageLevel16_Level16One1MessageInlineIgnoreByRef
	//	*MessageLevel16_Level16One1MessageInlineIgnoreFields
	Level16OneOfExtern1 isMessageLevel16_Level16OneOfExtern1 `protobuf_oneof:"Level16OneOfExtern1"`
	// Field for oneof and inline.
	//
	// Types that are assignable to Level16OneOfInline1:
	//	*MessageLevel16_Level16One2String1
	//	*MessageLevel16_Level16One2MessageExtern1
	//	*MessageLevel16_Level16One2MessageExtern2
	//	*MessageLevel16_Level16One2MessageInline28
	//	*MessageLevel16_Level16One2MessageInline29
	//	*MessageLevel16_Level16One2MessageInlineEmtpy
	//	*MessageLevel16_Level16One2MessageInlineIgnoreByRef
	//	*MessageLevel16_Level16One2MessageInlineIgnoreFields
	Level16OneOfInline1 isMessageLevel16_Level16OneOfInline1 `protobuf_oneof:"Level16OneOfInline1"`
	// Types that are assignable to Level16OneOfOmitempty1:
	//	*MessageLevel16_Level16One3String1
	//	*MessageLevel16_Level16One3Int32A
	Level16OneOfOmitempty1            isMessageLevel16_Level16OneOfOmitempty1 `protobuf_oneof:"Level16OneOfOmitempty1"`
	Level16FMessageInlineEmtpy        *MessageEmpty1                          `protobuf:"bytes,43,opt,name=level16_f_message_inline_emtpy,json=level16FMessageInlineEmtpy,proto3" json:"level16_f_message_inline_emtpy,omitempty"`
	Level16FMessageInlineIgnoreByRef  *MessageIgnoreByRef                     `protobuf:"bytes,44,opt,name=level16_f_message_inline_ignore_by_ref,json=level16FMessageInlineIgnoreByRef,proto3" json:"level16_f_message_inline_ignore_by_ref,omitempty"`
	Level16FMessageInlineIgnoreFields *MessageIgnoreFields                    `protobuf:"bytes,45,opt,name=level16_f_message_inline_ignore_fields,json=level16FMessageInlineIgnoreFields,proto3" json:"level16_f_message_inline_ignore_fields,omitempty"`
	// Types that are assignable to Level16OneOfIgnoreSelf1:
	//	*MessageLevel16_Level16One4String1
	//	*MessageLevel16_Level16One4Int32A
	Level16OneOfIgnoreSelf1 isMessageLevel16_Level16OneOfIgnoreSelf1 `protobuf_oneof:"Level16OneOfIgnoreSelf1"`
	// Types that are assignable to Level16OneOfIgnoreParts1:
	//	*MessageLevel16_Level16One5String1
	//	*MessageLevel16_Level16One5Int32A
	Level16OneOfIgnoreParts1 isMessageLevel16_Level16OneOfIgnoreParts1 `protobuf_oneof:"Level16OneOfIgnoreParts1"`
}

func (x *MessageLevel16) Reset() {
	*x = MessageLevel16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_inline_inline_message16_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageLevel16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageLevel16) ProtoMessage() {}

func (x *MessageLevel16) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_inline_inline_message16_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageLevel16.ProtoReflect.Descriptor instead.
func (*MessageLevel16) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_inline_inline_message16_proto_rawDescGZIP(), []int{0}
}

func (x *MessageLevel16) GetLevel16FString1() string {
	if x != nil {
		return x.Level16FString1
	}
	return ""
}

func (x *MessageLevel16) GetLevel16FString2() string {
	if x != nil {
		return x.Level16FString2
	}
	return ""
}

func (x *MessageLevel16) GetLevel16PString1() string {
	if x != nil && x.Level16PString1 != nil {
		return *x.Level16PString1
	}
	return ""
}

func (x *MessageLevel16) GetLevel16PString2() string {
	if x != nil && x.Level16PString2 != nil {
		return *x.Level16PString2
	}
	return ""
}

func (x *MessageLevel16) GetLevel16RString1() []string {
	if x != nil {
		return x.Level16RString1
	}
	return nil
}

func (x *MessageLevel16) GetLevel16RString2() []string {
	if x != nil {
		return x.Level16RString2
	}
	return nil
}

func (x *MessageLevel16) GetLevel16MString1() map[string]string {
	if x != nil {
		return x.Level16MString1
	}
	return nil
}

func (x *MessageLevel16) GetLevel16MString2() map[string]string {
	if x != nil {
		return x.Level16MString2
	}
	return nil
}

func (x *MessageLevel16) GetLevel16FMessageExtern1() *pbexternal.Message1 {
	if x != nil {
		return x.Level16FMessageExtern1
	}
	return nil
}

func (x *MessageLevel16) GetLevel16FMessageExtern2() *pbexternal.Message1 {
	if x != nil {
		return x.Level16FMessageExtern2
	}
	return nil
}

func (x *MessageLevel16) GetLevel16FMessageInline26() *MessageLevel26 {
	if x != nil {
		return x.Level16FMessageInline26
	}
	return nil
}

func (x *MessageLevel16) GetLevel16FMessageInline27() *MessageLevel27 {
	if x != nil {
		return x.Level16FMessageInline27
	}
	return nil
}

func (m *MessageLevel16) GetLevel16OneOfExtern1() isMessageLevel16_Level16OneOfExtern1 {
	if m != nil {
		return m.Level16OneOfExtern1
	}
	return nil
}

func (x *MessageLevel16) GetLevel16One1String1() string {
	if x, ok := x.GetLevel16OneOfExtern1().(*MessageLevel16_Level16One1String1); ok {
		return x.Level16One1String1
	}
	return ""
}

func (x *MessageLevel16) GetLevel16One1MessageInline26() *MessageLevel26 {
	if x, ok := x.GetLevel16OneOfExtern1().(*MessageLevel16_Level16One1MessageInline26); ok {
		return x.Level16One1MessageInline26
	}
	return nil
}

func (x *MessageLevel16) GetLevel16One1MessageInline27() *MessageLevel27 {
	if x, ok := x.GetLevel16OneOfExtern1().(*MessageLevel16_Level16One1MessageInline27); ok {
		return x.Level16One1MessageInline27
	}
	return nil
}

func (x *MessageLevel16) GetLevel16One1MessageInlineEmtpy() *MessageEmpty1 {
	if x, ok := x.GetLevel16OneOfExtern1().(*MessageLevel16_Level16One1MessageInlineEmtpy); ok {
		return x.Level16One1MessageInlineEmtpy
	}
	return nil
}

func (x *MessageLevel16) GetLevel16One1MessageInlineIgnoreByRef() *MessageIgnoreByRef {
	if x, ok := x.GetLevel16OneOfExtern1().(*MessageLevel16_Level16One1MessageInlineIgnoreByRef); ok {
		return x.Level16One1MessageInlineIgnoreByRef
	}
	return nil
}

func (x *MessageLevel16) GetLevel16One1MessageInlineIgnoreFields() *MessageIgnoreFields {
	if x, ok := x.GetLevel16OneOfExtern1().(*MessageLevel16_Level16One1MessageInlineIgnoreFields); ok {
		return x.Level16One1MessageInlineIgnoreFields
	}
	return nil
}

func (m *MessageLevel16) GetLevel16OneOfInline1() isMessageLevel16_Level16OneOfInline1 {
	if m != nil {
		return m.Level16OneOfInline1
	}
	return nil
}

func (x *MessageLevel16) GetLevel16One2String1() string {
	if x, ok := x.GetLevel16OneOfInline1().(*MessageLevel16_Level16One2String1); ok {
		return x.Level16One2String1
	}
	return ""
}

func (x *MessageLevel16) GetLevel16One2MessageExtern1() *pbexternal.Message1 {
	if x, ok := x.GetLevel16OneOfInline1().(*MessageLevel16_Level16One2MessageExtern1); ok {
		return x.Level16One2MessageExtern1
	}
	return nil
}

func (x *MessageLevel16) GetLevel16One2MessageExtern2() *pbexternal.Message1 {
	if x, ok := x.GetLevel16OneOfInline1().(*MessageLevel16_Level16One2MessageExtern2); ok {
		return x.Level16One2MessageExtern2
	}
	return nil
}

func (x *MessageLevel16) GetLevel16One2MessageInline28() *MessageLevel28 {
	if x, ok := x.GetLevel16OneOfInline1().(*MessageLevel16_Level16One2MessageInline28); ok {
		return x.Level16One2MessageInline28
	}
	return nil
}

func (x *MessageLevel16) GetLevel16One2MessageInline29() *MessageLevel29 {
	if x, ok := x.GetLevel16OneOfInline1().(*MessageLevel16_Level16One2MessageInline29); ok {
		return x.Level16One2MessageInline29
	}
	return nil
}

func (x *MessageLevel16) GetLevel16One2MessageInlineEmtpy() *MessageEmpty1 {
	if x, ok := x.GetLevel16OneOfInline1().(*MessageLevel16_Level16One2MessageInlineEmtpy); ok {
		return x.Level16One2MessageInlineEmtpy
	}
	return nil
}

func (x *MessageLevel16) GetLevel16One2MessageInlineIgnoreByRef() *MessageIgnoreByRef {
	if x, ok := x.GetLevel16OneOfInline1().(*MessageLevel16_Level16One2MessageInlineIgnoreByRef); ok {
		return x.Level16One2MessageInlineIgnoreByRef
	}
	return nil
}

func (x *MessageLevel16) GetLevel16One2MessageInlineIgnoreFields() *MessageIgnoreFields {
	if x, ok := x.GetLevel16OneOfInline1().(*MessageLevel16_Level16One2MessageInlineIgnoreFields); ok {
		return x.Level16One2MessageInlineIgnoreFields
	}
	return nil
}

func (m *MessageLevel16) GetLevel16OneOfOmitempty1() isMessageLevel16_Level16OneOfOmitempty1 {
	if m != nil {
		return m.Level16OneOfOmitempty1
	}
	return nil
}

func (x *MessageLevel16) GetLevel16One3String1() string {
	if x, ok := x.GetLevel16OneOfOmitempty1().(*MessageLevel16_Level16One3String1); ok {
		return x.Level16One3String1
	}
	return ""
}

func (x *MessageLevel16) GetLevel16One3Int32A() int32 {
	if x, ok := x.GetLevel16OneOfOmitempty1().(*MessageLevel16_Level16One3Int32A); ok {
		return x.Level16One3Int32A
	}
	return 0
}

func (x *MessageLevel16) GetLevel16FMessageInlineEmtpy() *MessageEmpty1 {
	if x != nil {
		return x.Level16FMessageInlineEmtpy
	}
	return nil
}

func (x *MessageLevel16) GetLevel16FMessageInlineIgnoreByRef() *MessageIgnoreByRef {
	if x != nil {
		return x.Level16FMessageInlineIgnoreByRef
	}
	return nil
}

func (x *MessageLevel16) GetLevel16FMessageInlineIgnoreFields() *MessageIgnoreFields {
	if x != nil {
		return x.Level16FMessageInlineIgnoreFields
	}
	return nil
}

func (m *MessageLevel16) GetLevel16OneOfIgnoreSelf1() isMessageLevel16_Level16OneOfIgnoreSelf1 {
	if m != nil {
		return m.Level16OneOfIgnoreSelf1
	}
	return nil
}

func (x *MessageLevel16) GetLevel16One4String1() string {
	if x, ok := x.GetLevel16OneOfIgnoreSelf1().(*MessageLevel16_Level16One4String1); ok {
		return x.Level16One4String1
	}
	return ""
}

func (x *MessageLevel16) GetLevel16One4Int32A() int32 {
	if x, ok := x.GetLevel16OneOfIgnoreSelf1().(*MessageLevel16_Level16One4Int32A); ok {
		return x.Level16One4Int32A
	}
	return 0
}

func (m *MessageLevel16) GetLevel16OneOfIgnoreParts1() isMessageLevel16_Level16OneOfIgnoreParts1 {
	if m != nil {
		return m.Level16OneOfIgnoreParts1
	}
	return nil
}

func (x *MessageLevel16) GetLevel16One5String1() string {
	if x, ok := x.GetLevel16OneOfIgnoreParts1().(*MessageLevel16_Level16One5String1); ok {
		return x.Level16One5String1
	}
	return ""
}

func (x *MessageLevel16) GetLevel16One5Int32A() int32 {
	if x, ok := x.GetLevel16OneOfIgnoreParts1().(*MessageLevel16_Level16One5Int32A); ok {
		return x.Level16One5Int32A
	}
	return 0
}

type isMessageLevel16_Level16OneOfExtern1 interface {
	isMessageLevel16_Level16OneOfExtern1()
}

type MessageLevel16_Level16One1String1 struct {
	Level16One1String1 string `protobuf:"bytes,101,opt,name=level16_one1_string1,json=level16One1String1,proto3,oneof"`
}

type MessageLevel16_Level16One1MessageInline26 struct {
	// Field message and inline.
	Level16One1MessageInline26 *MessageLevel26 `protobuf:"bytes,142,opt,name=level16_one1_message_inline26,json=level16One1MessageInline26,proto3,oneof"`
}

type MessageLevel16_Level16One1MessageInline27 struct {
	Level16One1MessageInline27 *MessageLevel27 `protobuf:"bytes,146,opt,name=level16_one1_message_inline27,json=level16One1MessageInline27,proto3,oneof"`
}

type MessageLevel16_Level16One1MessageInlineEmtpy struct {
	Level16One1MessageInlineEmtpy *MessageEmpty1 `protobuf:"bytes,143,opt,name=level16_one1_message_inline_emtpy,json=level16One1MessageInlineEmtpy,proto3,oneof"`
}

type MessageLevel16_Level16One1MessageInlineIgnoreByRef struct {
	Level16One1MessageInlineIgnoreByRef *MessageIgnoreByRef `protobuf:"bytes,144,opt,name=level16_one1_message_inline_ignore_by_ref,json=level16One1MessageInlineIgnoreByRef,proto3,oneof"`
}

type MessageLevel16_Level16One1MessageInlineIgnoreFields struct {
	Level16One1MessageInlineIgnoreFields *MessageIgnoreFields `protobuf:"bytes,145,opt,name=level16_one1_message_inline_ignore_fields,json=level16One1MessageInlineIgnoreFields,proto3,oneof"`
}

func (*MessageLevel16_Level16One1String1) isMessageLevel16_Level16OneOfExtern1() {}

func (*MessageLevel16_Level16One1MessageInline26) isMessageLevel16_Level16OneOfExtern1() {}

func (*MessageLevel16_Level16One1MessageInline27) isMessageLevel16_Level16OneOfExtern1() {}

func (*MessageLevel16_Level16One1MessageInlineEmtpy) isMessageLevel16_Level16OneOfExtern1() {}

func (*MessageLevel16_Level16One1MessageInlineIgnoreByRef) isMessageLevel16_Level16OneOfExtern1() {}

func (*MessageLevel16_Level16One1MessageInlineIgnoreFields) isMessageLevel16_Level16OneOfExtern1() {}

type isMessageLevel16_Level16OneOfInline1 interface {
	isMessageLevel16_Level16OneOfInline1()
}

type MessageLevel16_Level16One2String1 struct {
	Level16One2String1 string `protobuf:"bytes,201,opt,name=level16_one2_string1,json=level16One2String1,proto3,oneof"`
}

type MessageLevel16_Level16One2MessageExtern1 struct {
	// Field message and extern-line.
	Level16One2MessageExtern1 *pbexternal.Message1 `protobuf:"bytes,211,opt,name=level16_one2_message_extern1,json=level16One2MessageExtern1,proto3,oneof"`
}

type MessageLevel16_Level16One2MessageExtern2 struct {
	Level16One2MessageExtern2 *pbexternal.Message1 `protobuf:"bytes,212,opt,name=level16_one2_message_extern2,json=level16One2MessageExtern2,proto3,oneof"`
}

type MessageLevel16_Level16One2MessageInline28 struct {
	// Field message and inline.
	Level16One2MessageInline28 *MessageLevel28 `protobuf:"bytes,242,opt,name=level16_one2_message_inline28,json=level16One2MessageInline28,proto3,oneof"`
}

type MessageLevel16_Level16One2MessageInline29 struct {
	Level16One2MessageInline29 *MessageLevel29 `protobuf:"bytes,246,opt,name=level16_one2_message_inline29,json=level16One2MessageInline29,proto3,oneof"`
}

type MessageLevel16_Level16One2MessageInlineEmtpy struct {
	Level16One2MessageInlineEmtpy *MessageEmpty1 `protobuf:"bytes,243,opt,name=level16_one2_message_inline_emtpy,json=level16One2MessageInlineEmtpy,proto3,oneof"`
}

type MessageLevel16_Level16One2MessageInlineIgnoreByRef struct {
	Level16One2MessageInlineIgnoreByRef *MessageIgnoreByRef `protobuf:"bytes,244,opt,name=level16_one2_message_inline_ignore_by_ref,json=level16One2MessageInlineIgnoreByRef,proto3,oneof"`
}

type MessageLevel16_Level16One2MessageInlineIgnoreFields struct {
	Level16One2MessageInlineIgnoreFields *MessageIgnoreFields `protobuf:"bytes,245,opt,name=level16_one2_message_inline_ignore_fields,json=level16One2MessageInlineIgnoreFields,proto3,oneof"`
}

func (*MessageLevel16_Level16One2String1) isMessageLevel16_Level16OneOfInline1() {}

func (*MessageLevel16_Level16One2MessageExtern1) isMessageLevel16_Level16OneOfInline1() {}

func (*MessageLevel16_Level16One2MessageExtern2) isMessageLevel16_Level16OneOfInline1() {}

func (*MessageLevel16_Level16One2MessageInline28) isMessageLevel16_Level16OneOfInline1() {}

func (*MessageLevel16_Level16One2MessageInline29) isMessageLevel16_Level16OneOfInline1() {}

func (*MessageLevel16_Level16One2MessageInlineEmtpy) isMessageLevel16_Level16OneOfInline1() {}

func (*MessageLevel16_Level16One2MessageInlineIgnoreByRef) isMessageLevel16_Level16OneOfInline1() {}

func (*MessageLevel16_Level16One2MessageInlineIgnoreFields) isMessageLevel16_Level16OneOfInline1() {}

type isMessageLevel16_Level16OneOfOmitempty1 interface {
	isMessageLevel16_Level16OneOfOmitempty1()
}

type MessageLevel16_Level16One3String1 struct {
	Level16One3String1 string `protobuf:"bytes,301,opt,name=level16_one3_string1,json=level16One3String1,proto3,oneof"`
}

type MessageLevel16_Level16One3Int32A struct {
	Level16One3Int32A int32 `protobuf:"varint,302,opt,name=level16_one3_int32a,json=level16One3Int32a,proto3,oneof"`
}

func (*MessageLevel16_Level16One3String1) isMessageLevel16_Level16OneOfOmitempty1() {}

func (*MessageLevel16_Level16One3Int32A) isMessageLevel16_Level16OneOfOmitempty1() {}

type isMessageLevel16_Level16OneOfIgnoreSelf1 interface {
	isMessageLevel16_Level16OneOfIgnoreSelf1()
}

type MessageLevel16_Level16One4String1 struct {
	Level16One4String1 string `protobuf:"bytes,401,opt,name=level16_one4_string1,json=level16One4String1,proto3,oneof"`
}

type MessageLevel16_Level16One4Int32A struct {
	Level16One4Int32A int32 `protobuf:"varint,402,opt,name=level16_one4_int32a,json=level16One4Int32a,proto3,oneof"`
}

func (*MessageLevel16_Level16One4String1) isMessageLevel16_Level16OneOfIgnoreSelf1() {}

func (*MessageLevel16_Level16One4Int32A) isMessageLevel16_Level16OneOfIgnoreSelf1() {}

type isMessageLevel16_Level16OneOfIgnoreParts1 interface {
	isMessageLevel16_Level16OneOfIgnoreParts1()
}

type MessageLevel16_Level16One5String1 struct {
	Level16One5String1 string `protobuf:"bytes,501,opt,name=level16_one5_string1,json=level16One5String1,proto3,oneof"`
}

type MessageLevel16_Level16One5Int32A struct {
	Level16One5Int32A int32 `protobuf:"varint,502,opt,name=level16_one5_int32a,json=level16One5Int32a,proto3,oneof"`
}

func (*MessageLevel16_Level16One5String1) isMessageLevel16_Level16OneOfIgnoreParts1() {}

func (*MessageLevel16_Level16One5Int32A) isMessageLevel16_Level16OneOfIgnoreParts1() {}

var File_tests_proto_cases_inline_inline_message16_proto protoreflect.FileDescriptor

var file_tests_proto_cases_inline_inline_message16_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61,
	0x73, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x69, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x1a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x74, 0x65, 0x73,
	0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26,
	0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x73, 0x65,
	0x73, 0x2f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x2f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32,
	0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x2f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x32, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x2f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x32, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x2f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x32, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x1c, 0x0a, 0x0e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x12, 0x45, 0x0a,
	0x11, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0x8a, 0xa2, 0x1f, 0x15, 0x0a, 0x13,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x63, 0x5f, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x31, 0x52, 0x0f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x46, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x31, 0x12, 0x30, 0x0a, 0x11, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f,
	0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x0f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x46, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x4a, 0x0a, 0x11, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31,
	0x36, 0x5f, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x19, 0x8a, 0xa2, 0x1f, 0x15, 0x0a, 0x13, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36,
	0x5f, 0x63, 0x5f, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x48, 0x05, 0x52, 0x0f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x50, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x88,
	0x01, 0x01, 0x12, 0x35, 0x0a, 0x11, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x70, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x8a,
	0xa2, 0x1f, 0x00, 0x48, 0x06, 0x52, 0x0f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x50, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x11, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x31, 0x36, 0x5f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x15,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x19, 0x8a, 0xa2, 0x1f, 0x15, 0x0a, 0x13, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x31, 0x36, 0x5f, 0x63, 0x5f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x52,
	0x0f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x52, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31,
	0x12, 0x30, 0x0a, 0x11, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x72, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x32, 0x18, 0x16, 0x20, 0x03, 0x28, 0x09, 0x42, 0x04, 0x8a, 0xa2, 0x1f,
	0x00, 0x52, 0x0f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x52, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x32, 0x12, 0x72, 0x0a, 0x11, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x6d, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x31, 0x36, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4d, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x19, 0x8a, 0xa2, 0x1f, 0x15,
	0x0a, 0x13, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x63, 0x5f, 0x6d, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x31, 0x52, 0x0f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4d, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x5d, 0x0a, 0x11, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31,
	0x36, 0x5f, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x18, 0x20, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31,
	0x36, 0x4d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x04,
	0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x0f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4d, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x55, 0x0a, 0x19, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36,
	0x5f, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x31, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x42, 0x06, 0x8a, 0xa2,
	0x1f, 0x02, 0x20, 0x00, 0x52, 0x16, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x46, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x31, 0x12, 0x55, 0x0a, 0x19,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x32, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x31, 0x42, 0x06, 0x8a, 0xa2, 0x1f, 0x02, 0x20, 0x00, 0x52, 0x16, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x31, 0x36, 0x46, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x32, 0x12, 0x5b, 0x0a, 0x1a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x66,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x32,
	0x36, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x36, 0x42,
	0x06, 0x8a, 0xa2, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x17, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36,
	0x46, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x36,
	0x12, 0x5b, 0x0a, 0x1a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x66, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x18, 0x2e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x37, 0x42, 0x06, 0x8a, 0xa2,
	0x1f, 0x02, 0x20, 0x01, 0x52, 0x17, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x46, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x12, 0x50, 0x0a,
	0x14, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x6f, 0x6e, 0x65, 0x31, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0x8a, 0xa2, 0x1f,
	0x18, 0x0a, 0x16, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x63, 0x5f, 0x6f, 0x6e, 0x65,
	0x31, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x48, 0x00, 0x52, 0x12, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x31, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12,
	0x64, 0x0a, 0x1d, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x6f, 0x6e, 0x65, 0x31, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x36,
	0x18, 0x8e, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x36, 0x42,
	0x06, 0x8a, 0xa2, 0x1f, 0x02, 0x20, 0x01, 0x48, 0x00, 0x52, 0x1a, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x31, 0x36, 0x4f, 0x6e, 0x65, 0x31, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x32, 0x36, 0x12, 0x64, 0x0a, 0x1d, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36,
	0x5f, 0x6f, 0x6e, 0x65, 0x31, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x18, 0x92, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x32, 0x37, 0x42, 0x06, 0x8a, 0xa2, 0x1f, 0x02, 0x20, 0x01, 0x48, 0x00, 0x52,
	0x1a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x31, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x37, 0x12, 0x6a, 0x0a, 0x21, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x6f, 0x6e, 0x65, 0x31, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6d, 0x74, 0x70, 0x79,
	0x18, 0x8f, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x31, 0x42, 0x06,
	0x8a, 0xa2, 0x1f, 0x02, 0x20, 0x01, 0x48, 0x00, 0x52, 0x1d, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31,
	0x36, 0x4f, 0x6e, 0x65, 0x31, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x45, 0x6d, 0x74, 0x70, 0x79, 0x12, 0x7f, 0x0a, 0x29, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x31, 0x36, 0x5f, 0x6f, 0x6e, 0x65, 0x31, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x79,
	0x5f, 0x72, 0x65, 0x66, 0x18, 0x90, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x42, 0x79, 0x52, 0x65, 0x66, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x10, 0x01, 0x20,
	0x01, 0x48, 0x00, 0x52, 0x23, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x31,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x42, 0x79, 0x52, 0x65, 0x66, 0x12, 0x7f, 0x0a, 0x29, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x31, 0x36, 0x5f, 0x6f, 0x6e, 0x65, 0x31, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x91, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x06, 0x8a, 0xa2, 0x1f, 0x02, 0x20,
	0x01, 0x48, 0x00, 0x52, 0x24, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x31,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x51, 0x0a, 0x14, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x31, 0x36, 0x5f, 0x6f, 0x6e, 0x65, 0x32, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x31, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0x8a, 0xa2, 0x1f, 0x18, 0x0a, 0x16,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x63, 0x5f, 0x6f, 0x6e, 0x65, 0x32, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x48, 0x01, 0x52, 0x12, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31,
	0x36, 0x4f, 0x6e, 0x65, 0x32, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x5e, 0x0a, 0x1c,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x6f, 0x6e, 0x65, 0x32, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x31, 0x18, 0xd3, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x42, 0x06, 0x8a, 0xa2, 0x1f, 0x02, 0x20, 0x00, 0x48,
	0x01, 0x52, 0x19, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x32, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x31, 0x12, 0x5e, 0x0a, 0x1c,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x6f, 0x6e, 0x65, 0x32, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x32, 0x18, 0xd4, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x42, 0x06, 0x8a, 0xa2, 0x1f, 0x02, 0x20, 0x00, 0x48,
	0x01, 0x52, 0x19, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x32, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x32, 0x12, 0x64, 0x0a, 0x1d,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x6f, 0x6e, 0x65, 0x32, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x38, 0x18, 0xf2, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x38, 0x42, 0x06, 0x8a, 0xa2,
	0x1f, 0x02, 0x20, 0x01, 0x48, 0x01, 0x52, 0x1a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4f,
	0x6e, 0x65, 0x32, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x32, 0x38, 0x12, 0x64, 0x0a, 0x1d, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x6f, 0x6e,
	0x65, 0x32, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x32, 0x39, 0x18, 0xf6, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x32, 0x39, 0x42, 0x06, 0x8a, 0xa2, 0x1f, 0x02, 0x20, 0x01, 0x48, 0x01, 0x52, 0x1a, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x32, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x39, 0x12, 0x6a, 0x0a, 0x21, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x31, 0x36, 0x5f, 0x6f, 0x6e, 0x65, 0x32, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6d, 0x74, 0x70, 0x79, 0x18, 0xf3, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x31, 0x42, 0x06, 0x8a, 0xa2, 0x1f,
	0x02, 0x20, 0x01, 0x48, 0x01, 0x52, 0x1d, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e,
	0x65, 0x32, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x45,
	0x6d, 0x74, 0x70, 0x79, 0x12, 0x7f, 0x0a, 0x29, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f,
	0x6f, 0x6e, 0x65, 0x32, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x79, 0x5f, 0x72, 0x65,
	0x66, 0x18, 0xf4, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x42,
	0x79, 0x52, 0x65, 0x66, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x10, 0x01, 0x20, 0x01, 0x48, 0x01,
	0x52, 0x23, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x32, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x42, 0x79, 0x52, 0x65, 0x66, 0x12, 0x7f, 0x0a, 0x29, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36,
	0x5f, 0x6f, 0x6e, 0x65, 0x32, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0xf5, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x06, 0x8a, 0xa2, 0x1f, 0x02, 0x20, 0x01, 0x48, 0x01,
	0x52, 0x24, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x32, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x14, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31,
	0x36, 0x5f, 0x6f, 0x6e, 0x65, 0x33, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0xad,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0x8a, 0xa2, 0x1f, 0x02, 0x18, 0x01, 0x48, 0x02, 0x52,
	0x12, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x33, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x31, 0x12, 0x39, 0x0a, 0x13, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x6f,
	0x6e, 0x65, 0x33, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x61, 0x18, 0xae, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x06, 0x8a, 0xa2, 0x1f, 0x02, 0x18, 0x01, 0x48, 0x02, 0x52, 0x11, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x33, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x61, 0x12, 0x61,
	0x0a, 0x1e, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6d, 0x74, 0x70, 0x79,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x31, 0x42, 0x06, 0x8a,
	0xa2, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x1a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x46, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x6d, 0x74, 0x70,
	0x79, 0x12, 0x76, 0x0a, 0x26, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x66, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x79, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x2c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x42, 0x79, 0x52, 0x65, 0x66, 0x42, 0x08, 0x8a,
	0xa2, 0x1f, 0x04, 0x10, 0x01, 0x20, 0x01, 0x52, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36,
	0x46, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x42, 0x79, 0x52, 0x65, 0x66, 0x12, 0x76, 0x0a, 0x26, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x31, 0x36, 0x5f, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x06, 0x8a, 0xa2, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x21,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x46, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x12, 0x39, 0x0a, 0x14, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x6f, 0x6e, 0x65,
	0x34, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x91, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x48, 0x03, 0x52, 0x12, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31,
	0x36, 0x4f, 0x6e, 0x65, 0x34, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x37, 0x0a, 0x13,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x6f, 0x6e, 0x65, 0x34, 0x5f, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x61, 0x18, 0x92, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00,
	0x48, 0x03, 0x52, 0x11, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x34, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x61, 0x12, 0x3b, 0x0a, 0x14, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36,
	0x5f, 0x6f, 0x6e, 0x65, 0x35, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0xf5, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0x8a, 0xa2, 0x1f, 0x02, 0x10, 0x01, 0x48, 0x04, 0x52, 0x12,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x35, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x31, 0x12, 0x39, 0x0a, 0x13, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x6f, 0x6e,
	0x65, 0x35, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x61, 0x18, 0xf6, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x06, 0x8a, 0xa2, 0x1f, 0x02, 0x10, 0x01, 0x48, 0x04, 0x52, 0x11, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x35, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x61, 0x1a, 0x42, 0x0a,
	0x14, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x42, 0x0a, 0x14, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4d, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x33, 0x0a, 0x13, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36,
	0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x31, 0x12, 0x1c, 0x92, 0xa2,
	0x1f, 0x18, 0x0a, 0x14, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x6f, 0x6e, 0x65, 0x31,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x31, 0x20, 0x00, 0x42, 0x33, 0x0a, 0x13, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x31, 0x12, 0x1c, 0x92, 0xa2, 0x1f, 0x18, 0x0a, 0x14, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36,
	0x5f, 0x6f, 0x6e, 0x65, 0x32, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x20, 0x01, 0x42,
	0x39, 0x0a, 0x16, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x4f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x31, 0x12, 0x1f, 0x92, 0xa2, 0x1f, 0x1b, 0x0a,
	0x17, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x6f, 0x6e, 0x65, 0x33, 0x5f, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x31, 0x20, 0x01, 0x42, 0x3e, 0x0a, 0x17, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x53, 0x65, 0x6c, 0x66, 0x31, 0x12, 0x23, 0x92, 0xa2, 0x1f, 0x1f, 0x0a, 0x19, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x31, 0x36, 0x5f, 0x6f, 0x6e, 0x65, 0x34, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x5f, 0x73, 0x65, 0x6c, 0x66, 0x31, 0x10, 0x01, 0x20, 0x01, 0x42, 0x3e, 0x0a, 0x18, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x31, 0x36, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x73, 0x31, 0x12, 0x22, 0x92, 0xa2, 0x1f, 0x1e, 0x0a, 0x1a, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x6f, 0x6e, 0x65, 0x35, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x31, 0x20, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x36, 0x5f, 0x70, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x42, 0x17, 0x5a, 0x15, 0x78, 0x67, 0x6f, 0x2f, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x62, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tests_proto_cases_inline_inline_message16_proto_rawDescOnce sync.Once
	file_tests_proto_cases_inline_inline_message16_proto_rawDescData = file_tests_proto_cases_inline_inline_message16_proto_rawDesc
)

func file_tests_proto_cases_inline_inline_message16_proto_rawDescGZIP() []byte {
	file_tests_proto_cases_inline_inline_message16_proto_rawDescOnce.Do(func() {
		file_tests_proto_cases_inline_inline_message16_proto_rawDescData = protoimpl.X.CompressGZIP(file_tests_proto_cases_inline_inline_message16_proto_rawDescData)
	})
	return file_tests_proto_cases_inline_inline_message16_proto_rawDescData
}

var file_tests_proto_cases_inline_inline_message16_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_tests_proto_cases_inline_inline_message16_proto_goTypes = []interface{}{
	(*MessageLevel16)(nil),      // 0: inline.MessageLevel16
	nil,                         // 1: inline.MessageLevel16.Level16MString1Entry
	nil,                         // 2: inline.MessageLevel16.Level16MString2Entry
	(*pbexternal.Message1)(nil), // 3: external.Message1
	(*MessageLevel26)(nil),      // 4: inline.MessageLevel26
	(*MessageLevel27)(nil),      // 5: inline.MessageLevel27
	(*MessageEmpty1)(nil),       // 6: inline.MessageEmpty1
	(*MessageIgnoreByRef)(nil),  // 7: inline.MessageIgnoreByRef
	(*MessageIgnoreFields)(nil), // 8: inline.MessageIgnoreFields
	(*MessageLevel28)(nil),      // 9: inline.MessageLevel28
	(*MessageLevel29)(nil),      // 10: inline.MessageLevel29
}
var file_tests_proto_cases_inline_inline_message16_proto_depIdxs = []int32{
	1,  // 0: inline.MessageLevel16.level16_m_string1:type_name -> inline.MessageLevel16.Level16MString1Entry
	2,  // 1: inline.MessageLevel16.level16_m_string2:type_name -> inline.MessageLevel16.Level16MString2Entry
	3,  // 2: inline.MessageLevel16.level16_f_message_extern1:type_name -> external.Message1
	3,  // 3: inline.MessageLevel16.level16_f_message_extern2:type_name -> external.Message1
	4,  // 4: inline.MessageLevel16.level16_f_message_inline26:type_name -> inline.MessageLevel26
	5,  // 5: inline.MessageLevel16.level16_f_message_inline27:type_name -> inline.MessageLevel27
	4,  // 6: inline.MessageLevel16.level16_one1_message_inline26:type_name -> inline.MessageLevel26
	5,  // 7: inline.MessageLevel16.level16_one1_message_inline27:type_name -> inline.MessageLevel27
	6,  // 8: inline.MessageLevel16.level16_one1_message_inline_emtpy:type_name -> inline.MessageEmpty1
	7,  // 9: inline.MessageLevel16.level16_one1_message_inline_ignore_by_ref:type_name -> inline.MessageIgnoreByRef
	8,  // 10: inline.MessageLevel16.level16_one1_message_inline_ignore_fields:type_name -> inline.MessageIgnoreFields
	3,  // 11: inline.MessageLevel16.level16_one2_message_extern1:type_name -> external.Message1
	3,  // 12: inline.MessageLevel16.level16_one2_message_extern2:type_name -> external.Message1
	9,  // 13: inline.MessageLevel16.level16_one2_message_inline28:type_name -> inline.MessageLevel28
	10, // 14: inline.MessageLevel16.level16_one2_message_inline29:type_name -> inline.MessageLevel29
	6,  // 15: inline.MessageLevel16.level16_one2_message_inline_emtpy:type_name -> inline.MessageEmpty1
	7,  // 16: inline.MessageLevel16.level16_one2_message_inline_ignore_by_ref:type_name -> inline.MessageIgnoreByRef
	8,  // 17: inline.MessageLevel16.level16_one2_message_inline_ignore_fields:type_name -> inline.MessageIgnoreFields
	6,  // 18: inline.MessageLevel16.level16_f_message_inline_emtpy:type_name -> inline.MessageEmpty1
	7,  // 19: inline.MessageLevel16.level16_f_message_inline_ignore_by_ref:type_name -> inline.MessageIgnoreByRef
	8,  // 20: inline.MessageLevel16.level16_f_message_inline_ignore_fields:type_name -> inline.MessageIgnoreFields
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_tests_proto_cases_inline_inline_message16_proto_init() }
func file_tests_proto_cases_inline_inline_message16_proto_init() {
	if File_tests_proto_cases_inline_inline_message16_proto != nil {
		return
	}
	file_tests_proto_cases_inline_private_proto_init()
	file_tests_proto_cases_inline_inline_message26_proto_init()
	file_tests_proto_cases_inline_inline_message27_proto_init()
	file_tests_proto_cases_inline_inline_message28_proto_init()
	file_tests_proto_cases_inline_inline_message29_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tests_proto_cases_inline_inline_message16_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageLevel16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tests_proto_cases_inline_inline_message16_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*MessageLevel16_Level16One1String1)(nil),
		(*MessageLevel16_Level16One1MessageInline26)(nil),
		(*MessageLevel16_Level16One1MessageInline27)(nil),
		(*MessageLevel16_Level16One1MessageInlineEmtpy)(nil),
		(*MessageLevel16_Level16One1MessageInlineIgnoreByRef)(nil),
		(*MessageLevel16_Level16One1MessageInlineIgnoreFields)(nil),
		(*MessageLevel16_Level16One2String1)(nil),
		(*MessageLevel16_Level16One2MessageExtern1)(nil),
		(*MessageLevel16_Level16One2MessageExtern2)(nil),
		(*MessageLevel16_Level16One2MessageInline28)(nil),
		(*MessageLevel16_Level16One2MessageInline29)(nil),
		(*MessageLevel16_Level16One2MessageInlineEmtpy)(nil),
		(*MessageLevel16_Level16One2MessageInlineIgnoreByRef)(nil),
		(*MessageLevel16_Level16One2MessageInlineIgnoreFields)(nil),
		(*MessageLevel16_Level16One3String1)(nil),
		(*MessageLevel16_Level16One3Int32A)(nil),
		(*MessageLevel16_Level16One4String1)(nil),
		(*MessageLevel16_Level16One4Int32A)(nil),
		(*MessageLevel16_Level16One5String1)(nil),
		(*MessageLevel16_Level16One5Int32A)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tests_proto_cases_inline_inline_message16_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tests_proto_cases_inline_inline_message16_proto_goTypes,
		DependencyIndexes: file_tests_proto_cases_inline_inline_message16_proto_depIdxs,
		MessageInfos:      file_tests_proto_cases_inline_inline_message16_proto_msgTypes,
	}.Build()
	File_tests_proto_cases_inline_inline_message16_proto = out.File
	file_tests_proto_cases_inline_inline_message16_proto_rawDesc = nil
	file_tests_proto_cases_inline_inline_message16_proto_goTypes = nil
	file_tests_proto_cases_inline_inline_message16_proto_depIdxs = nil
}
