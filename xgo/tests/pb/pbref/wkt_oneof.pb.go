// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: tests/proto/cases/references/wkt_oneof.proto

package pbref

import (
	_ "github.com/yu31/protoc-plugin-json/xgo/pb/pbjson"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WKTOneOf1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Cases for Enum
	//
	//
	// Types that are assignable to OneEnum1:
	//	*WKTOneOf1_FEnumNumber1
	//	*WKTOneOf1_FEnumString1
	OneEnum1 isWKTOneOf1_OneEnum1 `protobuf_oneof:"OneEnum1"`
	// Types that are assignable to OneEnum2:
	//	*WKTOneOf1_FEnumNumberString1
	//	*WKTOneOf1_FEnumNumberString2
	OneEnum2 isWKTOneOf1_OneEnum2 `protobuf_oneof:"OneEnum2"`
	// Cases for google.protobuf.Any
	//
	//
	// Types that are assignable to OneAny1:
	//	*WKTOneOf1_FAnyNative1
	//	*WKTOneOf1_FAnyProto1
	OneAny1 isWKTOneOf1_OneAny1 `protobuf_oneof:"OneAny1"`
	// Cases for google.protobuf.Duration
	//
	//
	// Types that are assignable to OneDuration1:
	//	*WKTOneOf1_FDurationNative1
	//	*WKTOneOf1_FDurationString1
	OneDuration1 isWKTOneOf1_OneDuration1 `protobuf_oneof:"OneDuration1"`
	// Types that are assignable to OneDuration2:
	//	*WKTOneOf1_FDurationNanosecond1
	//	*WKTOneOf1_FDurationMicrosecond1
	OneDuration2 isWKTOneOf1_OneDuration2 `protobuf_oneof:"OneDuration2"`
	// Types that are assignable to OneDuration3:
	//	*WKTOneOf1_FDurationMillisecond1
	//	*WKTOneOf1_FDurationSecond1
	OneDuration3 isWKTOneOf1_OneDuration3 `protobuf_oneof:"OneDuration3"`
	// Types that are assignable to OneDuration4:
	//	*WKTOneOf1_FDurationMinute1
	//	*WKTOneOf1_FDurationHour1
	OneDuration4 isWKTOneOf1_OneDuration4 `protobuf_oneof:"OneDuration4"`
	// Types that are assignable to OneDuration5:
	//	*WKTOneOf1_FDurationNanosecondString1
	//	*WKTOneOf1_FDurationMicrosecondString1
	OneDuration5 isWKTOneOf1_OneDuration5 `protobuf_oneof:"OneDuration5"`
	// Types that are assignable to OneDuration6:
	//	*WKTOneOf1_FDurationMillisecondString1
	//	*WKTOneOf1_FDurationSecondString1
	OneDuration6 isWKTOneOf1_OneDuration6 `protobuf_oneof:"OneDuration6"`
	// Types that are assignable to OneDuration7:
	//	*WKTOneOf1_FDurationMinuteString1
	//	*WKTOneOf1_FDurationHourString1
	OneDuration7 isWKTOneOf1_OneDuration7 `protobuf_oneof:"OneDuration7"`
	// Cases for google.protobuf.Timestamp
	//
	//
	// Types that are assignable to OneTimestamp1:
	//	*WKTOneOf1_FTimestampNative1
	//	*WKTOneOf1_FTimestampTimeLayout1
	OneTimestamp1 isWKTOneOf1_OneTimestamp1 `protobuf_oneof:"OneTimestamp1"`
	// Types that are assignable to OneTimestamp2:
	//	*WKTOneOf1_FTimestampUnixNano1
	//	*WKTOneOf1_FTimestampUnixMicro1
	OneTimestamp2 isWKTOneOf1_OneTimestamp2 `protobuf_oneof:"OneTimestamp2"`
	// Types that are assignable to OneTimestamp3:
	//	*WKTOneOf1_FTimestampUnixMilli1
	//	*WKTOneOf1_FTimestampUnixSec1
	OneTimestamp3 isWKTOneOf1_OneTimestamp3 `protobuf_oneof:"OneTimestamp3"`
	// Types that are assignable to OneTimestamp4:
	//	*WKTOneOf1_FTimestampUnixNanoString1
	//	*WKTOneOf1_FTimestampUnixMicroString1
	OneTimestamp4 isWKTOneOf1_OneTimestamp4 `protobuf_oneof:"OneTimestamp4"`
	// Types that are assignable to OneTimestamp5:
	//	*WKTOneOf1_FTimestampUnixMilliString1
	//	*WKTOneOf1_FTimestampUnixSecString1
	OneTimestamp5 isWKTOneOf1_OneTimestamp5 `protobuf_oneof:"OneTimestamp5"`
}

func (x *WKTOneOf1) Reset() {
	*x = WKTOneOf1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_references_wkt_oneof_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WKTOneOf1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WKTOneOf1) ProtoMessage() {}

func (x *WKTOneOf1) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_references_wkt_oneof_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WKTOneOf1.ProtoReflect.Descriptor instead.
func (*WKTOneOf1) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_references_wkt_oneof_proto_rawDescGZIP(), []int{0}
}

func (m *WKTOneOf1) GetOneEnum1() isWKTOneOf1_OneEnum1 {
	if m != nil {
		return m.OneEnum1
	}
	return nil
}

func (x *WKTOneOf1) GetFEnumNumber1() Enum1 {
	if x, ok := x.GetOneEnum1().(*WKTOneOf1_FEnumNumber1); ok {
		return x.FEnumNumber1
	}
	return Enum1_Zero
}

func (x *WKTOneOf1) GetFEnumString1() Enum1 {
	if x, ok := x.GetOneEnum1().(*WKTOneOf1_FEnumString1); ok {
		return x.FEnumString1
	}
	return Enum1_Zero
}

func (m *WKTOneOf1) GetOneEnum2() isWKTOneOf1_OneEnum2 {
	if m != nil {
		return m.OneEnum2
	}
	return nil
}

func (x *WKTOneOf1) GetFEnumNumberString1() Enum1 {
	if x, ok := x.GetOneEnum2().(*WKTOneOf1_FEnumNumberString1); ok {
		return x.FEnumNumberString1
	}
	return Enum1_Zero
}

func (x *WKTOneOf1) GetFEnumNumberString2() Enum1 {
	if x, ok := x.GetOneEnum2().(*WKTOneOf1_FEnumNumberString2); ok {
		return x.FEnumNumberString2
	}
	return Enum1_Zero
}

func (m *WKTOneOf1) GetOneAny1() isWKTOneOf1_OneAny1 {
	if m != nil {
		return m.OneAny1
	}
	return nil
}

func (x *WKTOneOf1) GetFAnyNative1() *anypb.Any {
	if x, ok := x.GetOneAny1().(*WKTOneOf1_FAnyNative1); ok {
		return x.FAnyNative1
	}
	return nil
}

func (x *WKTOneOf1) GetFAnyProto1() *anypb.Any {
	if x, ok := x.GetOneAny1().(*WKTOneOf1_FAnyProto1); ok {
		return x.FAnyProto1
	}
	return nil
}

func (m *WKTOneOf1) GetOneDuration1() isWKTOneOf1_OneDuration1 {
	if m != nil {
		return m.OneDuration1
	}
	return nil
}

func (x *WKTOneOf1) GetFDurationNative1() *durationpb.Duration {
	if x, ok := x.GetOneDuration1().(*WKTOneOf1_FDurationNative1); ok {
		return x.FDurationNative1
	}
	return nil
}

func (x *WKTOneOf1) GetFDurationString1() *durationpb.Duration {
	if x, ok := x.GetOneDuration1().(*WKTOneOf1_FDurationString1); ok {
		return x.FDurationString1
	}
	return nil
}

func (m *WKTOneOf1) GetOneDuration2() isWKTOneOf1_OneDuration2 {
	if m != nil {
		return m.OneDuration2
	}
	return nil
}

func (x *WKTOneOf1) GetFDurationNanosecond1() *durationpb.Duration {
	if x, ok := x.GetOneDuration2().(*WKTOneOf1_FDurationNanosecond1); ok {
		return x.FDurationNanosecond1
	}
	return nil
}

func (x *WKTOneOf1) GetFDurationMicrosecond1() *durationpb.Duration {
	if x, ok := x.GetOneDuration2().(*WKTOneOf1_FDurationMicrosecond1); ok {
		return x.FDurationMicrosecond1
	}
	return nil
}

func (m *WKTOneOf1) GetOneDuration3() isWKTOneOf1_OneDuration3 {
	if m != nil {
		return m.OneDuration3
	}
	return nil
}

func (x *WKTOneOf1) GetFDurationMillisecond1() *durationpb.Duration {
	if x, ok := x.GetOneDuration3().(*WKTOneOf1_FDurationMillisecond1); ok {
		return x.FDurationMillisecond1
	}
	return nil
}

func (x *WKTOneOf1) GetFDurationSecond1() *durationpb.Duration {
	if x, ok := x.GetOneDuration3().(*WKTOneOf1_FDurationSecond1); ok {
		return x.FDurationSecond1
	}
	return nil
}

func (m *WKTOneOf1) GetOneDuration4() isWKTOneOf1_OneDuration4 {
	if m != nil {
		return m.OneDuration4
	}
	return nil
}

func (x *WKTOneOf1) GetFDurationMinute1() *durationpb.Duration {
	if x, ok := x.GetOneDuration4().(*WKTOneOf1_FDurationMinute1); ok {
		return x.FDurationMinute1
	}
	return nil
}

func (x *WKTOneOf1) GetFDurationHour1() *durationpb.Duration {
	if x, ok := x.GetOneDuration4().(*WKTOneOf1_FDurationHour1); ok {
		return x.FDurationHour1
	}
	return nil
}

func (m *WKTOneOf1) GetOneDuration5() isWKTOneOf1_OneDuration5 {
	if m != nil {
		return m.OneDuration5
	}
	return nil
}

func (x *WKTOneOf1) GetFDurationNanosecondString1() *durationpb.Duration {
	if x, ok := x.GetOneDuration5().(*WKTOneOf1_FDurationNanosecondString1); ok {
		return x.FDurationNanosecondString1
	}
	return nil
}

func (x *WKTOneOf1) GetFDurationMicrosecondString1() *durationpb.Duration {
	if x, ok := x.GetOneDuration5().(*WKTOneOf1_FDurationMicrosecondString1); ok {
		return x.FDurationMicrosecondString1
	}
	return nil
}

func (m *WKTOneOf1) GetOneDuration6() isWKTOneOf1_OneDuration6 {
	if m != nil {
		return m.OneDuration6
	}
	return nil
}

func (x *WKTOneOf1) GetFDurationMillisecondString1() *durationpb.Duration {
	if x, ok := x.GetOneDuration6().(*WKTOneOf1_FDurationMillisecondString1); ok {
		return x.FDurationMillisecondString1
	}
	return nil
}

func (x *WKTOneOf1) GetFDurationSecondString1() *durationpb.Duration {
	if x, ok := x.GetOneDuration6().(*WKTOneOf1_FDurationSecondString1); ok {
		return x.FDurationSecondString1
	}
	return nil
}

func (m *WKTOneOf1) GetOneDuration7() isWKTOneOf1_OneDuration7 {
	if m != nil {
		return m.OneDuration7
	}
	return nil
}

func (x *WKTOneOf1) GetFDurationMinuteString1() *durationpb.Duration {
	if x, ok := x.GetOneDuration7().(*WKTOneOf1_FDurationMinuteString1); ok {
		return x.FDurationMinuteString1
	}
	return nil
}

func (x *WKTOneOf1) GetFDurationHourString1() *durationpb.Duration {
	if x, ok := x.GetOneDuration7().(*WKTOneOf1_FDurationHourString1); ok {
		return x.FDurationHourString1
	}
	return nil
}

func (m *WKTOneOf1) GetOneTimestamp1() isWKTOneOf1_OneTimestamp1 {
	if m != nil {
		return m.OneTimestamp1
	}
	return nil
}

func (x *WKTOneOf1) GetFTimestampNative1() *timestamppb.Timestamp {
	if x, ok := x.GetOneTimestamp1().(*WKTOneOf1_FTimestampNative1); ok {
		return x.FTimestampNative1
	}
	return nil
}

func (x *WKTOneOf1) GetFTimestampTimeLayout1() *timestamppb.Timestamp {
	if x, ok := x.GetOneTimestamp1().(*WKTOneOf1_FTimestampTimeLayout1); ok {
		return x.FTimestampTimeLayout1
	}
	return nil
}

func (m *WKTOneOf1) GetOneTimestamp2() isWKTOneOf1_OneTimestamp2 {
	if m != nil {
		return m.OneTimestamp2
	}
	return nil
}

func (x *WKTOneOf1) GetFTimestampUnixNano1() *timestamppb.Timestamp {
	if x, ok := x.GetOneTimestamp2().(*WKTOneOf1_FTimestampUnixNano1); ok {
		return x.FTimestampUnixNano1
	}
	return nil
}

func (x *WKTOneOf1) GetFTimestampUnixMicro1() *timestamppb.Timestamp {
	if x, ok := x.GetOneTimestamp2().(*WKTOneOf1_FTimestampUnixMicro1); ok {
		return x.FTimestampUnixMicro1
	}
	return nil
}

func (m *WKTOneOf1) GetOneTimestamp3() isWKTOneOf1_OneTimestamp3 {
	if m != nil {
		return m.OneTimestamp3
	}
	return nil
}

func (x *WKTOneOf1) GetFTimestampUnixMilli1() *timestamppb.Timestamp {
	if x, ok := x.GetOneTimestamp3().(*WKTOneOf1_FTimestampUnixMilli1); ok {
		return x.FTimestampUnixMilli1
	}
	return nil
}

func (x *WKTOneOf1) GetFTimestampUnixSec1() *timestamppb.Timestamp {
	if x, ok := x.GetOneTimestamp3().(*WKTOneOf1_FTimestampUnixSec1); ok {
		return x.FTimestampUnixSec1
	}
	return nil
}

func (m *WKTOneOf1) GetOneTimestamp4() isWKTOneOf1_OneTimestamp4 {
	if m != nil {
		return m.OneTimestamp4
	}
	return nil
}

func (x *WKTOneOf1) GetFTimestampUnixNanoString1() *timestamppb.Timestamp {
	if x, ok := x.GetOneTimestamp4().(*WKTOneOf1_FTimestampUnixNanoString1); ok {
		return x.FTimestampUnixNanoString1
	}
	return nil
}

func (x *WKTOneOf1) GetFTimestampUnixMicroString1() *timestamppb.Timestamp {
	if x, ok := x.GetOneTimestamp4().(*WKTOneOf1_FTimestampUnixMicroString1); ok {
		return x.FTimestampUnixMicroString1
	}
	return nil
}

func (m *WKTOneOf1) GetOneTimestamp5() isWKTOneOf1_OneTimestamp5 {
	if m != nil {
		return m.OneTimestamp5
	}
	return nil
}

func (x *WKTOneOf1) GetFTimestampUnixMilliString1() *timestamppb.Timestamp {
	if x, ok := x.GetOneTimestamp5().(*WKTOneOf1_FTimestampUnixMilliString1); ok {
		return x.FTimestampUnixMilliString1
	}
	return nil
}

func (x *WKTOneOf1) GetFTimestampUnixSecString1() *timestamppb.Timestamp {
	if x, ok := x.GetOneTimestamp5().(*WKTOneOf1_FTimestampUnixSecString1); ok {
		return x.FTimestampUnixSecString1
	}
	return nil
}

type isWKTOneOf1_OneEnum1 interface {
	isWKTOneOf1_OneEnum1()
}

type WKTOneOf1_FEnumNumber1 struct {
	FEnumNumber1 Enum1 `protobuf:"varint,1,opt,name=f_enum_number1,json=fEnumNumber1,proto3,enum=private.Enum1,oneof"`
}

type WKTOneOf1_FEnumString1 struct {
	FEnumString1 Enum1 `protobuf:"varint,2,opt,name=f_enum_string1,json=fEnumString1,proto3,enum=private.Enum1,oneof"`
}

func (*WKTOneOf1_FEnumNumber1) isWKTOneOf1_OneEnum1() {}

func (*WKTOneOf1_FEnumString1) isWKTOneOf1_OneEnum1() {}

type isWKTOneOf1_OneEnum2 interface {
	isWKTOneOf1_OneEnum2()
}

type WKTOneOf1_FEnumNumberString1 struct {
	FEnumNumberString1 Enum1 `protobuf:"varint,3,opt,name=f_enum_number_string1,json=fEnumNumberString1,proto3,enum=private.Enum1,oneof"`
}

type WKTOneOf1_FEnumNumberString2 struct {
	FEnumNumberString2 Enum1 `protobuf:"varint,4,opt,name=f_enum_number_string2,json=fEnumNumberString2,proto3,enum=private.Enum1,oneof"`
}

func (*WKTOneOf1_FEnumNumberString1) isWKTOneOf1_OneEnum2() {}

func (*WKTOneOf1_FEnumNumberString2) isWKTOneOf1_OneEnum2() {}

type isWKTOneOf1_OneAny1 interface {
	isWKTOneOf1_OneAny1()
}

type WKTOneOf1_FAnyNative1 struct {
	FAnyNative1 *anypb.Any `protobuf:"bytes,5,opt,name=f_any_native1,json=fAnyNative1,proto3,oneof"`
}

type WKTOneOf1_FAnyProto1 struct {
	FAnyProto1 *anypb.Any `protobuf:"bytes,6,opt,name=f_any_proto1,json=fAnyProto1,proto3,oneof"`
}

func (*WKTOneOf1_FAnyNative1) isWKTOneOf1_OneAny1() {}

func (*WKTOneOf1_FAnyProto1) isWKTOneOf1_OneAny1() {}

type isWKTOneOf1_OneDuration1 interface {
	isWKTOneOf1_OneDuration1()
}

type WKTOneOf1_FDurationNative1 struct {
	FDurationNative1 *durationpb.Duration `protobuf:"bytes,11,opt,name=f_duration_native1,json=fDurationNative1,proto3,oneof"`
}

type WKTOneOf1_FDurationString1 struct {
	FDurationString1 *durationpb.Duration `protobuf:"bytes,12,opt,name=f_duration_string1,json=fDurationString1,proto3,oneof"`
}

func (*WKTOneOf1_FDurationNative1) isWKTOneOf1_OneDuration1() {}

func (*WKTOneOf1_FDurationString1) isWKTOneOf1_OneDuration1() {}

type isWKTOneOf1_OneDuration2 interface {
	isWKTOneOf1_OneDuration2()
}

type WKTOneOf1_FDurationNanosecond1 struct {
	FDurationNanosecond1 *durationpb.Duration `protobuf:"bytes,13,opt,name=f_duration_nanosecond1,json=fDurationNanosecond1,proto3,oneof"`
}

type WKTOneOf1_FDurationMicrosecond1 struct {
	FDurationMicrosecond1 *durationpb.Duration `protobuf:"bytes,14,opt,name=f_duration_microsecond1,json=fDurationMicrosecond1,proto3,oneof"`
}

func (*WKTOneOf1_FDurationNanosecond1) isWKTOneOf1_OneDuration2() {}

func (*WKTOneOf1_FDurationMicrosecond1) isWKTOneOf1_OneDuration2() {}

type isWKTOneOf1_OneDuration3 interface {
	isWKTOneOf1_OneDuration3()
}

type WKTOneOf1_FDurationMillisecond1 struct {
	FDurationMillisecond1 *durationpb.Duration `protobuf:"bytes,15,opt,name=f_duration_millisecond1,json=fDurationMillisecond1,proto3,oneof"`
}

type WKTOneOf1_FDurationSecond1 struct {
	FDurationSecond1 *durationpb.Duration `protobuf:"bytes,16,opt,name=f_duration_second1,json=fDurationSecond1,proto3,oneof"`
}

func (*WKTOneOf1_FDurationMillisecond1) isWKTOneOf1_OneDuration3() {}

func (*WKTOneOf1_FDurationSecond1) isWKTOneOf1_OneDuration3() {}

type isWKTOneOf1_OneDuration4 interface {
	isWKTOneOf1_OneDuration4()
}

type WKTOneOf1_FDurationMinute1 struct {
	FDurationMinute1 *durationpb.Duration `protobuf:"bytes,17,opt,name=f_duration_minute1,json=fDurationMinute1,proto3,oneof"`
}

type WKTOneOf1_FDurationHour1 struct {
	FDurationHour1 *durationpb.Duration `protobuf:"bytes,18,opt,name=f_duration_hour1,json=fDurationHour1,proto3,oneof"`
}

func (*WKTOneOf1_FDurationMinute1) isWKTOneOf1_OneDuration4() {}

func (*WKTOneOf1_FDurationHour1) isWKTOneOf1_OneDuration4() {}

type isWKTOneOf1_OneDuration5 interface {
	isWKTOneOf1_OneDuration5()
}

type WKTOneOf1_FDurationNanosecondString1 struct {
	FDurationNanosecondString1 *durationpb.Duration `protobuf:"bytes,19,opt,name=f_duration_nanosecond_string1,json=fDurationNanosecondString1,proto3,oneof"`
}

type WKTOneOf1_FDurationMicrosecondString1 struct {
	FDurationMicrosecondString1 *durationpb.Duration `protobuf:"bytes,20,opt,name=f_duration_microsecond_string1,json=fDurationMicrosecondString1,proto3,oneof"`
}

func (*WKTOneOf1_FDurationNanosecondString1) isWKTOneOf1_OneDuration5() {}

func (*WKTOneOf1_FDurationMicrosecondString1) isWKTOneOf1_OneDuration5() {}

type isWKTOneOf1_OneDuration6 interface {
	isWKTOneOf1_OneDuration6()
}

type WKTOneOf1_FDurationMillisecondString1 struct {
	FDurationMillisecondString1 *durationpb.Duration `protobuf:"bytes,21,opt,name=f_duration_millisecond_string1,json=fDurationMillisecondString1,proto3,oneof"`
}

type WKTOneOf1_FDurationSecondString1 struct {
	FDurationSecondString1 *durationpb.Duration `protobuf:"bytes,22,opt,name=f_duration_second_string1,json=fDurationSecondString1,proto3,oneof"`
}

func (*WKTOneOf1_FDurationMillisecondString1) isWKTOneOf1_OneDuration6() {}

func (*WKTOneOf1_FDurationSecondString1) isWKTOneOf1_OneDuration6() {}

type isWKTOneOf1_OneDuration7 interface {
	isWKTOneOf1_OneDuration7()
}

type WKTOneOf1_FDurationMinuteString1 struct {
	FDurationMinuteString1 *durationpb.Duration `protobuf:"bytes,23,opt,name=f_duration_minute_string1,json=fDurationMinuteString1,proto3,oneof"`
}

type WKTOneOf1_FDurationHourString1 struct {
	FDurationHourString1 *durationpb.Duration `protobuf:"bytes,24,opt,name=f_duration_hour_string1,json=fDurationHourString1,proto3,oneof"`
}

func (*WKTOneOf1_FDurationMinuteString1) isWKTOneOf1_OneDuration7() {}

func (*WKTOneOf1_FDurationHourString1) isWKTOneOf1_OneDuration7() {}

type isWKTOneOf1_OneTimestamp1 interface {
	isWKTOneOf1_OneTimestamp1()
}

type WKTOneOf1_FTimestampNative1 struct {
	FTimestampNative1 *timestamppb.Timestamp `protobuf:"bytes,31,opt,name=f_timestamp_native1,json=fTimestampNative1,proto3,oneof"`
}

type WKTOneOf1_FTimestampTimeLayout1 struct {
	FTimestampTimeLayout1 *timestamppb.Timestamp `protobuf:"bytes,32,opt,name=f_timestamp_time_layout1,json=fTimestampTimeLayout1,proto3,oneof"`
}

func (*WKTOneOf1_FTimestampNative1) isWKTOneOf1_OneTimestamp1() {}

func (*WKTOneOf1_FTimestampTimeLayout1) isWKTOneOf1_OneTimestamp1() {}

type isWKTOneOf1_OneTimestamp2 interface {
	isWKTOneOf1_OneTimestamp2()
}

type WKTOneOf1_FTimestampUnixNano1 struct {
	FTimestampUnixNano1 *timestamppb.Timestamp `protobuf:"bytes,33,opt,name=f_timestamp_unix_nano1,json=fTimestampUnixNano1,proto3,oneof"`
}

type WKTOneOf1_FTimestampUnixMicro1 struct {
	FTimestampUnixMicro1 *timestamppb.Timestamp `protobuf:"bytes,34,opt,name=f_timestamp_unix_micro1,json=fTimestampUnixMicro1,proto3,oneof"`
}

func (*WKTOneOf1_FTimestampUnixNano1) isWKTOneOf1_OneTimestamp2() {}

func (*WKTOneOf1_FTimestampUnixMicro1) isWKTOneOf1_OneTimestamp2() {}

type isWKTOneOf1_OneTimestamp3 interface {
	isWKTOneOf1_OneTimestamp3()
}

type WKTOneOf1_FTimestampUnixMilli1 struct {
	FTimestampUnixMilli1 *timestamppb.Timestamp `protobuf:"bytes,35,opt,name=f_timestamp_unix_milli1,json=fTimestampUnixMilli1,proto3,oneof"`
}

type WKTOneOf1_FTimestampUnixSec1 struct {
	FTimestampUnixSec1 *timestamppb.Timestamp `protobuf:"bytes,36,opt,name=f_timestamp_unix_sec1,json=fTimestampUnixSec1,proto3,oneof"`
}

func (*WKTOneOf1_FTimestampUnixMilli1) isWKTOneOf1_OneTimestamp3() {}

func (*WKTOneOf1_FTimestampUnixSec1) isWKTOneOf1_OneTimestamp3() {}

type isWKTOneOf1_OneTimestamp4 interface {
	isWKTOneOf1_OneTimestamp4()
}

type WKTOneOf1_FTimestampUnixNanoString1 struct {
	FTimestampUnixNanoString1 *timestamppb.Timestamp `protobuf:"bytes,37,opt,name=f_timestamp_unix_nano_string1,json=fTimestampUnixNanoString1,proto3,oneof"`
}

type WKTOneOf1_FTimestampUnixMicroString1 struct {
	FTimestampUnixMicroString1 *timestamppb.Timestamp `protobuf:"bytes,38,opt,name=f_timestamp_unix_micro_string1,json=fTimestampUnixMicroString1,proto3,oneof"`
}

func (*WKTOneOf1_FTimestampUnixNanoString1) isWKTOneOf1_OneTimestamp4() {}

func (*WKTOneOf1_FTimestampUnixMicroString1) isWKTOneOf1_OneTimestamp4() {}

type isWKTOneOf1_OneTimestamp5 interface {
	isWKTOneOf1_OneTimestamp5()
}

type WKTOneOf1_FTimestampUnixMilliString1 struct {
	FTimestampUnixMilliString1 *timestamppb.Timestamp `protobuf:"bytes,39,opt,name=f_timestamp_unix_milli_string1,json=fTimestampUnixMilliString1,proto3,oneof"`
}

type WKTOneOf1_FTimestampUnixSecString1 struct {
	FTimestampUnixSecString1 *timestamppb.Timestamp `protobuf:"bytes,40,opt,name=f_timestamp_unix_sec_string1,json=fTimestampUnixSecString1,proto3,oneof"`
}

func (*WKTOneOf1_FTimestampUnixMilliString1) isWKTOneOf1_OneTimestamp5() {}

func (*WKTOneOf1_FTimestampUnixSecString1) isWKTOneOf1_OneTimestamp5() {}

var File_tests_proto_cases_references_wkt_oneof_proto protoreflect.FileDescriptor

var file_tests_proto_cases_references_wkt_oneof_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61,
	0x73, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x77,
	0x6b, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x77, 0x6b, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x1a, 0x0a, 0x09, 0x57, 0x4b, 0x54, 0x4f, 0x6e, 0x65, 0x4f, 0x66,
	0x31, 0x12, 0x42, 0x0a, 0x0e, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x31, 0x42, 0x0a, 0x8a, 0xa2, 0x1f, 0x06, 0x5a,
	0x04, 0x72, 0x02, 0x08, 0x01, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x45, 0x6e, 0x75, 0x6d, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x31, 0x12, 0x42, 0x0a, 0x0e, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x31, 0x42, 0x0a, 0x8a,
	0xa2, 0x1f, 0x06, 0x5a, 0x04, 0x72, 0x02, 0x08, 0x03, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x45, 0x6e,
	0x75, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x4f, 0x0a, 0x15, 0x66, 0x5f, 0x65,
	0x6e, 0x75, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x31, 0x42, 0x0a, 0x8a, 0xa2, 0x1f, 0x06, 0x5a, 0x04,
	0x72, 0x02, 0x08, 0x02, 0x48, 0x01, 0x52, 0x12, 0x66, 0x45, 0x6e, 0x75, 0x6d, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x4f, 0x0a, 0x15, 0x66, 0x5f,
	0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x31, 0x42, 0x0a, 0x8a, 0xa2, 0x1f, 0x06, 0x5a,
	0x04, 0x72, 0x02, 0x08, 0x02, 0x48, 0x01, 0x52, 0x12, 0x66, 0x45, 0x6e, 0x75, 0x6d, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x47, 0x0a, 0x0d, 0x66,
	0x5f, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05,
	0xaa, 0x01, 0x02, 0x08, 0x01, 0x48, 0x02, 0x52, 0x0b, 0x66, 0x41, 0x6e, 0x79, 0x4e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x31, 0x12, 0x45, 0x0a, 0x0c, 0x66, 0x5f, 0x61, 0x6e, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xaa, 0x01, 0x02, 0x08, 0x02, 0x48, 0x02, 0x52,
	0x0a, 0x66, 0x41, 0x6e, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x31, 0x12, 0x56, 0x0a, 0x12, 0x66,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x48,
	0x03, 0x52, 0x10, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x31, 0x12, 0x56, 0x0a, 0x12, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07,
	0x5a, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x02, 0x48, 0x03, 0x52, 0x10, 0x66, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x5e, 0x0a, 0x16, 0x66,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x31, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xb2, 0x01,
	0x02, 0x08, 0x03, 0x48, 0x04, 0x52, 0x14, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31, 0x12, 0x60, 0x0a, 0x17, 0x66,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xb2,
	0x01, 0x02, 0x08, 0x05, 0x48, 0x04, 0x52, 0x15, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31, 0x12, 0x60, 0x0a,
	0x17, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6c, 0x6c,
	0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a,
	0x05, 0xb2, 0x01, 0x02, 0x08, 0x07, 0x48, 0x05, 0x52, 0x15, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31, 0x12,
	0x56, 0x0a, 0x12, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x31, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xb2, 0x01,
	0x02, 0x08, 0x09, 0x48, 0x05, 0x52, 0x10, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x31, 0x12, 0x56, 0x0a, 0x12, 0x66, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x31, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b,
	0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x0b, 0x48, 0x06, 0x52, 0x10, 0x66,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x31, 0x12,
	0x52, 0x0a, 0x10, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x6f,
	0x75, 0x72, 0x31, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xb2, 0x01, 0x02, 0x08,
	0x0d, 0x48, 0x06, 0x52, 0x0e, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f,
	0x75, 0x72, 0x31, 0x12, 0x6b, 0x0a, 0x1d, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x31, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xb2, 0x01, 0x02,
	0x08, 0x04, 0x48, 0x07, 0x52, 0x1a, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31,
	0x12, 0x6d, 0x0a, 0x1e, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x31, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x06,
	0x48, 0x07, 0x52, 0x1b, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12,
	0x6d, 0x0a, 0x1e, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x31, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x08, 0x48,
	0x08, 0x52, 0x1b, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c,
	0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x63,
	0x0a, 0x19, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x8a, 0xa2,
	0x1f, 0x07, 0x5a, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x0a, 0x48, 0x08, 0x52, 0x16, 0x66, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x31, 0x12, 0x63, 0x0a, 0x19, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x0c, 0x48, 0x09,
	0x52, 0x16, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x5f, 0x0a, 0x17, 0x66, 0x5f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x31, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xb2, 0x01, 0x02, 0x08,
	0x0e, 0x48, 0x09, 0x52, 0x14, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f,
	0x75, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x59, 0x0a, 0x13, 0x66, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x31,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xba, 0x01, 0x02, 0x08, 0x01, 0x48,
	0x0a, 0x52, 0x11, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x31, 0x12, 0x7f, 0x0a, 0x18, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x31,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x28, 0x8a, 0xa2, 0x1f, 0x24, 0x5a, 0x22, 0xba, 0x01, 0x1f, 0x08, 0x02, 0x12,
	0x1b, 0x0a, 0x19, 0x32, 0x30, 0x30, 0x36, 0x2d, 0x30, 0x31, 0x2d, 0x30, 0x32, 0x54, 0x31, 0x35,
	0x3a, 0x30, 0x34, 0x3a, 0x30, 0x35, 0x5a, 0x30, 0x37, 0x3a, 0x30, 0x30, 0x48, 0x0a, 0x52, 0x15,
	0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x31, 0x12, 0x5e, 0x0a, 0x16, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x31, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xba, 0x01, 0x02, 0x08, 0x03, 0x48, 0x0b,
	0x52, 0x13, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78,
	0x4e, 0x61, 0x6e, 0x6f, 0x31, 0x12, 0x60, 0x0a, 0x17, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x31,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xba, 0x01, 0x02, 0x08, 0x05, 0x48,
	0x0b, 0x52, 0x14, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69,
	0x78, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x31, 0x12, 0x60, 0x0a, 0x17, 0x66, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6d, 0x69, 0x6c, 0x6c,
	0x69, 0x31, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xba, 0x01, 0x02, 0x08,
	0x07, 0x48, 0x0c, 0x52, 0x14, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55,
	0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x31, 0x12, 0x5c, 0x0a, 0x15, 0x66, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x73, 0x65,
	0x63, 0x31, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xba, 0x01, 0x02, 0x08,
	0x09, 0x48, 0x0c, 0x52, 0x12, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55,
	0x6e, 0x69, 0x78, 0x53, 0x65, 0x63, 0x31, 0x12, 0x6b, 0x0a, 0x1d, 0x66, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6e, 0x61, 0x6e, 0x6f,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07,
	0x5a, 0x05, 0xba, 0x01, 0x02, 0x08, 0x04, 0x48, 0x0d, 0x52, 0x19, 0x66, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x31, 0x12, 0x6d, 0x0a, 0x1e, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05,
	0xba, 0x01, 0x02, 0x08, 0x06, 0x48, 0x0d, 0x52, 0x1a, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x31, 0x12, 0x6d, 0x0a, 0x1e, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xba,
	0x01, 0x02, 0x08, 0x08, 0x48, 0x0e, 0x52, 0x1a, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x31, 0x12, 0x69, 0x0a, 0x1c, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x73, 0x65, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x31, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0x8a, 0xa2, 0x1f, 0x07, 0x5a, 0x05, 0xba, 0x01, 0x02, 0x08,
	0x0a, 0x48, 0x0e, 0x52, 0x18, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55,
	0x6e, 0x69, 0x78, 0x53, 0x65, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x42, 0x1d, 0x0a,
	0x08, 0x4f, 0x6e, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x31, 0x12, 0x11, 0x92, 0xa2, 0x1f, 0x0d, 0x0a,
	0x09, 0x6f, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x31, 0x20, 0x00, 0x42, 0x1d, 0x0a, 0x08,
	0x4f, 0x6e, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x32, 0x12, 0x11, 0x92, 0xa2, 0x1f, 0x0d, 0x0a, 0x09,
	0x6f, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x32, 0x20, 0x01, 0x42, 0x1b, 0x0a, 0x07, 0x4f,
	0x6e, 0x65, 0x41, 0x6e, 0x79, 0x31, 0x12, 0x10, 0x92, 0xa2, 0x1f, 0x0c, 0x0a, 0x08, 0x6f, 0x6e,
	0x65, 0x5f, 0x61, 0x6e, 0x79, 0x31, 0x20, 0x01, 0x42, 0x25, 0x0a, 0x0c, 0x4f, 0x6e, 0x65, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0x15, 0x92, 0xa2, 0x1f, 0x11, 0x0a, 0x0d,
	0x6f, 0x6e, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x20, 0x00, 0x42,
	0x25, 0x0a, 0x0c, 0x4f, 0x6e, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x12,
	0x15, 0x92, 0xa2, 0x1f, 0x11, 0x0a, 0x0d, 0x6f, 0x6e, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x32, 0x20, 0x01, 0x42, 0x25, 0x0a, 0x0c, 0x4f, 0x6e, 0x65, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x33, 0x12, 0x15, 0x92, 0xa2, 0x1f, 0x11, 0x0a, 0x0d, 0x6f, 0x6e,
	0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x33, 0x20, 0x00, 0x42, 0x25, 0x0a,
	0x0c, 0x4f, 0x6e, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x34, 0x12, 0x15, 0x92,
	0xa2, 0x1f, 0x11, 0x0a, 0x0d, 0x6f, 0x6e, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x34, 0x20, 0x01, 0x42, 0x25, 0x0a, 0x0c, 0x4f, 0x6e, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x35, 0x12, 0x15, 0x92, 0xa2, 0x1f, 0x11, 0x0a, 0x0d, 0x6f, 0x6e, 0x65, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x35, 0x20, 0x00, 0x42, 0x25, 0x0a, 0x0c, 0x4f,
	0x6e, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x36, 0x12, 0x15, 0x92, 0xa2, 0x1f,
	0x11, 0x0a, 0x0d, 0x6f, 0x6e, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x36,
	0x20, 0x01, 0x42, 0x25, 0x0a, 0x0c, 0x4f, 0x6e, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x37, 0x12, 0x15, 0x92, 0xa2, 0x1f, 0x11, 0x0a, 0x0d, 0x6f, 0x6e, 0x65, 0x5f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x37, 0x20, 0x00, 0x42, 0x27, 0x0a, 0x0d, 0x4f, 0x6e, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x31, 0x12, 0x16, 0x92, 0xa2, 0x1f, 0x12,
	0x0a, 0x0e, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x31,
	0x20, 0x00, 0x42, 0x27, 0x0a, 0x0d, 0x4f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x32, 0x12, 0x16, 0x92, 0xa2, 0x1f, 0x12, 0x0a, 0x0e, 0x6f, 0x6e, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x32, 0x20, 0x01, 0x42, 0x27, 0x0a, 0x0d, 0x4f,
	0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x33, 0x12, 0x16, 0x92, 0xa2,
	0x1f, 0x12, 0x0a, 0x0e, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x33, 0x20, 0x00, 0x42, 0x27, 0x0a, 0x0d, 0x4f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x34, 0x12, 0x16, 0x92, 0xa2, 0x1f, 0x12, 0x0a, 0x0e, 0x6f, 0x6e, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x34, 0x20, 0x01, 0x42, 0x27, 0x0a,
	0x0d, 0x4f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x35, 0x12, 0x16,
	0x92, 0xa2, 0x1f, 0x12, 0x0a, 0x0e, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x35, 0x20, 0x00, 0x42, 0x14, 0x5a, 0x12, 0x78, 0x67, 0x6f, 0x2f, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x62, 0x72, 0x65, 0x66, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tests_proto_cases_references_wkt_oneof_proto_rawDescOnce sync.Once
	file_tests_proto_cases_references_wkt_oneof_proto_rawDescData = file_tests_proto_cases_references_wkt_oneof_proto_rawDesc
)

func file_tests_proto_cases_references_wkt_oneof_proto_rawDescGZIP() []byte {
	file_tests_proto_cases_references_wkt_oneof_proto_rawDescOnce.Do(func() {
		file_tests_proto_cases_references_wkt_oneof_proto_rawDescData = protoimpl.X.CompressGZIP(file_tests_proto_cases_references_wkt_oneof_proto_rawDescData)
	})
	return file_tests_proto_cases_references_wkt_oneof_proto_rawDescData
}

var file_tests_proto_cases_references_wkt_oneof_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_tests_proto_cases_references_wkt_oneof_proto_goTypes = []interface{}{
	(*WKTOneOf1)(nil),             // 0: wkt_oneof.WKTOneOf1
	(Enum1)(0),                    // 1: private.Enum1
	(*anypb.Any)(nil),             // 2: google.protobuf.Any
	(*durationpb.Duration)(nil),   // 3: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_tests_proto_cases_references_wkt_oneof_proto_depIdxs = []int32{
	1,  // 0: wkt_oneof.WKTOneOf1.f_enum_number1:type_name -> private.Enum1
	1,  // 1: wkt_oneof.WKTOneOf1.f_enum_string1:type_name -> private.Enum1
	1,  // 2: wkt_oneof.WKTOneOf1.f_enum_number_string1:type_name -> private.Enum1
	1,  // 3: wkt_oneof.WKTOneOf1.f_enum_number_string2:type_name -> private.Enum1
	2,  // 4: wkt_oneof.WKTOneOf1.f_any_native1:type_name -> google.protobuf.Any
	2,  // 5: wkt_oneof.WKTOneOf1.f_any_proto1:type_name -> google.protobuf.Any
	3,  // 6: wkt_oneof.WKTOneOf1.f_duration_native1:type_name -> google.protobuf.Duration
	3,  // 7: wkt_oneof.WKTOneOf1.f_duration_string1:type_name -> google.protobuf.Duration
	3,  // 8: wkt_oneof.WKTOneOf1.f_duration_nanosecond1:type_name -> google.protobuf.Duration
	3,  // 9: wkt_oneof.WKTOneOf1.f_duration_microsecond1:type_name -> google.protobuf.Duration
	3,  // 10: wkt_oneof.WKTOneOf1.f_duration_millisecond1:type_name -> google.protobuf.Duration
	3,  // 11: wkt_oneof.WKTOneOf1.f_duration_second1:type_name -> google.protobuf.Duration
	3,  // 12: wkt_oneof.WKTOneOf1.f_duration_minute1:type_name -> google.protobuf.Duration
	3,  // 13: wkt_oneof.WKTOneOf1.f_duration_hour1:type_name -> google.protobuf.Duration
	3,  // 14: wkt_oneof.WKTOneOf1.f_duration_nanosecond_string1:type_name -> google.protobuf.Duration
	3,  // 15: wkt_oneof.WKTOneOf1.f_duration_microsecond_string1:type_name -> google.protobuf.Duration
	3,  // 16: wkt_oneof.WKTOneOf1.f_duration_millisecond_string1:type_name -> google.protobuf.Duration
	3,  // 17: wkt_oneof.WKTOneOf1.f_duration_second_string1:type_name -> google.protobuf.Duration
	3,  // 18: wkt_oneof.WKTOneOf1.f_duration_minute_string1:type_name -> google.protobuf.Duration
	3,  // 19: wkt_oneof.WKTOneOf1.f_duration_hour_string1:type_name -> google.protobuf.Duration
	4,  // 20: wkt_oneof.WKTOneOf1.f_timestamp_native1:type_name -> google.protobuf.Timestamp
	4,  // 21: wkt_oneof.WKTOneOf1.f_timestamp_time_layout1:type_name -> google.protobuf.Timestamp
	4,  // 22: wkt_oneof.WKTOneOf1.f_timestamp_unix_nano1:type_name -> google.protobuf.Timestamp
	4,  // 23: wkt_oneof.WKTOneOf1.f_timestamp_unix_micro1:type_name -> google.protobuf.Timestamp
	4,  // 24: wkt_oneof.WKTOneOf1.f_timestamp_unix_milli1:type_name -> google.protobuf.Timestamp
	4,  // 25: wkt_oneof.WKTOneOf1.f_timestamp_unix_sec1:type_name -> google.protobuf.Timestamp
	4,  // 26: wkt_oneof.WKTOneOf1.f_timestamp_unix_nano_string1:type_name -> google.protobuf.Timestamp
	4,  // 27: wkt_oneof.WKTOneOf1.f_timestamp_unix_micro_string1:type_name -> google.protobuf.Timestamp
	4,  // 28: wkt_oneof.WKTOneOf1.f_timestamp_unix_milli_string1:type_name -> google.protobuf.Timestamp
	4,  // 29: wkt_oneof.WKTOneOf1.f_timestamp_unix_sec_string1:type_name -> google.protobuf.Timestamp
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_tests_proto_cases_references_wkt_oneof_proto_init() }
func file_tests_proto_cases_references_wkt_oneof_proto_init() {
	if File_tests_proto_cases_references_wkt_oneof_proto != nil {
		return
	}
	file_tests_proto_cases_references_private_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tests_proto_cases_references_wkt_oneof_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WKTOneOf1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tests_proto_cases_references_wkt_oneof_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*WKTOneOf1_FEnumNumber1)(nil),
		(*WKTOneOf1_FEnumString1)(nil),
		(*WKTOneOf1_FEnumNumberString1)(nil),
		(*WKTOneOf1_FEnumNumberString2)(nil),
		(*WKTOneOf1_FAnyNative1)(nil),
		(*WKTOneOf1_FAnyProto1)(nil),
		(*WKTOneOf1_FDurationNative1)(nil),
		(*WKTOneOf1_FDurationString1)(nil),
		(*WKTOneOf1_FDurationNanosecond1)(nil),
		(*WKTOneOf1_FDurationMicrosecond1)(nil),
		(*WKTOneOf1_FDurationMillisecond1)(nil),
		(*WKTOneOf1_FDurationSecond1)(nil),
		(*WKTOneOf1_FDurationMinute1)(nil),
		(*WKTOneOf1_FDurationHour1)(nil),
		(*WKTOneOf1_FDurationNanosecondString1)(nil),
		(*WKTOneOf1_FDurationMicrosecondString1)(nil),
		(*WKTOneOf1_FDurationMillisecondString1)(nil),
		(*WKTOneOf1_FDurationSecondString1)(nil),
		(*WKTOneOf1_FDurationMinuteString1)(nil),
		(*WKTOneOf1_FDurationHourString1)(nil),
		(*WKTOneOf1_FTimestampNative1)(nil),
		(*WKTOneOf1_FTimestampTimeLayout1)(nil),
		(*WKTOneOf1_FTimestampUnixNano1)(nil),
		(*WKTOneOf1_FTimestampUnixMicro1)(nil),
		(*WKTOneOf1_FTimestampUnixMilli1)(nil),
		(*WKTOneOf1_FTimestampUnixSec1)(nil),
		(*WKTOneOf1_FTimestampUnixNanoString1)(nil),
		(*WKTOneOf1_FTimestampUnixMicroString1)(nil),
		(*WKTOneOf1_FTimestampUnixMilliString1)(nil),
		(*WKTOneOf1_FTimestampUnixSecString1)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tests_proto_cases_references_wkt_oneof_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tests_proto_cases_references_wkt_oneof_proto_goTypes,
		DependencyIndexes: file_tests_proto_cases_references_wkt_oneof_proto_depIdxs,
		MessageInfos:      file_tests_proto_cases_references_wkt_oneof_proto_msgTypes,
	}.Build()
	File_tests_proto_cases_references_wkt_oneof_proto = out.File
	file_tests_proto_cases_references_wkt_oneof_proto_rawDesc = nil
	file_tests_proto_cases_references_wkt_oneof_proto_goTypes = nil
	file_tests_proto_cases_references_wkt_oneof_proto_depIdxs = nil
}
