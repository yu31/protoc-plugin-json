// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: tests/proto/cases/boundary/boundary1.proto

package pbboundary

import (
	_ "github.com/yu31/protoc-plugin-json/xgo/pb/pbjson"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FString1 string `protobuf:"bytes,1,opt,name=f_string1,json=fString1,proto3" json:"f_string1,omitempty"`
	FString2 string `protobuf:"bytes,2,opt,name=f_string2,json=fString2,proto3" json:"f_string2,omitempty"`
	FString3 string `protobuf:"bytes,3,opt,name=f_string3,json=fString3,proto3" json:"f_string3,omitempty"`
}

func (x *Message1) Reset() {
	*x = Message1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_boundary_boundary1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message1) ProtoMessage() {}

func (x *Message1) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_boundary_boundary1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message1.ProtoReflect.Descriptor instead.
func (*Message1) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_boundary_boundary1_proto_rawDescGZIP(), []int{0}
}

func (x *Message1) GetFString1() string {
	if x != nil {
		return x.FString1
	}
	return ""
}

func (x *Message1) GetFString2() string {
	if x != nil {
		return x.FString2
	}
	return ""
}

func (x *Message1) GetFString3() string {
	if x != nil {
		return x.FString3
	}
	return ""
}

// Repeated1 for test cases:
// 1. The field is not empty and the content is null in JSON.
// 2. The field is not empty and the content is empty in JSON.
// 3. The length of field is less than the content in JSON.
// 4. The length of field is greater than the content in JSON.
type Repeated1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RString1 []string `protobuf:"bytes,1,rep,name=r_string1,json=rString1,proto3" json:"r_string1,omitempty"`
}

func (x *Repeated1) Reset() {
	*x = Repeated1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_boundary_boundary1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Repeated1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repeated1) ProtoMessage() {}

func (x *Repeated1) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_boundary_boundary1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repeated1.ProtoReflect.Descriptor instead.
func (*Repeated1) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_boundary_boundary1_proto_rawDescGZIP(), []int{1}
}

func (x *Repeated1) GetRString1() []string {
	if x != nil {
		return x.RString1
	}
	return nil
}

// Map1 for test cases:
// 1. The field is not empty and the content is null in JSON.
// 2. The field is not empty and the content is empty in JSON.
// 3. The length of field is less than the content in JSON.
// 4. The length of field is greater than the content in JSON.
type Map1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MString1 map[string]string `protobuf:"bytes,1,rep,name=m_string1,json=mString1,proto3" json:"m_string1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Map1) Reset() {
	*x = Map1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_boundary_boundary1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map1) ProtoMessage() {}

func (x *Map1) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_boundary_boundary1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map1.ProtoReflect.Descriptor instead.
func (*Map1) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_boundary_boundary1_proto_rawDescGZIP(), []int{2}
}

func (x *Map1) GetMString1() map[string]string {
	if x != nil {
		return x.MString1
	}
	return nil
}

// Complex1 for test cases:
// 1. multiple space between field.
type Complex1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FInt32    int32            `protobuf:"varint,1,opt,name=f_int32,json=fInt32,proto3" json:"f_int32,omitempty"`
	RInt64    []int64          `protobuf:"varint,2,rep,packed,name=r_int64,json=rInt64,proto3" json:"r_int64,omitempty"`
	FMessage1 *Message1        `protobuf:"bytes,3,opt,name=f_message1,json=fMessage1,proto3" json:"f_message1,omitempty"`
	MInt32    map[string]int32 `protobuf:"bytes,4,rep,name=m_int32,json=mInt32,proto3" json:"m_int32,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	FInt64    *int64           `protobuf:"varint,5,opt,name=f_int64,json=fInt64,proto3,oneof" json:"f_int64,omitempty"`
}

func (x *Complex1) Reset() {
	*x = Complex1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_boundary_boundary1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Complex1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Complex1) ProtoMessage() {}

func (x *Complex1) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_boundary_boundary1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Complex1.ProtoReflect.Descriptor instead.
func (*Complex1) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_boundary_boundary1_proto_rawDescGZIP(), []int{3}
}

func (x *Complex1) GetFInt32() int32 {
	if x != nil {
		return x.FInt32
	}
	return 0
}

func (x *Complex1) GetRInt64() []int64 {
	if x != nil {
		return x.RInt64
	}
	return nil
}

func (x *Complex1) GetFMessage1() *Message1 {
	if x != nil {
		return x.FMessage1
	}
	return nil
}

func (x *Complex1) GetMInt32() map[string]int32 {
	if x != nil {
		return x.MInt32
	}
	return nil
}

func (x *Complex1) GetFInt64() int64 {
	if x != nil && x.FInt64 != nil {
		return *x.FInt64
	}
	return 0
}

// Complex1 for test cases:
// 1. multiple nesting of json content.
type Complex2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FString string             `protobuf:"bytes,1,opt,name=f_string,json=fString,proto3" json:"f_string,omitempty"`
	RInt64  []int64            `protobuf:"varint,2,rep,packed,name=r_int64,json=rInt64,proto3" json:"r_int64,omitempty"`
	Level1  *Complex2_Level1   `protobuf:"bytes,3,opt,name=level1,proto3" json:"level1,omitempty"`
	RLevel1 []*Complex2_Level1 `protobuf:"bytes,4,rep,name=r_level1,json=rLevel1,proto3" json:"r_level1,omitempty"`
	RLevel2 []*Complex2_Level1 `protobuf:"bytes,5,rep,name=r_level2,json=rLevel2,proto3" json:"r_level2,omitempty"`
}

func (x *Complex2) Reset() {
	*x = Complex2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_boundary_boundary1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Complex2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Complex2) ProtoMessage() {}

func (x *Complex2) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_boundary_boundary1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Complex2.ProtoReflect.Descriptor instead.
func (*Complex2) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_boundary_boundary1_proto_rawDescGZIP(), []int{4}
}

func (x *Complex2) GetFString() string {
	if x != nil {
		return x.FString
	}
	return ""
}

func (x *Complex2) GetRInt64() []int64 {
	if x != nil {
		return x.RInt64
	}
	return nil
}

func (x *Complex2) GetLevel1() *Complex2_Level1 {
	if x != nil {
		return x.Level1
	}
	return nil
}

func (x *Complex2) GetRLevel1() []*Complex2_Level1 {
	if x != nil {
		return x.RLevel1
	}
	return nil
}

func (x *Complex2) GetRLevel2() []*Complex2_Level1 {
	if x != nil {
		return x.RLevel2
	}
	return nil
}

type Complex2_Level1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level2  *Complex2_Level2 `protobuf:"bytes,1,opt,name=level2,proto3" json:"level2,omitempty"`
	FString string           `protobuf:"bytes,2,opt,name=f_string,json=fString,proto3" json:"f_string,omitempty"`
	RString []string         `protobuf:"bytes,3,rep,name=r_string,json=rString,proto3" json:"r_string,omitempty"`
}

func (x *Complex2_Level1) Reset() {
	*x = Complex2_Level1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_boundary_boundary1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Complex2_Level1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Complex2_Level1) ProtoMessage() {}

func (x *Complex2_Level1) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_boundary_boundary1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Complex2_Level1.ProtoReflect.Descriptor instead.
func (*Complex2_Level1) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_boundary_boundary1_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Complex2_Level1) GetLevel2() *Complex2_Level2 {
	if x != nil {
		return x.Level2
	}
	return nil
}

func (x *Complex2_Level1) GetFString() string {
	if x != nil {
		return x.FString
	}
	return ""
}

func (x *Complex2_Level1) GetRString() []string {
	if x != nil {
		return x.RString
	}
	return nil
}

type Complex2_Level2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FString string           `protobuf:"bytes,1,opt,name=f_string,json=fString,proto3" json:"f_string,omitempty"`
	Level3  *Complex2_Level3 `protobuf:"bytes,2,opt,name=level3,proto3" json:"level3,omitempty"`
	RInt64  []int64          `protobuf:"varint,3,rep,packed,name=r_int64,json=rInt64,proto3" json:"r_int64,omitempty"`
}

func (x *Complex2_Level2) Reset() {
	*x = Complex2_Level2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_boundary_boundary1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Complex2_Level2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Complex2_Level2) ProtoMessage() {}

func (x *Complex2_Level2) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_boundary_boundary1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Complex2_Level2.ProtoReflect.Descriptor instead.
func (*Complex2_Level2) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_boundary_boundary1_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Complex2_Level2) GetFString() string {
	if x != nil {
		return x.FString
	}
	return ""
}

func (x *Complex2_Level2) GetLevel3() *Complex2_Level3 {
	if x != nil {
		return x.Level3
	}
	return nil
}

func (x *Complex2_Level2) GetRInt64() []int64 {
	if x != nil {
		return x.RInt64
	}
	return nil
}

type Complex2_Level3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FInt32 int32            `protobuf:"varint,1,opt,name=f_int32,json=fInt32,proto3" json:"f_int32,omitempty"`
	RInt64 []int64          `protobuf:"varint,2,rep,packed,name=r_int64,json=rInt64,proto3" json:"r_int64,omitempty"`
	MInt32 map[string]int32 `protobuf:"bytes,3,rep,name=m_int32,json=mInt32,proto3" json:"m_int32,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	PInt64 *int64           `protobuf:"varint,4,opt,name=p_int64,json=pInt64,proto3,oneof" json:"p_int64,omitempty"`
}

func (x *Complex2_Level3) Reset() {
	*x = Complex2_Level3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_boundary_boundary1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Complex2_Level3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Complex2_Level3) ProtoMessage() {}

func (x *Complex2_Level3) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_boundary_boundary1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Complex2_Level3.ProtoReflect.Descriptor instead.
func (*Complex2_Level3) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_boundary_boundary1_proto_rawDescGZIP(), []int{4, 2}
}

func (x *Complex2_Level3) GetFInt32() int32 {
	if x != nil {
		return x.FInt32
	}
	return 0
}

func (x *Complex2_Level3) GetRInt64() []int64 {
	if x != nil {
		return x.RInt64
	}
	return nil
}

func (x *Complex2_Level3) GetMInt32() map[string]int32 {
	if x != nil {
		return x.MInt32
	}
	return nil
}

func (x *Complex2_Level3) GetPInt64() int64 {
	if x != nil && x.PInt64 != nil {
		return *x.PInt64
	}
	return 0
}

var File_tests_proto_cases_boundary_boundary1_proto protoreflect.FileDescriptor

var file_tests_proto_cases_boundary_boundary1_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61,
	0x73, 0x65, 0x73, 0x2f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x2f, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x73, 0x0a, 0x08, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00,
	0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x8a,
	0xa2, 0x1f, 0x00, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x21, 0x0a,
	0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x33,
	0x22, 0x2e, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x31, 0x12, 0x21, 0x0a,
	0x09, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x08, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31,
	0x22, 0x87, 0x01, 0x0a, 0x04, 0x4d, 0x61, 0x70, 0x31, 0x12, 0x42, 0x0a, 0x09, 0x6d, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x70, 0x31, 0x2e,
	0x4d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x04, 0x8a,
	0xa2, 0x1f, 0x00, 0x52, 0x08, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x1a, 0x3b, 0x0a,
	0x0d, 0x4d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb1, 0x02, 0x0a, 0x08, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x31, 0x12, 0x1d, 0x0a, 0x07, 0x66, 0x5f, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x06,
	0x66, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x1d, 0x0a, 0x07, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x06, 0x72,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x3a, 0x0a, 0x0a, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31,
	0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x09, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x31, 0x12, 0x40, 0x0a, 0x07, 0x6d, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x31, 0x2e, 0x4d, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x06, 0x6d, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x12, 0x22, 0x0a, 0x07, 0x66, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x48, 0x00, 0x52, 0x06, 0x66, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x88, 0x01, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4d, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x22, 0x91,
	0x06, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x32, 0x12, 0x1f, 0x0a, 0x08, 0x66,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x8a,
	0xa2, 0x1f, 0x00, 0x52, 0x07, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x07,
	0x72, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x42, 0x04, 0x8a,
	0xa2, 0x1f, 0x00, 0x52, 0x06, 0x72, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x3a, 0x0a, 0x06, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x32, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52,
	0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x31, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x32,
	0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x07, 0x72,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x32, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x32, 0x2e,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x07, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x32, 0x1a, 0x86, 0x01, 0x0a, 0x06, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31,
	0x12, 0x3a, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x32, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x42, 0x04,
	0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x12, 0x1f, 0x0a, 0x08,
	0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04,
	0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x07, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a,
	0x08, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x07, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x84,
	0x01, 0x0a, 0x06, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x12, 0x1f, 0x0a, 0x08, 0x66, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x8a, 0xa2, 0x1f,
	0x00, 0x52, 0x07, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x06, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x33, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x32, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x06,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x12, 0x1d, 0x0a, 0x07, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x06, 0x72,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0xfa, 0x01, 0x0a, 0x06, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x33,
	0x12, 0x1d, 0x0a, 0x07, 0x66, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x06, 0x66, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12,
	0x1d, 0x0a, 0x07, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03,
	0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x06, 0x72, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x47,
	0x0a, 0x07, 0x6d, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x78, 0x32, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x2e, 0x4d, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52,
	0x06, 0x6d, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x22, 0x0a, 0x07, 0x70, 0x5f, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x48, 0x00,
	0x52, 0x06, 0x70, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x88, 0x01, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4d,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x5f, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x42, 0x19, 0x5a, 0x17, 0x78, 0x67, 0x6f, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f,
	0x70, 0x62, 0x2f, 0x70, 0x62, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tests_proto_cases_boundary_boundary1_proto_rawDescOnce sync.Once
	file_tests_proto_cases_boundary_boundary1_proto_rawDescData = file_tests_proto_cases_boundary_boundary1_proto_rawDesc
)

func file_tests_proto_cases_boundary_boundary1_proto_rawDescGZIP() []byte {
	file_tests_proto_cases_boundary_boundary1_proto_rawDescOnce.Do(func() {
		file_tests_proto_cases_boundary_boundary1_proto_rawDescData = protoimpl.X.CompressGZIP(file_tests_proto_cases_boundary_boundary1_proto_rawDescData)
	})
	return file_tests_proto_cases_boundary_boundary1_proto_rawDescData
}

var file_tests_proto_cases_boundary_boundary1_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_tests_proto_cases_boundary_boundary1_proto_goTypes = []interface{}{
	(*Message1)(nil),        // 0: type_common.Message1
	(*Repeated1)(nil),       // 1: type_common.Repeated1
	(*Map1)(nil),            // 2: type_common.Map1
	(*Complex1)(nil),        // 3: type_common.Complex1
	(*Complex2)(nil),        // 4: type_common.Complex2
	nil,                     // 5: type_common.Map1.MString1Entry
	nil,                     // 6: type_common.Complex1.MInt32Entry
	(*Complex2_Level1)(nil), // 7: type_common.Complex2.Level1
	(*Complex2_Level2)(nil), // 8: type_common.Complex2.Level2
	(*Complex2_Level3)(nil), // 9: type_common.Complex2.Level3
	nil,                     // 10: type_common.Complex2.Level3.MInt32Entry
}
var file_tests_proto_cases_boundary_boundary1_proto_depIdxs = []int32{
	5,  // 0: type_common.Map1.m_string1:type_name -> type_common.Map1.MString1Entry
	0,  // 1: type_common.Complex1.f_message1:type_name -> type_common.Message1
	6,  // 2: type_common.Complex1.m_int32:type_name -> type_common.Complex1.MInt32Entry
	7,  // 3: type_common.Complex2.level1:type_name -> type_common.Complex2.Level1
	7,  // 4: type_common.Complex2.r_level1:type_name -> type_common.Complex2.Level1
	7,  // 5: type_common.Complex2.r_level2:type_name -> type_common.Complex2.Level1
	8,  // 6: type_common.Complex2.Level1.level2:type_name -> type_common.Complex2.Level2
	9,  // 7: type_common.Complex2.Level2.level3:type_name -> type_common.Complex2.Level3
	10, // 8: type_common.Complex2.Level3.m_int32:type_name -> type_common.Complex2.Level3.MInt32Entry
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_tests_proto_cases_boundary_boundary1_proto_init() }
func file_tests_proto_cases_boundary_boundary1_proto_init() {
	if File_tests_proto_cases_boundary_boundary1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tests_proto_cases_boundary_boundary1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_proto_cases_boundary_boundary1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Repeated1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_proto_cases_boundary_boundary1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_proto_cases_boundary_boundary1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Complex1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_proto_cases_boundary_boundary1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Complex2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_proto_cases_boundary_boundary1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Complex2_Level1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_proto_cases_boundary_boundary1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Complex2_Level2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_proto_cases_boundary_boundary1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Complex2_Level3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tests_proto_cases_boundary_boundary1_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_tests_proto_cases_boundary_boundary1_proto_msgTypes[9].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tests_proto_cases_boundary_boundary1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tests_proto_cases_boundary_boundary1_proto_goTypes,
		DependencyIndexes: file_tests_proto_cases_boundary_boundary1_proto_depIdxs,
		MessageInfos:      file_tests_proto_cases_boundary_boundary1_proto_msgTypes,
	}.Build()
	File_tests_proto_cases_boundary_boundary1_proto = out.File
	file_tests_proto_cases_boundary_boundary1_proto_rawDesc = nil
	file_tests_proto_cases_boundary_boundary1_proto_goTypes = nil
	file_tests_proto_cases_boundary_boundary1_proto_depIdxs = nil
}
