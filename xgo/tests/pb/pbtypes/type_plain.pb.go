// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: tests/proto/cases/types/type_plain.proto

package pbtypes

import (
	_ "github.com/yu31/protoc-plugin-json/xgo/pb/pbjson"
	pbexternal "github.com/yu31/protoc-plugin-json/xgo/tests/pb/pbexternal"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EnumPlain1 used tests cases in this file.
type EnumPlain1 int32

const (
	EnumPlain1_Zero  EnumPlain1 = 0
	EnumPlain1_One   EnumPlain1 = 2
	EnumPlain1_Two   EnumPlain1 = 3
	EnumPlain1_Three EnumPlain1 = 5
	EnumPlain1_Four  EnumPlain1 = 6
	EnumPlain1_Five  EnumPlain1 = 7
	EnumPlain1_Six   EnumPlain1 = 9
	EnumPlain1_Seven EnumPlain1 = 11
	EnumPlain1_Eight EnumPlain1 = 12
	EnumPlain1_Nine  EnumPlain1 = 15
	EnumPlain1_Ten   EnumPlain1 = 17
)

// Enum value maps for EnumPlain1.
var (
	EnumPlain1_name = map[int32]string{
		0:  "Zero",
		2:  "One",
		3:  "Two",
		5:  "Three",
		6:  "Four",
		7:  "Five",
		9:  "Six",
		11: "Seven",
		12: "Eight",
		15: "Nine",
		17: "Ten",
	}
	EnumPlain1_value = map[string]int32{
		"Zero":  0,
		"One":   2,
		"Two":   3,
		"Three": 5,
		"Four":  6,
		"Five":  7,
		"Six":   9,
		"Seven": 11,
		"Eight": 12,
		"Nine":  15,
		"Ten":   17,
	}
)

func (x EnumPlain1) Enum() *EnumPlain1 {
	p := new(EnumPlain1)
	*p = x
	return p
}

func (x EnumPlain1) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumPlain1) Descriptor() protoreflect.EnumDescriptor {
	return file_tests_proto_cases_types_type_plain_proto_enumTypes[0].Descriptor()
}

func (EnumPlain1) Type() protoreflect.EnumType {
	return &file_tests_proto_cases_types_type_plain_proto_enumTypes[0]
}

func (x EnumPlain1) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumPlain1.Descriptor instead.
func (EnumPlain1) EnumDescriptor() ([]byte, []int) {
	return file_tests_proto_cases_types_type_plain_proto_rawDescGZIP(), []int{0}
}

// MessagePlain1 used tests cases in this file.
type MessagePlain1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FString1 string `protobuf:"bytes,1,opt,name=f_string1,json=fString1,proto3" json:"f_string1,omitempty"`
	FString2 string `protobuf:"bytes,2,opt,name=f_string2,json=fString2,proto3" json:"f_string2,omitempty"`
	FString3 string `protobuf:"bytes,3,opt,name=f_string3,json=fString3,proto3" json:"f_string3,omitempty"`
}

func (x *MessagePlain1) Reset() {
	*x = MessagePlain1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_types_type_plain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagePlain1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePlain1) ProtoMessage() {}

func (x *MessagePlain1) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_types_type_plain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePlain1.ProtoReflect.Descriptor instead.
func (*MessagePlain1) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_types_type_plain_proto_rawDescGZIP(), []int{0}
}

func (x *MessagePlain1) GetFString1() string {
	if x != nil {
		return x.FString1
	}
	return ""
}

func (x *MessagePlain1) GetFString2() string {
	if x != nil {
		return x.FString2
	}
	return ""
}

func (x *MessagePlain1) GetFString3() string {
	if x != nil {
		return x.FString3
	}
	return ""
}

// Test case for field plain.
type TypePlain1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FString1    string                             `protobuf:"bytes,1,opt,name=f_string1,json=fString1,proto3" json:"f_string1,omitempty"`
	FString2    string                             `protobuf:"bytes,2,opt,name=f_string2,json=fString2,proto3" json:"f_string2,omitempty"`
	FInt32      int32                              `protobuf:"varint,11,opt,name=f_int32,json=fInt32,proto3" json:"f_int32,omitempty"`
	FInt64      int64                              `protobuf:"varint,12,opt,name=f_int64,json=fInt64,proto3" json:"f_int64,omitempty"`
	FUint32     uint32                             `protobuf:"varint,13,opt,name=f_uint32,json=fUint32,proto3" json:"f_uint32,omitempty"`
	FUint64     uint64                             `protobuf:"varint,14,opt,name=f_uint64,json=fUint64,proto3" json:"f_uint64,omitempty"`
	FSint32     int32                              `protobuf:"zigzag32,15,opt,name=f_sint32,json=fSint32,proto3" json:"f_sint32,omitempty"`
	FSint64     int64                              `protobuf:"zigzag64,16,opt,name=f_sint64,json=fSint64,proto3" json:"f_sint64,omitempty"`
	FSfixed32   int32                              `protobuf:"fixed32,17,opt,name=f_sfixed32,json=fSfixed32,proto3" json:"f_sfixed32,omitempty"`
	FSfixed64   int64                              `protobuf:"fixed64,18,opt,name=f_sfixed64,json=fSfixed64,proto3" json:"f_sfixed64,omitempty"`
	FFixed32    uint32                             `protobuf:"fixed32,19,opt,name=f_fixed32,json=fFixed32,proto3" json:"f_fixed32,omitempty"`
	FFixed64    uint64                             `protobuf:"fixed64,20,opt,name=f_fixed64,json=fFixed64,proto3" json:"f_fixed64,omitempty"`
	FFloat      float32                            `protobuf:"fixed32,21,opt,name=f_float,json=fFloat,proto3" json:"f_float,omitempty"`
	FDouble     float64                            `protobuf:"fixed64,22,opt,name=f_double,json=fDouble,proto3" json:"f_double,omitempty"`
	FBool1      bool                               `protobuf:"varint,31,opt,name=f_bool1,json=fBool1,proto3" json:"f_bool1,omitempty"`
	FBytes1     []byte                             `protobuf:"bytes,32,opt,name=f_bytes1,json=fBytes1,proto3" json:"f_bytes1,omitempty"`
	FEnum1      EnumPlain1                         `protobuf:"varint,51,opt,name=f_enum1,json=fEnum1,proto3,enum=type_plain.EnumPlain1" json:"f_enum1,omitempty"`
	FEnum2      pbexternal.Enum1                   `protobuf:"varint,52,opt,name=f_enum2,json=fEnum2,proto3,enum=external.Enum1" json:"f_enum2,omitempty"`
	FEnum3      pbexternal.Embed_Enum1             `protobuf:"varint,53,opt,name=f_enum3,json=fEnum3,proto3,enum=external.Embed_Enum1" json:"f_enum3,omitempty"`
	FEnum4      pbexternal.Embed_Message_Enum1     `protobuf:"varint,54,opt,name=f_enum4,json=fEnum4,proto3,enum=external.Embed_Message_Enum1" json:"f_enum4,omitempty"`
	FEnum5      EnumCommon1                        `protobuf:"varint,55,opt,name=f_enum5,json=fEnum5,proto3,enum=type_common.EnumCommon1" json:"f_enum5,omitempty"`
	FEnum6      MessageCommon1_Enum1               `protobuf:"varint,56,opt,name=f_enum6,json=fEnum6,proto3,enum=type_common.MessageCommon1_Enum1" json:"f_enum6,omitempty"`
	FDuration1  *durationpb.Duration               `protobuf:"bytes,61,opt,name=f_duration1,json=fDuration1,proto3" json:"f_duration1,omitempty"`
	FDuration2  *durationpb.Duration               `protobuf:"bytes,62,opt,name=f_duration2,json=fDuration2,proto3" json:"f_duration2,omitempty"`
	FTimestamp1 *timestamppb.Timestamp             `protobuf:"bytes,63,opt,name=f_timestamp1,json=fTimestamp1,proto3" json:"f_timestamp1,omitempty"`
	FTimestamp2 *timestamppb.Timestamp             `protobuf:"bytes,64,opt,name=f_timestamp2,json=fTimestamp2,proto3" json:"f_timestamp2,omitempty"`
	FAny1       *anypb.Any                         `protobuf:"bytes,65,opt,name=f_any1,json=fAny1,proto3" json:"f_any1,omitempty"`
	FAny2       *anypb.Any                         `protobuf:"bytes,66,opt,name=f_any2,json=fAny2,proto3" json:"f_any2,omitempty"`
	FMessage1   *MessagePlain1                     `protobuf:"bytes,71,opt,name=f_message1,json=fMessage1,proto3" json:"f_message1,omitempty"`
	FMessage2   *MessagePlain1_Embed1              `protobuf:"bytes,72,opt,name=f_message2,json=fMessage2,proto3" json:"f_message2,omitempty"`
	FMessage3   *MessagePlain1_Embed1_Embed2       `protobuf:"bytes,73,opt,name=f_message3,json=fMessage3,proto3" json:"f_message3,omitempty"`
	FMessage4   *pbexternal.Message1               `protobuf:"bytes,74,opt,name=f_message4,json=fMessage4,proto3" json:"f_message4,omitempty"`
	FMessage5   *pbexternal.Message1_Embed1        `protobuf:"bytes,75,opt,name=f_message5,json=fMessage5,proto3" json:"f_message5,omitempty"`
	FMessage6   *pbexternal.Message1_Embed1_Embed2 `protobuf:"bytes,76,opt,name=f_message6,json=fMessage6,proto3" json:"f_message6,omitempty"`
	FMessage7   *MessageCommon1                    `protobuf:"bytes,77,opt,name=f_message7,json=fMessage7,proto3" json:"f_message7,omitempty"`
	FMessage8   *MessageCommon1_Embed1             `protobuf:"bytes,78,opt,name=f_message8,json=fMessage8,proto3" json:"f_message8,omitempty"`
	FMessage9   *MessageCommon1_Embed1_Embed2      `protobuf:"bytes,79,opt,name=f_message9,json=fMessage9,proto3" json:"f_message9,omitempty"`
}

func (x *TypePlain1) Reset() {
	*x = TypePlain1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_types_type_plain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypePlain1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypePlain1) ProtoMessage() {}

func (x *TypePlain1) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_types_type_plain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypePlain1.ProtoReflect.Descriptor instead.
func (*TypePlain1) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_types_type_plain_proto_rawDescGZIP(), []int{1}
}

func (x *TypePlain1) GetFString1() string {
	if x != nil {
		return x.FString1
	}
	return ""
}

func (x *TypePlain1) GetFString2() string {
	if x != nil {
		return x.FString2
	}
	return ""
}

func (x *TypePlain1) GetFInt32() int32 {
	if x != nil {
		return x.FInt32
	}
	return 0
}

func (x *TypePlain1) GetFInt64() int64 {
	if x != nil {
		return x.FInt64
	}
	return 0
}

func (x *TypePlain1) GetFUint32() uint32 {
	if x != nil {
		return x.FUint32
	}
	return 0
}

func (x *TypePlain1) GetFUint64() uint64 {
	if x != nil {
		return x.FUint64
	}
	return 0
}

func (x *TypePlain1) GetFSint32() int32 {
	if x != nil {
		return x.FSint32
	}
	return 0
}

func (x *TypePlain1) GetFSint64() int64 {
	if x != nil {
		return x.FSint64
	}
	return 0
}

func (x *TypePlain1) GetFSfixed32() int32 {
	if x != nil {
		return x.FSfixed32
	}
	return 0
}

func (x *TypePlain1) GetFSfixed64() int64 {
	if x != nil {
		return x.FSfixed64
	}
	return 0
}

func (x *TypePlain1) GetFFixed32() uint32 {
	if x != nil {
		return x.FFixed32
	}
	return 0
}

func (x *TypePlain1) GetFFixed64() uint64 {
	if x != nil {
		return x.FFixed64
	}
	return 0
}

func (x *TypePlain1) GetFFloat() float32 {
	if x != nil {
		return x.FFloat
	}
	return 0
}

func (x *TypePlain1) GetFDouble() float64 {
	if x != nil {
		return x.FDouble
	}
	return 0
}

func (x *TypePlain1) GetFBool1() bool {
	if x != nil {
		return x.FBool1
	}
	return false
}

func (x *TypePlain1) GetFBytes1() []byte {
	if x != nil {
		return x.FBytes1
	}
	return nil
}

func (x *TypePlain1) GetFEnum1() EnumPlain1 {
	if x != nil {
		return x.FEnum1
	}
	return EnumPlain1_Zero
}

func (x *TypePlain1) GetFEnum2() pbexternal.Enum1 {
	if x != nil {
		return x.FEnum2
	}
	return pbexternal.Enum1(0)
}

func (x *TypePlain1) GetFEnum3() pbexternal.Embed_Enum1 {
	if x != nil {
		return x.FEnum3
	}
	return pbexternal.Embed_Enum1(0)
}

func (x *TypePlain1) GetFEnum4() pbexternal.Embed_Message_Enum1 {
	if x != nil {
		return x.FEnum4
	}
	return pbexternal.Embed_Message_Enum1(0)
}

func (x *TypePlain1) GetFEnum5() EnumCommon1 {
	if x != nil {
		return x.FEnum5
	}
	return EnumCommon1_Zero
}

func (x *TypePlain1) GetFEnum6() MessageCommon1_Enum1 {
	if x != nil {
		return x.FEnum6
	}
	return MessageCommon1_Zero
}

func (x *TypePlain1) GetFDuration1() *durationpb.Duration {
	if x != nil {
		return x.FDuration1
	}
	return nil
}

func (x *TypePlain1) GetFDuration2() *durationpb.Duration {
	if x != nil {
		return x.FDuration2
	}
	return nil
}

func (x *TypePlain1) GetFTimestamp1() *timestamppb.Timestamp {
	if x != nil {
		return x.FTimestamp1
	}
	return nil
}

func (x *TypePlain1) GetFTimestamp2() *timestamppb.Timestamp {
	if x != nil {
		return x.FTimestamp2
	}
	return nil
}

func (x *TypePlain1) GetFAny1() *anypb.Any {
	if x != nil {
		return x.FAny1
	}
	return nil
}

func (x *TypePlain1) GetFAny2() *anypb.Any {
	if x != nil {
		return x.FAny2
	}
	return nil
}

func (x *TypePlain1) GetFMessage1() *MessagePlain1 {
	if x != nil {
		return x.FMessage1
	}
	return nil
}

func (x *TypePlain1) GetFMessage2() *MessagePlain1_Embed1 {
	if x != nil {
		return x.FMessage2
	}
	return nil
}

func (x *TypePlain1) GetFMessage3() *MessagePlain1_Embed1_Embed2 {
	if x != nil {
		return x.FMessage3
	}
	return nil
}

func (x *TypePlain1) GetFMessage4() *pbexternal.Message1 {
	if x != nil {
		return x.FMessage4
	}
	return nil
}

func (x *TypePlain1) GetFMessage5() *pbexternal.Message1_Embed1 {
	if x != nil {
		return x.FMessage5
	}
	return nil
}

func (x *TypePlain1) GetFMessage6() *pbexternal.Message1_Embed1_Embed2 {
	if x != nil {
		return x.FMessage6
	}
	return nil
}

func (x *TypePlain1) GetFMessage7() *MessageCommon1 {
	if x != nil {
		return x.FMessage7
	}
	return nil
}

func (x *TypePlain1) GetFMessage8() *MessageCommon1_Embed1 {
	if x != nil {
		return x.FMessage8
	}
	return nil
}

func (x *TypePlain1) GetFMessage9() *MessageCommon1_Embed1_Embed2 {
	if x != nil {
		return x.FMessage9
	}
	return nil
}

type MessagePlain1_Embed1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FString1 string `protobuf:"bytes,1,opt,name=f_string1,json=fString1,proto3" json:"f_string1,omitempty"`
	FString2 string `protobuf:"bytes,2,opt,name=f_string2,json=fString2,proto3" json:"f_string2,omitempty"`
	FString3 string `protobuf:"bytes,3,opt,name=f_string3,json=fString3,proto3" json:"f_string3,omitempty"`
}

func (x *MessagePlain1_Embed1) Reset() {
	*x = MessagePlain1_Embed1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_types_type_plain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagePlain1_Embed1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePlain1_Embed1) ProtoMessage() {}

func (x *MessagePlain1_Embed1) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_types_type_plain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePlain1_Embed1.ProtoReflect.Descriptor instead.
func (*MessagePlain1_Embed1) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_types_type_plain_proto_rawDescGZIP(), []int{0, 0}
}

func (x *MessagePlain1_Embed1) GetFString1() string {
	if x != nil {
		return x.FString1
	}
	return ""
}

func (x *MessagePlain1_Embed1) GetFString2() string {
	if x != nil {
		return x.FString2
	}
	return ""
}

func (x *MessagePlain1_Embed1) GetFString3() string {
	if x != nil {
		return x.FString3
	}
	return ""
}

type MessagePlain1_Embed1_Embed2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FString1 string `protobuf:"bytes,1,opt,name=f_string1,json=fString1,proto3" json:"f_string1,omitempty"`
	FString2 string `protobuf:"bytes,2,opt,name=f_string2,json=fString2,proto3" json:"f_string2,omitempty"`
	FString3 string `protobuf:"bytes,3,opt,name=f_string3,json=fString3,proto3" json:"f_string3,omitempty"`
}

func (x *MessagePlain1_Embed1_Embed2) Reset() {
	*x = MessagePlain1_Embed1_Embed2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_types_type_plain_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagePlain1_Embed1_Embed2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePlain1_Embed1_Embed2) ProtoMessage() {}

func (x *MessagePlain1_Embed1_Embed2) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_types_type_plain_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePlain1_Embed1_Embed2.ProtoReflect.Descriptor instead.
func (*MessagePlain1_Embed1_Embed2) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_types_type_plain_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *MessagePlain1_Embed1_Embed2) GetFString1() string {
	if x != nil {
		return x.FString1
	}
	return ""
}

func (x *MessagePlain1_Embed1_Embed2) GetFString2() string {
	if x != nil {
		return x.FString2
	}
	return ""
}

func (x *MessagePlain1_Embed1_Embed2) GetFString3() string {
	if x != nil {
		return x.FString3
	}
	return ""
}

var File_tests_proto_cases_types_type_plain_proto protoreflect.FileDescriptor

var file_tests_proto_cases_types_type_plain_proto_rawDesc = []byte{
	0x0a, 0x28, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61,
	0x73, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x21, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xdf, 0x02, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x6c,
	0x61, 0x69, 0x6e, 0x31, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x08, 0x66,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00,
	0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x8a,
	0xa2, 0x1f, 0x00, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x33, 0x1a, 0xe4, 0x01,
	0x0a, 0x06, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x8a, 0xa2, 0x1f,
	0x00, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x21, 0x0a, 0x09, 0x66,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04,
	0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x21,
	0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x33, 0x1a, 0x71, 0x0a, 0x06, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x32, 0x12, 0x21, 0x0a, 0x09, 0x66,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04,
	0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x21,
	0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x32, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x33, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x33, 0x22, 0xde, 0x0e, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x50, 0x6c, 0x61,
	0x69, 0x6e, 0x31, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x08, 0x66, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52,
	0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x1d, 0x0a, 0x07, 0x66, 0x5f, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00,
	0x52, 0x06, 0x66, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x1d, 0x0a, 0x07, 0x66, 0x5f, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52,
	0x06, 0x66, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1f, 0x0a, 0x08, 0x66, 0x5f, 0x75, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52,
	0x07, 0x66, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x1f, 0x0a, 0x08, 0x66, 0x5f, 0x75, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00,
	0x52, 0x07, 0x66, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1f, 0x0a, 0x08, 0x66, 0x5f, 0x73,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x11, 0x42, 0x04, 0x8a, 0xa2, 0x1f,
	0x00, 0x52, 0x07, 0x66, 0x53, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x1f, 0x0a, 0x08, 0x66, 0x5f,
	0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x10, 0x20, 0x01, 0x28, 0x12, 0x42, 0x04, 0x8a, 0xa2,
	0x1f, 0x00, 0x52, 0x07, 0x66, 0x53, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x23, 0x0a, 0x0a, 0x66,
	0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0f, 0x42,
	0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x09, 0x66, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32,
	0x12, 0x23, 0x0a, 0x0a, 0x66, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x10, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x09, 0x66, 0x53, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x33, 0x32, 0x18, 0x13, 0x20, 0x01, 0x28, 0x07, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x08,
	0x66, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x5f, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x14, 0x20, 0x01, 0x28, 0x06, 0x42, 0x04, 0x8a, 0xa2, 0x1f,
	0x00, 0x52, 0x08, 0x66, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x1d, 0x0a, 0x07, 0x66,
	0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x02, 0x42, 0x04, 0x8a, 0xa2,
	0x1f, 0x00, 0x52, 0x06, 0x66, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x66, 0x5f,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x42, 0x04, 0x8a, 0xa2,
	0x1f, 0x00, 0x52, 0x07, 0x66, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x66,
	0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x31, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0x8a, 0xa2,
	0x1f, 0x00, 0x52, 0x06, 0x66, 0x42, 0x6f, 0x6f, 0x6c, 0x31, 0x12, 0x1f, 0x0a, 0x08, 0x66, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x31, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x04, 0x8a, 0xa2,
	0x1f, 0x00, 0x52, 0x07, 0x66, 0x42, 0x79, 0x74, 0x65, 0x73, 0x31, 0x12, 0x35, 0x0a, 0x07, 0x66,
	0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x31, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x50, 0x6c,
	0x61, 0x69, 0x6e, 0x31, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x06, 0x66, 0x45, 0x6e, 0x75,
	0x6d, 0x31, 0x12, 0x2e, 0x0a, 0x07, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x32, 0x18, 0x34, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x45,
	0x6e, 0x75, 0x6d, 0x31, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x06, 0x66, 0x45, 0x6e, 0x75,
	0x6d, 0x32, 0x12, 0x34, 0x0a, 0x07, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x33, 0x18, 0x35, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x31, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00,
	0x52, 0x06, 0x66, 0x45, 0x6e, 0x75, 0x6d, 0x33, 0x12, 0x3c, 0x0a, 0x07, 0x66, 0x5f, 0x65, 0x6e,
	0x75, 0x6d, 0x34, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x31, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x06,
	0x66, 0x45, 0x6e, 0x75, 0x6d, 0x34, 0x12, 0x37, 0x0a, 0x07, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d,
	0x35, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x31, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x06, 0x66, 0x45, 0x6e, 0x75, 0x6d, 0x35, 0x12,
	0x40, 0x0a, 0x07, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x36, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x21, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x31, 0x2e, 0x45, 0x6e,
	0x75, 0x6d, 0x31, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x06, 0x66, 0x45, 0x6e, 0x75, 0x6d,
	0x36, 0x12, 0x40, 0x0a, 0x0b, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31,
	0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x0a, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x31, 0x12, 0x40, 0x0a, 0x0b, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x32, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x0a, 0x66, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x12, 0x43, 0x0a, 0x0c, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x31, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x0b, 0x66,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x31, 0x12, 0x43, 0x0a, 0x0c, 0x66, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x32, 0x18, 0x40, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0x8a, 0xa2,
	0x1f, 0x00, 0x52, 0x0b, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x32, 0x12,
	0x31, 0x0a, 0x06, 0x66, 0x5f, 0x61, 0x6e, 0x79, 0x31, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x05, 0x66, 0x41, 0x6e,
	0x79, 0x31, 0x12, 0x31, 0x0a, 0x06, 0x66, 0x5f, 0x61, 0x6e, 0x79, 0x32, 0x18, 0x42, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x05,
	0x66, 0x41, 0x6e, 0x79, 0x32, 0x12, 0x3e, 0x0a, 0x0a, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x31, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x6c,
	0x61, 0x69, 0x6e, 0x31, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x09, 0x66, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x31, 0x12, 0x45, 0x0a, 0x0a, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x32, 0x18, 0x48, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x6c,
	0x61, 0x69, 0x6e, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x42, 0x04, 0x8a, 0xa2, 0x1f,
	0x00, 0x52, 0x09, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x12, 0x4c, 0x0a, 0x0a,
	0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x33, 0x18, 0x49, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x32, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52,
	0x09, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x33, 0x12, 0x37, 0x0a, 0x0a, 0x66, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x34, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x31, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x09, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x34, 0x12, 0x3e, 0x0a, 0x0a, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x35, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x31, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x09, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x35, 0x12, 0x45, 0x0a, 0x0a, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x36, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x32, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52,
	0x09, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x36, 0x12, 0x40, 0x0a, 0x0a, 0x66, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x37, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x31, 0x42, 0x04, 0x8a, 0xa2, 0x1f,
	0x00, 0x52, 0x09, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x37, 0x12, 0x47, 0x0a, 0x0a,
	0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x38, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x31, 0x2e, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x31, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x09, 0x66, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x38, 0x12, 0x4e, 0x0a, 0x0a, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x39, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x31, 0x2e, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x32, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x09, 0x66, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x39, 0x2a, 0x79, 0x0a, 0x0a, 0x45, 0x6e, 0x75, 0x6d, 0x50, 0x6c, 0x61,
	0x69, 0x6e, 0x31, 0x12, 0x08, 0x0a, 0x04, 0x5a, 0x65, 0x72, 0x6f, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x4f, 0x6e, 0x65, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x77, 0x6f, 0x10, 0x03, 0x12,
	0x09, 0x0a, 0x05, 0x54, 0x68, 0x72, 0x65, 0x65, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x6f,
	0x75, 0x72, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x69, 0x76, 0x65, 0x10, 0x07, 0x12, 0x07,
	0x0a, 0x03, 0x53, 0x69, 0x78, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x65, 0x76, 0x65, 0x6e,
	0x10, 0x0b, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x69, 0x67, 0x68, 0x74, 0x10, 0x0c, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x69, 0x6e, 0x65, 0x10, 0x0f, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x65, 0x6e, 0x10, 0x11,
	0x42, 0x16, 0x5a, 0x14, 0x78, 0x67, 0x6f, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x62,
	0x2f, 0x70, 0x62, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tests_proto_cases_types_type_plain_proto_rawDescOnce sync.Once
	file_tests_proto_cases_types_type_plain_proto_rawDescData = file_tests_proto_cases_types_type_plain_proto_rawDesc
)

func file_tests_proto_cases_types_type_plain_proto_rawDescGZIP() []byte {
	file_tests_proto_cases_types_type_plain_proto_rawDescOnce.Do(func() {
		file_tests_proto_cases_types_type_plain_proto_rawDescData = protoimpl.X.CompressGZIP(file_tests_proto_cases_types_type_plain_proto_rawDescData)
	})
	return file_tests_proto_cases_types_type_plain_proto_rawDescData
}

var file_tests_proto_cases_types_type_plain_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tests_proto_cases_types_type_plain_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_tests_proto_cases_types_type_plain_proto_goTypes = []interface{}{
	(EnumPlain1)(0),                           // 0: type_plain.EnumPlain1
	(*MessagePlain1)(nil),                     // 1: type_plain.MessagePlain1
	(*TypePlain1)(nil),                        // 2: type_plain.TypePlain1
	(*MessagePlain1_Embed1)(nil),              // 3: type_plain.MessagePlain1.Embed1
	(*MessagePlain1_Embed1_Embed2)(nil),       // 4: type_plain.MessagePlain1.Embed1.Embed2
	(pbexternal.Enum1)(0),                     // 5: external.Enum1
	(pbexternal.Embed_Enum1)(0),               // 6: external.Embed.Enum1
	(pbexternal.Embed_Message_Enum1)(0),       // 7: external.Embed.Message.Enum1
	(EnumCommon1)(0),                          // 8: type_common.EnumCommon1
	(MessageCommon1_Enum1)(0),                 // 9: type_common.MessageCommon1.Enum1
	(*durationpb.Duration)(nil),               // 10: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),             // 11: google.protobuf.Timestamp
	(*anypb.Any)(nil),                         // 12: google.protobuf.Any
	(*pbexternal.Message1)(nil),               // 13: external.Message1
	(*pbexternal.Message1_Embed1)(nil),        // 14: external.Message1.Embed1
	(*pbexternal.Message1_Embed1_Embed2)(nil), // 15: external.Message1.Embed1.Embed2
	(*MessageCommon1)(nil),                    // 16: type_common.MessageCommon1
	(*MessageCommon1_Embed1)(nil),             // 17: type_common.MessageCommon1.Embed1
	(*MessageCommon1_Embed1_Embed2)(nil),      // 18: type_common.MessageCommon1.Embed1.Embed2
}
var file_tests_proto_cases_types_type_plain_proto_depIdxs = []int32{
	0,  // 0: type_plain.TypePlain1.f_enum1:type_name -> type_plain.EnumPlain1
	5,  // 1: type_plain.TypePlain1.f_enum2:type_name -> external.Enum1
	6,  // 2: type_plain.TypePlain1.f_enum3:type_name -> external.Embed.Enum1
	7,  // 3: type_plain.TypePlain1.f_enum4:type_name -> external.Embed.Message.Enum1
	8,  // 4: type_plain.TypePlain1.f_enum5:type_name -> type_common.EnumCommon1
	9,  // 5: type_plain.TypePlain1.f_enum6:type_name -> type_common.MessageCommon1.Enum1
	10, // 6: type_plain.TypePlain1.f_duration1:type_name -> google.protobuf.Duration
	10, // 7: type_plain.TypePlain1.f_duration2:type_name -> google.protobuf.Duration
	11, // 8: type_plain.TypePlain1.f_timestamp1:type_name -> google.protobuf.Timestamp
	11, // 9: type_plain.TypePlain1.f_timestamp2:type_name -> google.protobuf.Timestamp
	12, // 10: type_plain.TypePlain1.f_any1:type_name -> google.protobuf.Any
	12, // 11: type_plain.TypePlain1.f_any2:type_name -> google.protobuf.Any
	1,  // 12: type_plain.TypePlain1.f_message1:type_name -> type_plain.MessagePlain1
	3,  // 13: type_plain.TypePlain1.f_message2:type_name -> type_plain.MessagePlain1.Embed1
	4,  // 14: type_plain.TypePlain1.f_message3:type_name -> type_plain.MessagePlain1.Embed1.Embed2
	13, // 15: type_plain.TypePlain1.f_message4:type_name -> external.Message1
	14, // 16: type_plain.TypePlain1.f_message5:type_name -> external.Message1.Embed1
	15, // 17: type_plain.TypePlain1.f_message6:type_name -> external.Message1.Embed1.Embed2
	16, // 18: type_plain.TypePlain1.f_message7:type_name -> type_common.MessageCommon1
	17, // 19: type_plain.TypePlain1.f_message8:type_name -> type_common.MessageCommon1.Embed1
	18, // 20: type_plain.TypePlain1.f_message9:type_name -> type_common.MessageCommon1.Embed1.Embed2
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_tests_proto_cases_types_type_plain_proto_init() }
func file_tests_proto_cases_types_type_plain_proto_init() {
	if File_tests_proto_cases_types_type_plain_proto != nil {
		return
	}
	file_tests_proto_cases_types_type_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tests_proto_cases_types_type_plain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagePlain1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_proto_cases_types_type_plain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypePlain1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_proto_cases_types_type_plain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagePlain1_Embed1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_proto_cases_types_type_plain_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagePlain1_Embed1_Embed2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tests_proto_cases_types_type_plain_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tests_proto_cases_types_type_plain_proto_goTypes,
		DependencyIndexes: file_tests_proto_cases_types_type_plain_proto_depIdxs,
		EnumInfos:         file_tests_proto_cases_types_type_plain_proto_enumTypes,
		MessageInfos:      file_tests_proto_cases_types_type_plain_proto_msgTypes,
	}.Build()
	File_tests_proto_cases_types_type_plain_proto = out.File
	file_tests_proto_cases_types_type_plain_proto_rawDesc = nil
	file_tests_proto_cases_types_type_plain_proto_goTypes = nil
	file_tests_proto_cases_types_type_plain_proto_depIdxs = nil
}
