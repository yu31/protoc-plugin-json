// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: tests/proto/cases/types/type_wkt.proto

package pbtypes

import (
	_ "github.com/yu31/protoc-plugin-json/xgo/pb/pbjson"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EnumWKT1 used tests cases in this file.
type EnumWKT1 int32

const (
	EnumWKT1_Zero  EnumWKT1 = 0
	EnumWKT1_One   EnumWKT1 = 2
	EnumWKT1_Two   EnumWKT1 = 3
	EnumWKT1_Three EnumWKT1 = 5
	EnumWKT1_Four  EnumWKT1 = 6
	EnumWKT1_Five  EnumWKT1 = 7
	EnumWKT1_Six   EnumWKT1 = 9
	EnumWKT1_Seven EnumWKT1 = 11
	EnumWKT1_Eight EnumWKT1 = 12
	EnumWKT1_Nine  EnumWKT1 = 15
	EnumWKT1_Ten   EnumWKT1 = 17
)

// Enum value maps for EnumWKT1.
var (
	EnumWKT1_name = map[int32]string{
		0:  "Zero",
		2:  "One",
		3:  "Two",
		5:  "Three",
		6:  "Four",
		7:  "Five",
		9:  "Six",
		11: "Seven",
		12: "Eight",
		15: "Nine",
		17: "Ten",
	}
	EnumWKT1_value = map[string]int32{
		"Zero":  0,
		"One":   2,
		"Two":   3,
		"Three": 5,
		"Four":  6,
		"Five":  7,
		"Six":   9,
		"Seven": 11,
		"Eight": 12,
		"Nine":  15,
		"Ten":   17,
	}
)

func (x EnumWKT1) Enum() *EnumWKT1 {
	p := new(EnumWKT1)
	*p = x
	return p
}

func (x EnumWKT1) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumWKT1) Descriptor() protoreflect.EnumDescriptor {
	return file_tests_proto_cases_types_type_wkt_proto_enumTypes[0].Descriptor()
}

func (EnumWKT1) Type() protoreflect.EnumType {
	return &file_tests_proto_cases_types_type_wkt_proto_enumTypes[0]
}

func (x EnumWKT1) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumWKT1.Descriptor instead.
func (EnumWKT1) EnumDescriptor() ([]byte, []int) {
	return file_tests_proto_cases_types_type_wkt_proto_rawDescGZIP(), []int{0}
}

// MessageWKT1 used tests cases in this file.
type MessageWKT1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//  message Embed1 {
	//    message Embed2 {
	//      string f_string1 = 1 [ (json.field) = { } ];
	//      string f_string2 = 2 [ (json.field) = { } ];
	//      string f_string3 = 3 [ (json.field) = { } ];
	//    }
	//    string f_string1 = 1 [ (json.field) = { } ];
	//    string f_string2 = 2 [ (json.field) = { } ];
	//    string f_string3 = 3 [ (json.field) = { } ];
	//  }
	FString1 string `protobuf:"bytes,1,opt,name=f_string1,json=fString1,proto3" json:"f_string1,omitempty"`
	FString2 string `protobuf:"bytes,2,opt,name=f_string2,json=fString2,proto3" json:"f_string2,omitempty"`
	FString3 string `protobuf:"bytes,3,opt,name=f_string3,json=fString3,proto3" json:"f_string3,omitempty"`
}

func (x *MessageWKT1) Reset() {
	*x = MessageWKT1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_types_type_wkt_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageWKT1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWKT1) ProtoMessage() {}

func (x *MessageWKT1) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_types_type_wkt_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWKT1.ProtoReflect.Descriptor instead.
func (*MessageWKT1) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_types_type_wkt_proto_rawDescGZIP(), []int{0}
}

func (x *MessageWKT1) GetFString1() string {
	if x != nil {
		return x.FString1
	}
	return ""
}

func (x *MessageWKT1) GetFString2() string {
	if x != nil {
		return x.FString2
	}
	return ""
}

func (x *MessageWKT1) GetFString3() string {
	if x != nil {
		return x.FString3
	}
	return ""
}

type TypeWKTPlain1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FAny1        *anypb.Any             `protobuf:"bytes,1,opt,name=f_any1,json=fAny1,proto3" json:"f_any1,omitempty"`
	FAny2        *anypb.Any             `protobuf:"bytes,2,opt,name=f_any2,json=fAny2,proto3" json:"f_any2,omitempty"`
	FAny3        *anypb.Any             `protobuf:"bytes,3,opt,name=f_any3,json=fAny3,proto3" json:"f_any3,omitempty"`
	FAny4        *anypb.Any             `protobuf:"bytes,4,opt,name=f_any4,json=fAny4,proto3" json:"f_any4,omitempty"`
	FDuration11  *durationpb.Duration   `protobuf:"bytes,11,opt,name=f_duration11,json=fDuration11,proto3" json:"f_duration11,omitempty"`
	FDuration21  *durationpb.Duration   `protobuf:"bytes,21,opt,name=f_duration21,json=fDuration21,proto3" json:"f_duration21,omitempty"`
	FDuration12  *durationpb.Duration   `protobuf:"bytes,12,opt,name=f_duration12,json=fDuration12,proto3" json:"f_duration12,omitempty"`
	FDuration22  *durationpb.Duration   `protobuf:"bytes,22,opt,name=f_duration22,json=fDuration22,proto3" json:"f_duration22,omitempty"`
	FDuration13  *durationpb.Duration   `protobuf:"bytes,13,opt,name=f_duration13,json=fDuration13,proto3" json:"f_duration13,omitempty"`
	FDuration23  *durationpb.Duration   `protobuf:"bytes,23,opt,name=f_duration23,json=fDuration23,proto3" json:"f_duration23,omitempty"`
	FDuration14  *durationpb.Duration   `protobuf:"bytes,14,opt,name=f_duration14,json=fDuration14,proto3" json:"f_duration14,omitempty"`
	FDuration24  *durationpb.Duration   `protobuf:"bytes,24,opt,name=f_duration24,json=fDuration24,proto3" json:"f_duration24,omitempty"`
	FDuration15  *durationpb.Duration   `protobuf:"bytes,15,opt,name=f_duration15,json=fDuration15,proto3" json:"f_duration15,omitempty"`
	FDuration25  *durationpb.Duration   `protobuf:"bytes,25,opt,name=f_duration25,json=fDuration25,proto3" json:"f_duration25,omitempty"`
	FDuration16  *durationpb.Duration   `protobuf:"bytes,16,opt,name=f_duration16,json=fDuration16,proto3" json:"f_duration16,omitempty"`
	FDuration26  *durationpb.Duration   `protobuf:"bytes,26,opt,name=f_duration26,json=fDuration26,proto3" json:"f_duration26,omitempty"`
	FDuration17  *durationpb.Duration   `protobuf:"bytes,17,opt,name=f_duration17,json=fDuration17,proto3" json:"f_duration17,omitempty"`
	FDuration27  *durationpb.Duration   `protobuf:"bytes,27,opt,name=f_duration27,json=fDuration27,proto3" json:"f_duration27,omitempty"`
	FDuration18  *durationpb.Duration   `protobuf:"bytes,18,opt,name=f_duration18,json=fDuration18,proto3" json:"f_duration18,omitempty"`
	FDuration28  *durationpb.Duration   `protobuf:"bytes,28,opt,name=f_duration28,json=fDuration28,proto3" json:"f_duration28,omitempty"`
	FTimestamp31 *timestamppb.Timestamp `protobuf:"bytes,31,opt,name=f_timestamp31,json=fTimestamp31,proto3" json:"f_timestamp31,omitempty"`
	FTimestamp41 *timestamppb.Timestamp `protobuf:"bytes,41,opt,name=f_timestamp41,json=fTimestamp41,proto3" json:"f_timestamp41,omitempty"`
	FTimestamp32 *timestamppb.Timestamp `protobuf:"bytes,32,opt,name=f_timestamp32,json=fTimestamp32,proto3" json:"f_timestamp32,omitempty"`
	FTimestamp42 *timestamppb.Timestamp `protobuf:"bytes,42,opt,name=f_timestamp42,json=fTimestamp42,proto3" json:"f_timestamp42,omitempty"`
	FTimestamp33 *timestamppb.Timestamp `protobuf:"bytes,33,opt,name=f_timestamp33,json=fTimestamp33,proto3" json:"f_timestamp33,omitempty"`
	FTimestamp43 *timestamppb.Timestamp `protobuf:"bytes,43,opt,name=f_timestamp43,json=fTimestamp43,proto3" json:"f_timestamp43,omitempty"`
	FTimestamp34 *timestamppb.Timestamp `protobuf:"bytes,34,opt,name=f_timestamp34,json=fTimestamp34,proto3" json:"f_timestamp34,omitempty"`
	FTimestamp44 *timestamppb.Timestamp `protobuf:"bytes,44,opt,name=f_timestamp44,json=fTimestamp44,proto3" json:"f_timestamp44,omitempty"`
	FTimestamp35 *timestamppb.Timestamp `protobuf:"bytes,35,opt,name=f_timestamp35,json=fTimestamp35,proto3" json:"f_timestamp35,omitempty"`
	FTimestamp45 *timestamppb.Timestamp `protobuf:"bytes,45,opt,name=f_timestamp45,json=fTimestamp45,proto3" json:"f_timestamp45,omitempty"`
	FTimestamp36 *timestamppb.Timestamp `protobuf:"bytes,36,opt,name=f_timestamp36,json=fTimestamp36,proto3" json:"f_timestamp36,omitempty"`
	FTimestamp46 *timestamppb.Timestamp `protobuf:"bytes,46,opt,name=f_timestamp46,json=fTimestamp46,proto3" json:"f_timestamp46,omitempty"`
}

func (x *TypeWKTPlain1) Reset() {
	*x = TypeWKTPlain1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_cases_types_type_wkt_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeWKTPlain1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeWKTPlain1) ProtoMessage() {}

func (x *TypeWKTPlain1) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_cases_types_type_wkt_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeWKTPlain1.ProtoReflect.Descriptor instead.
func (*TypeWKTPlain1) Descriptor() ([]byte, []int) {
	return file_tests_proto_cases_types_type_wkt_proto_rawDescGZIP(), []int{1}
}

func (x *TypeWKTPlain1) GetFAny1() *anypb.Any {
	if x != nil {
		return x.FAny1
	}
	return nil
}

func (x *TypeWKTPlain1) GetFAny2() *anypb.Any {
	if x != nil {
		return x.FAny2
	}
	return nil
}

func (x *TypeWKTPlain1) GetFAny3() *anypb.Any {
	if x != nil {
		return x.FAny3
	}
	return nil
}

func (x *TypeWKTPlain1) GetFAny4() *anypb.Any {
	if x != nil {
		return x.FAny4
	}
	return nil
}

func (x *TypeWKTPlain1) GetFDuration11() *durationpb.Duration {
	if x != nil {
		return x.FDuration11
	}
	return nil
}

func (x *TypeWKTPlain1) GetFDuration21() *durationpb.Duration {
	if x != nil {
		return x.FDuration21
	}
	return nil
}

func (x *TypeWKTPlain1) GetFDuration12() *durationpb.Duration {
	if x != nil {
		return x.FDuration12
	}
	return nil
}

func (x *TypeWKTPlain1) GetFDuration22() *durationpb.Duration {
	if x != nil {
		return x.FDuration22
	}
	return nil
}

func (x *TypeWKTPlain1) GetFDuration13() *durationpb.Duration {
	if x != nil {
		return x.FDuration13
	}
	return nil
}

func (x *TypeWKTPlain1) GetFDuration23() *durationpb.Duration {
	if x != nil {
		return x.FDuration23
	}
	return nil
}

func (x *TypeWKTPlain1) GetFDuration14() *durationpb.Duration {
	if x != nil {
		return x.FDuration14
	}
	return nil
}

func (x *TypeWKTPlain1) GetFDuration24() *durationpb.Duration {
	if x != nil {
		return x.FDuration24
	}
	return nil
}

func (x *TypeWKTPlain1) GetFDuration15() *durationpb.Duration {
	if x != nil {
		return x.FDuration15
	}
	return nil
}

func (x *TypeWKTPlain1) GetFDuration25() *durationpb.Duration {
	if x != nil {
		return x.FDuration25
	}
	return nil
}

func (x *TypeWKTPlain1) GetFDuration16() *durationpb.Duration {
	if x != nil {
		return x.FDuration16
	}
	return nil
}

func (x *TypeWKTPlain1) GetFDuration26() *durationpb.Duration {
	if x != nil {
		return x.FDuration26
	}
	return nil
}

func (x *TypeWKTPlain1) GetFDuration17() *durationpb.Duration {
	if x != nil {
		return x.FDuration17
	}
	return nil
}

func (x *TypeWKTPlain1) GetFDuration27() *durationpb.Duration {
	if x != nil {
		return x.FDuration27
	}
	return nil
}

func (x *TypeWKTPlain1) GetFDuration18() *durationpb.Duration {
	if x != nil {
		return x.FDuration18
	}
	return nil
}

func (x *TypeWKTPlain1) GetFDuration28() *durationpb.Duration {
	if x != nil {
		return x.FDuration28
	}
	return nil
}

func (x *TypeWKTPlain1) GetFTimestamp31() *timestamppb.Timestamp {
	if x != nil {
		return x.FTimestamp31
	}
	return nil
}

func (x *TypeWKTPlain1) GetFTimestamp41() *timestamppb.Timestamp {
	if x != nil {
		return x.FTimestamp41
	}
	return nil
}

func (x *TypeWKTPlain1) GetFTimestamp32() *timestamppb.Timestamp {
	if x != nil {
		return x.FTimestamp32
	}
	return nil
}

func (x *TypeWKTPlain1) GetFTimestamp42() *timestamppb.Timestamp {
	if x != nil {
		return x.FTimestamp42
	}
	return nil
}

func (x *TypeWKTPlain1) GetFTimestamp33() *timestamppb.Timestamp {
	if x != nil {
		return x.FTimestamp33
	}
	return nil
}

func (x *TypeWKTPlain1) GetFTimestamp43() *timestamppb.Timestamp {
	if x != nil {
		return x.FTimestamp43
	}
	return nil
}

func (x *TypeWKTPlain1) GetFTimestamp34() *timestamppb.Timestamp {
	if x != nil {
		return x.FTimestamp34
	}
	return nil
}

func (x *TypeWKTPlain1) GetFTimestamp44() *timestamppb.Timestamp {
	if x != nil {
		return x.FTimestamp44
	}
	return nil
}

func (x *TypeWKTPlain1) GetFTimestamp35() *timestamppb.Timestamp {
	if x != nil {
		return x.FTimestamp35
	}
	return nil
}

func (x *TypeWKTPlain1) GetFTimestamp45() *timestamppb.Timestamp {
	if x != nil {
		return x.FTimestamp45
	}
	return nil
}

func (x *TypeWKTPlain1) GetFTimestamp36() *timestamppb.Timestamp {
	if x != nil {
		return x.FTimestamp36
	}
	return nil
}

func (x *TypeWKTPlain1) GetFTimestamp46() *timestamppb.Timestamp {
	if x != nil {
		return x.FTimestamp46
	}
	return nil
}

var File_tests_proto_cases_types_type_wkt_proto protoreflect.FileDescriptor

var file_tests_proto_cases_types_type_wkt_proto_rawDesc = []byte{
	0x0a, 0x26, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61,
	0x73, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x77,
	0x6b, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x77,
	0x6b, 0x74, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x76, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x57, 0x4b, 0x54, 0x31, 0x12,
	0x21, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x31, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x08, 0x66, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x8a, 0xa2, 0x1f, 0x00, 0x52, 0x08,
	0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x33, 0x22, 0xa9, 0x12, 0x0a, 0x0d, 0x54, 0x79, 0x70,
	0x65, 0x57, 0x4b, 0x54, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x31, 0x12, 0x35, 0x0a, 0x06, 0x66, 0x5f,
	0x61, 0x6e, 0x79, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x62, 0x02, 0x08, 0x01, 0x52, 0x05, 0x66, 0x41, 0x6e, 0x79,
	0x31, 0x12, 0x35, 0x0a, 0x06, 0x66, 0x5f, 0x61, 0x6e, 0x79, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x62, 0x02, 0x08,
	0x00, 0x52, 0x05, 0x66, 0x41, 0x6e, 0x79, 0x32, 0x12, 0x35, 0x0a, 0x06, 0x66, 0x5f, 0x61, 0x6e,
	0x79, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x42, 0x08,
	0x8a, 0xa2, 0x1f, 0x04, 0x62, 0x02, 0x10, 0x01, 0x52, 0x05, 0x66, 0x41, 0x6e, 0x79, 0x33, 0x12,
	0x35, 0x0a, 0x06, 0x66, 0x5f, 0x61, 0x6e, 0x79, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x62, 0x02, 0x10, 0x00, 0x52,
	0x05, 0x66, 0x41, 0x6e, 0x79, 0x34, 0x12, 0x46, 0x0a, 0x0c, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x31, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x08,
	0x01, 0x52, 0x0b, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x31, 0x12, 0x46,
	0x0a, 0x0c, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x31, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x08, 0x00, 0x52, 0x0b, 0x66, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x31, 0x12, 0x46, 0x0a, 0x0c, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x31, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x10,
	0x01, 0x52, 0x0b, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x32, 0x12, 0x46,
	0x0a, 0x0c, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x32, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x10, 0x00, 0x52, 0x0b, 0x66, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x32, 0x12, 0x46, 0x0a, 0x0c, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x31, 0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x18,
	0x01, 0x52, 0x0b, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x33, 0x12, 0x46,
	0x0a, 0x0c, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x33, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x18, 0x00, 0x52, 0x0b, 0x66, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x33, 0x12, 0x46, 0x0a, 0x0c, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x31, 0x34, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x20,
	0x01, 0x52, 0x0b, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x34, 0x12, 0x46,
	0x0a, 0x0c, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x34, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x20, 0x00, 0x52, 0x0b, 0x66, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x34, 0x12, 0x46, 0x0a, 0x0c, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x31, 0x35, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x28,
	0x01, 0x52, 0x0b, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x35, 0x12, 0x46,
	0x0a, 0x0c, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x35, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x28, 0x00, 0x52, 0x0b, 0x66, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x35, 0x12, 0x46, 0x0a, 0x0c, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x31, 0x36, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x30,
	0x01, 0x52, 0x0b, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x36, 0x12, 0x46,
	0x0a, 0x0c, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x36, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x30, 0x00, 0x52, 0x0b, 0x66, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x36, 0x12, 0x46, 0x0a, 0x0c, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x31, 0x37, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x38,
	0x01, 0x52, 0x0b, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x37, 0x12, 0x46,
	0x0a, 0x0c, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x37, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x38, 0x00, 0x52, 0x0b, 0x66, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x37, 0x12, 0x46, 0x0a, 0x0c, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x31, 0x38, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x40,
	0x01, 0x52, 0x0b, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x38, 0x12, 0x46,
	0x0a, 0x0c, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x38, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x6a, 0x02, 0x40, 0x00, 0x52, 0x0b, 0x66, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x38, 0x12, 0x49, 0x0a, 0x0d, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x33, 0x31, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x72,
	0x02, 0x08, 0x01, 0x52, 0x0c, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x33,
	0x31, 0x12, 0x49, 0x0a, 0x0d, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x34, 0x31, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x72, 0x02, 0x08, 0x00, 0x52, 0x0c,
	0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x34, 0x31, 0x12, 0x64, 0x0a, 0x0d,
	0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x33, 0x32, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x23, 0x8a, 0xa2, 0x1f, 0x1f, 0x72, 0x1d, 0x12, 0x1b, 0x0a, 0x19, 0x32, 0x30, 0x30, 0x36, 0x2d,
	0x30, 0x31, 0x2d, 0x30, 0x32, 0x54, 0x31, 0x35, 0x3a, 0x30, 0x34, 0x3a, 0x30, 0x35, 0x5a, 0x30,
	0x37, 0x3a, 0x30, 0x30, 0x52, 0x0c, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x33, 0x32, 0x12, 0x68, 0x0a, 0x0d, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x34, 0x32, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x27, 0x8a, 0xa2, 0x1f, 0x23, 0x72, 0x21, 0x12, 0x1f, 0x0a,
	0x1d, 0x4d, 0x6f, 0x6e, 0x2c, 0x20, 0x30, 0x32, 0x20, 0x4a, 0x61, 0x6e, 0x20, 0x32, 0x30, 0x30,
	0x36, 0x20, 0x31, 0x35, 0x3a, 0x30, 0x34, 0x3a, 0x30, 0x35, 0x20, 0x4d, 0x53, 0x54, 0x52, 0x0c,
	0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x34, 0x32, 0x12, 0x49, 0x0a, 0x0d,
	0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x33, 0x33, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x72, 0x02, 0x18, 0x01, 0x52, 0x0c, 0x66, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x33, 0x33, 0x12, 0x49, 0x0a, 0x0d, 0x66, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x34, 0x33, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04,
	0x72, 0x02, 0x18, 0x00, 0x52, 0x0c, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x34, 0x33, 0x12, 0x49, 0x0a, 0x0d, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x33, 0x34, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52,
	0x0c, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x33, 0x34, 0x12, 0x49, 0x0a,
	0x0d, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x34, 0x34, 0x18, 0x2c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x72, 0x02, 0x20, 0x00, 0x52, 0x0c, 0x66, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x34, 0x34, 0x12, 0x49, 0x0a, 0x0d, 0x66, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x33, 0x35, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0x8a, 0xa2, 0x1f,
	0x04, 0x72, 0x02, 0x28, 0x01, 0x52, 0x0c, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x33, 0x35, 0x12, 0x49, 0x0a, 0x0d, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x34, 0x35, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x72, 0x02, 0x28, 0x00,
	0x52, 0x0c, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x34, 0x35, 0x12, 0x49,
	0x0a, 0x0d, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x33, 0x36, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x72, 0x02, 0x30, 0x01, 0x52, 0x0c, 0x66, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x33, 0x36, 0x12, 0x49, 0x0a, 0x0d, 0x66, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x34, 0x36, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0x8a, 0xa2,
	0x1f, 0x04, 0x72, 0x02, 0x30, 0x00, 0x52, 0x0c, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x34, 0x36, 0x2a, 0x77, 0x0a, 0x08, 0x45, 0x6e, 0x75, 0x6d, 0x57, 0x4b, 0x54, 0x31,
	0x12, 0x08, 0x0a, 0x04, 0x5a, 0x65, 0x72, 0x6f, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x6e,
	0x65, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x77, 0x6f, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05,
	0x54, 0x68, 0x72, 0x65, 0x65, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x6f, 0x75, 0x72, 0x10,
	0x06, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x69, 0x76, 0x65, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x53,
	0x69, 0x78, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x10, 0x0b, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x69, 0x67, 0x68, 0x74, 0x10, 0x0c, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x69,
	0x6e, 0x65, 0x10, 0x0f, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x65, 0x6e, 0x10, 0x11, 0x42, 0x16, 0x5a,
	0x14, 0x78, 0x67, 0x6f, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x62,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tests_proto_cases_types_type_wkt_proto_rawDescOnce sync.Once
	file_tests_proto_cases_types_type_wkt_proto_rawDescData = file_tests_proto_cases_types_type_wkt_proto_rawDesc
)

func file_tests_proto_cases_types_type_wkt_proto_rawDescGZIP() []byte {
	file_tests_proto_cases_types_type_wkt_proto_rawDescOnce.Do(func() {
		file_tests_proto_cases_types_type_wkt_proto_rawDescData = protoimpl.X.CompressGZIP(file_tests_proto_cases_types_type_wkt_proto_rawDescData)
	})
	return file_tests_proto_cases_types_type_wkt_proto_rawDescData
}

var file_tests_proto_cases_types_type_wkt_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tests_proto_cases_types_type_wkt_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tests_proto_cases_types_type_wkt_proto_goTypes = []interface{}{
	(EnumWKT1)(0),                 // 0: type_wkt.EnumWKT1
	(*MessageWKT1)(nil),           // 1: type_wkt.MessageWKT1
	(*TypeWKTPlain1)(nil),         // 2: type_wkt.TypeWKTPlain1
	(*anypb.Any)(nil),             // 3: google.protobuf.Any
	(*durationpb.Duration)(nil),   // 4: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_tests_proto_cases_types_type_wkt_proto_depIdxs = []int32{
	3,  // 0: type_wkt.TypeWKTPlain1.f_any1:type_name -> google.protobuf.Any
	3,  // 1: type_wkt.TypeWKTPlain1.f_any2:type_name -> google.protobuf.Any
	3,  // 2: type_wkt.TypeWKTPlain1.f_any3:type_name -> google.protobuf.Any
	3,  // 3: type_wkt.TypeWKTPlain1.f_any4:type_name -> google.protobuf.Any
	4,  // 4: type_wkt.TypeWKTPlain1.f_duration11:type_name -> google.protobuf.Duration
	4,  // 5: type_wkt.TypeWKTPlain1.f_duration21:type_name -> google.protobuf.Duration
	4,  // 6: type_wkt.TypeWKTPlain1.f_duration12:type_name -> google.protobuf.Duration
	4,  // 7: type_wkt.TypeWKTPlain1.f_duration22:type_name -> google.protobuf.Duration
	4,  // 8: type_wkt.TypeWKTPlain1.f_duration13:type_name -> google.protobuf.Duration
	4,  // 9: type_wkt.TypeWKTPlain1.f_duration23:type_name -> google.protobuf.Duration
	4,  // 10: type_wkt.TypeWKTPlain1.f_duration14:type_name -> google.protobuf.Duration
	4,  // 11: type_wkt.TypeWKTPlain1.f_duration24:type_name -> google.protobuf.Duration
	4,  // 12: type_wkt.TypeWKTPlain1.f_duration15:type_name -> google.protobuf.Duration
	4,  // 13: type_wkt.TypeWKTPlain1.f_duration25:type_name -> google.protobuf.Duration
	4,  // 14: type_wkt.TypeWKTPlain1.f_duration16:type_name -> google.protobuf.Duration
	4,  // 15: type_wkt.TypeWKTPlain1.f_duration26:type_name -> google.protobuf.Duration
	4,  // 16: type_wkt.TypeWKTPlain1.f_duration17:type_name -> google.protobuf.Duration
	4,  // 17: type_wkt.TypeWKTPlain1.f_duration27:type_name -> google.protobuf.Duration
	4,  // 18: type_wkt.TypeWKTPlain1.f_duration18:type_name -> google.protobuf.Duration
	4,  // 19: type_wkt.TypeWKTPlain1.f_duration28:type_name -> google.protobuf.Duration
	5,  // 20: type_wkt.TypeWKTPlain1.f_timestamp31:type_name -> google.protobuf.Timestamp
	5,  // 21: type_wkt.TypeWKTPlain1.f_timestamp41:type_name -> google.protobuf.Timestamp
	5,  // 22: type_wkt.TypeWKTPlain1.f_timestamp32:type_name -> google.protobuf.Timestamp
	5,  // 23: type_wkt.TypeWKTPlain1.f_timestamp42:type_name -> google.protobuf.Timestamp
	5,  // 24: type_wkt.TypeWKTPlain1.f_timestamp33:type_name -> google.protobuf.Timestamp
	5,  // 25: type_wkt.TypeWKTPlain1.f_timestamp43:type_name -> google.protobuf.Timestamp
	5,  // 26: type_wkt.TypeWKTPlain1.f_timestamp34:type_name -> google.protobuf.Timestamp
	5,  // 27: type_wkt.TypeWKTPlain1.f_timestamp44:type_name -> google.protobuf.Timestamp
	5,  // 28: type_wkt.TypeWKTPlain1.f_timestamp35:type_name -> google.protobuf.Timestamp
	5,  // 29: type_wkt.TypeWKTPlain1.f_timestamp45:type_name -> google.protobuf.Timestamp
	5,  // 30: type_wkt.TypeWKTPlain1.f_timestamp36:type_name -> google.protobuf.Timestamp
	5,  // 31: type_wkt.TypeWKTPlain1.f_timestamp46:type_name -> google.protobuf.Timestamp
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_tests_proto_cases_types_type_wkt_proto_init() }
func file_tests_proto_cases_types_type_wkt_proto_init() {
	if File_tests_proto_cases_types_type_wkt_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tests_proto_cases_types_type_wkt_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageWKT1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_proto_cases_types_type_wkt_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeWKTPlain1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tests_proto_cases_types_type_wkt_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tests_proto_cases_types_type_wkt_proto_goTypes,
		DependencyIndexes: file_tests_proto_cases_types_type_wkt_proto_depIdxs,
		EnumInfos:         file_tests_proto_cases_types_type_wkt_proto_enumTypes,
		MessageInfos:      file_tests_proto_cases_types_type_wkt_proto_msgTypes,
	}.Build()
	File_tests_proto_cases_types_type_wkt_proto = out.File
	file_tests_proto_cases_types_type_wkt_proto_rawDesc = nil
	file_tests_proto_cases_types_type_wkt_proto_goTypes = nil
	file_tests_proto_cases_types_type_wkt_proto_depIdxs = nil
}
