// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: tests/proto/example/example2.proto

package pbexample

import (
	_ "github.com/yu31/protoc-plugin-json/xgo/pb/pbjson"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Enum2 int32

const (
	Enum2_Zero  Enum2 = 0
	Enum2_One   Enum2 = 2
	Enum2_Two   Enum2 = 3
	Enum2_Three Enum2 = 5
	Enum2_Four  Enum2 = 6
	Enum2_Five  Enum2 = 7
	Enum2_Six   Enum2 = 9
	Enum2_Seven Enum2 = 11
	Enum2_Eight Enum2 = 12
	Enum2_Nine  Enum2 = 15
	Enum2_Ten   Enum2 = 17
)

// Enum value maps for Enum2.
var (
	Enum2_name = map[int32]string{
		0:  "Zero",
		2:  "One",
		3:  "Two",
		5:  "Three",
		6:  "Four",
		7:  "Five",
		9:  "Six",
		11: "Seven",
		12: "Eight",
		15: "Nine",
		17: "Ten",
	}
	Enum2_value = map[string]int32{
		"Zero":  0,
		"One":   2,
		"Two":   3,
		"Three": 5,
		"Four":  6,
		"Five":  7,
		"Six":   9,
		"Seven": 11,
		"Eight": 12,
		"Nine":  15,
		"Ten":   17,
	}
)

func (x Enum2) Enum() *Enum2 {
	p := new(Enum2)
	*p = x
	return p
}

func (x Enum2) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enum2) Descriptor() protoreflect.EnumDescriptor {
	return file_tests_proto_example_example2_proto_enumTypes[0].Descriptor()
}

func (Enum2) Type() protoreflect.EnumType {
	return &file_tests_proto_example_example2_proto_enumTypes[0]
}

func (x Enum2) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enum2.Descriptor instead.
func (Enum2) EnumDescriptor() ([]byte, []int) {
	return file_tests_proto_example_example2_proto_rawDescGZIP(), []int{0}
}

type Empty2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty2) Reset() {
	*x = Empty2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_example_example2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty2) ProtoMessage() {}

func (x *Empty2) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_example_example2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty2.ProtoReflect.Descriptor instead.
func (*Empty2) Descriptor() ([]byte, []int) {
	return file_tests_proto_example_example2_proto_rawDescGZIP(), []int{0}
}

type Example2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FString1 string `protobuf:"bytes,1,opt,name=f_string1,json=fString1,proto3" json:"f_string1,omitempty"`
	// Types that are assignable to OnetType1:
	//	*Example2_FString2
	//	*Example2_FMessage3
	OnetType1 isExample2_OnetType1 `protobuf_oneof:"OnetType1"`
	// Types that are assignable to OnetType2:
	//	*Example2_FString4
	//	*Example2_FString5
	OnetType2   isExample2_OnetType2   `protobuf_oneof:"OnetType2"`
	FInt32      int32                  `protobuf:"varint,11,opt,name=f_int32,json=fInt32,proto3" json:"f_int32,omitempty"`
	FEnum1      Enum2                  `protobuf:"varint,61,opt,name=f_enum1,json=fEnum1,proto3,enum=example2.Enum2" json:"f_enum1,omitempty"`
	FEnum2      Enum2                  `protobuf:"varint,62,opt,name=f_enum2,json=fEnum2,proto3,enum=example2.Enum2" json:"f_enum2,omitempty"`
	FEnum5      *Enum2                 `protobuf:"varint,65,opt,name=f_enum5,json=fEnum5,proto3,enum=example2.Enum2,oneof" json:"f_enum5,omitempty"`
	FEnum6      *Enum2                 `protobuf:"varint,66,opt,name=f_enum6,json=fEnum6,proto3,enum=example2.Enum2,oneof" json:"f_enum6,omitempty"`
	FDuration1  *durationpb.Duration   `protobuf:"bytes,41,opt,name=f_duration1,json=fDuration1,proto3" json:"f_duration1,omitempty"`
	FTimestamp1 *timestamppb.Timestamp `protobuf:"bytes,42,opt,name=f_timestamp1,json=fTimestamp1,proto3" json:"f_timestamp1,omitempty"`
	FMessage11  *Empty2                `protobuf:"bytes,51,opt,name=f_message11,json=fMessage11,proto3" json:"f_message11,omitempty"`
	FAny1       *anypb.Any             `protobuf:"bytes,54,opt,name=f_any1,json=fAny1,proto3" json:"f_any1,omitempty"`
	RString1    []string               `protobuf:"bytes,71,rep,name=r_string1,json=rString1,proto3" json:"r_string1,omitempty"`
	RMessage    []*Empty2              `protobuf:"bytes,73,rep,name=r_message,json=rMessage,proto3" json:"r_message,omitempty"`
	REnum       []Enum2                `protobuf:"varint,74,rep,packed,name=r_enum,json=rEnum,proto3,enum=example2.Enum2" json:"r_enum,omitempty"`
	MString1    map[string]string      `protobuf:"bytes,81,rep,name=m_string1,json=mString1,proto3" json:"m_string1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MMessage1   map[string]*Empty2     `protobuf:"bytes,82,rep,name=m_message1,json=mMessage1,proto3" json:"m_message1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MEnum       map[string]Enum2       `protobuf:"bytes,83,rep,name=m_enum,json=mEnum,proto3" json:"m_enum,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=example2.Enum2"`
}

func (x *Example2) Reset() {
	*x = Example2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tests_proto_example_example2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Example2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Example2) ProtoMessage() {}

func (x *Example2) ProtoReflect() protoreflect.Message {
	mi := &file_tests_proto_example_example2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Example2.ProtoReflect.Descriptor instead.
func (*Example2) Descriptor() ([]byte, []int) {
	return file_tests_proto_example_example2_proto_rawDescGZIP(), []int{1}
}

func (x *Example2) GetFString1() string {
	if x != nil {
		return x.FString1
	}
	return ""
}

func (m *Example2) GetOnetType1() isExample2_OnetType1 {
	if m != nil {
		return m.OnetType1
	}
	return nil
}

func (x *Example2) GetFString2() string {
	if x, ok := x.GetOnetType1().(*Example2_FString2); ok {
		return x.FString2
	}
	return ""
}

func (x *Example2) GetFMessage3() *Empty2 {
	if x, ok := x.GetOnetType1().(*Example2_FMessage3); ok {
		return x.FMessage3
	}
	return nil
}

func (m *Example2) GetOnetType2() isExample2_OnetType2 {
	if m != nil {
		return m.OnetType2
	}
	return nil
}

func (x *Example2) GetFString4() string {
	if x, ok := x.GetOnetType2().(*Example2_FString4); ok {
		return x.FString4
	}
	return ""
}

func (x *Example2) GetFString5() string {
	if x, ok := x.GetOnetType2().(*Example2_FString5); ok {
		return x.FString5
	}
	return ""
}

func (x *Example2) GetFInt32() int32 {
	if x != nil {
		return x.FInt32
	}
	return 0
}

func (x *Example2) GetFEnum1() Enum2 {
	if x != nil {
		return x.FEnum1
	}
	return Enum2_Zero
}

func (x *Example2) GetFEnum2() Enum2 {
	if x != nil {
		return x.FEnum2
	}
	return Enum2_Zero
}

func (x *Example2) GetFEnum5() Enum2 {
	if x != nil && x.FEnum5 != nil {
		return *x.FEnum5
	}
	return Enum2_Zero
}

func (x *Example2) GetFEnum6() Enum2 {
	if x != nil && x.FEnum6 != nil {
		return *x.FEnum6
	}
	return Enum2_Zero
}

func (x *Example2) GetFDuration1() *durationpb.Duration {
	if x != nil {
		return x.FDuration1
	}
	return nil
}

func (x *Example2) GetFTimestamp1() *timestamppb.Timestamp {
	if x != nil {
		return x.FTimestamp1
	}
	return nil
}

func (x *Example2) GetFMessage11() *Empty2 {
	if x != nil {
		return x.FMessage11
	}
	return nil
}

func (x *Example2) GetFAny1() *anypb.Any {
	if x != nil {
		return x.FAny1
	}
	return nil
}

func (x *Example2) GetRString1() []string {
	if x != nil {
		return x.RString1
	}
	return nil
}

func (x *Example2) GetRMessage() []*Empty2 {
	if x != nil {
		return x.RMessage
	}
	return nil
}

func (x *Example2) GetREnum() []Enum2 {
	if x != nil {
		return x.REnum
	}
	return nil
}

func (x *Example2) GetMString1() map[string]string {
	if x != nil {
		return x.MString1
	}
	return nil
}

func (x *Example2) GetMMessage1() map[string]*Empty2 {
	if x != nil {
		return x.MMessage1
	}
	return nil
}

func (x *Example2) GetMEnum() map[string]Enum2 {
	if x != nil {
		return x.MEnum
	}
	return nil
}

type isExample2_OnetType1 interface {
	isExample2_OnetType1()
}

type Example2_FString2 struct {
	FString2 string `protobuf:"bytes,2,opt,name=f_string2,json=fString2,proto3,oneof"`
}

type Example2_FMessage3 struct {
	FMessage3 *Empty2 `protobuf:"bytes,3,opt,name=f_message3,json=fMessage3,proto3,oneof"`
}

func (*Example2_FString2) isExample2_OnetType1() {}

func (*Example2_FMessage3) isExample2_OnetType1() {}

type isExample2_OnetType2 interface {
	isExample2_OnetType2()
}

type Example2_FString4 struct {
	FString4 string `protobuf:"bytes,4,opt,name=f_string4,json=fString4,proto3,oneof"`
}

type Example2_FString5 struct {
	FString5 string `protobuf:"bytes,5,opt,name=f_string5,json=fString5,proto3,oneof"`
}

func (*Example2_FString4) isExample2_OnetType2() {}

func (*Example2_FString5) isExample2_OnetType2() {}

var File_tests_proto_example_example2_proto protoreflect.FileDescriptor

var file_tests_proto_example_example2_proto_rawDesc = []byte{
	0x0a, 0x22, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x32, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x32, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x08, 0x0a, 0x06,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x22, 0xc2, 0x09, 0x0a, 0x08, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x32, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31,
	0x12, 0x1d, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x12,
	0x31, 0x0a, 0x0a, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x33, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x32, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x32, 0x48, 0x00, 0x52, 0x09, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x33, 0x12, 0x1d, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x34, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x34, 0x12, 0x1d, 0x0a, 0x09, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x35, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x35,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x66, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x32, 0x0a, 0x07, 0x66, 0x5f, 0x65,
	0x6e, 0x75, 0x6d, 0x31, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x32, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x32, 0x42, 0x08, 0x8a, 0xa2, 0x1f,
	0x04, 0x18, 0x01, 0x5a, 0x00, 0x52, 0x06, 0x66, 0x45, 0x6e, 0x75, 0x6d, 0x31, 0x12, 0x32, 0x0a,
	0x07, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x32, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x32, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x32, 0x42,
	0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x5a, 0x02, 0x08, 0x01, 0x52, 0x06, 0x66, 0x45, 0x6e, 0x75, 0x6d,
	0x32, 0x12, 0x37, 0x0a, 0x07, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x35, 0x18, 0x41, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x32, 0x2e, 0x45, 0x6e,
	0x75, 0x6d, 0x32, 0x42, 0x08, 0x8a, 0xa2, 0x1f, 0x04, 0x18, 0x01, 0x5a, 0x00, 0x48, 0x02, 0x52,
	0x06, 0x66, 0x45, 0x6e, 0x75, 0x6d, 0x35, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x07, 0x66, 0x5f,
	0x65, 0x6e, 0x75, 0x6d, 0x36, 0x18, 0x42, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x32, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x32, 0x42, 0x08, 0x8a, 0xa2,
	0x1f, 0x04, 0x5a, 0x02, 0x08, 0x01, 0x48, 0x03, 0x52, 0x06, 0x66, 0x45, 0x6e, 0x75, 0x6d, 0x36,
	0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x0b, 0x66, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x31, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x12,
	0x3d, 0x0a, 0x0c, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x31, 0x18,
	0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x31, 0x12, 0x31,
	0x0a, 0x0b, 0x66, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x31, 0x18, 0x33, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x32, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x32, 0x52, 0x0a, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31,
	0x31, 0x12, 0x2b, 0x0a, 0x06, 0x66, 0x5f, 0x61, 0x6e, 0x79, 0x31, 0x18, 0x36, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x66, 0x41, 0x6e, 0x79, 0x31, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x47, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x2d, 0x0a, 0x09, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x49, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x32, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32,
	0x52, 0x08, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x5f,
	0x65, 0x6e, 0x75, 0x6d, 0x18, 0x4a, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x32, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x32, 0x52, 0x05, 0x72, 0x45, 0x6e,
	0x75, 0x6d, 0x12, 0x3d, 0x0a, 0x09, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18,
	0x51, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x32,
	0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x32, 0x2e, 0x4d, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x31, 0x12, 0x40, 0x0a, 0x0a, 0x6d, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x31, 0x18,
	0x52, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x32,
	0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x32, 0x2e, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x31, 0x12, 0x34, 0x0a, 0x06, 0x6d, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x53, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x32, 0x2e, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x32, 0x2e, 0x4d, 0x45, 0x6e, 0x75, 0x6d, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4e, 0x0a, 0x0e, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x32, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x49, 0x0a, 0x0a, 0x4d, 0x45, 0x6e, 0x75, 0x6d, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x32,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x32, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x42, 0x0b, 0x0a, 0x09, 0x4f, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x31, 0x42, 0x13,
	0x0a, 0x09, 0x4f, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x32, 0x12, 0x06, 0x92, 0xa2, 0x1f,
	0x02, 0x20, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x35, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x36, 0x2a, 0x74, 0x0a, 0x05, 0x45,
	0x6e, 0x75, 0x6d, 0x32, 0x12, 0x08, 0x0a, 0x04, 0x5a, 0x65, 0x72, 0x6f, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x4f, 0x6e, 0x65, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x77, 0x6f, 0x10, 0x03,
	0x12, 0x09, 0x0a, 0x05, 0x54, 0x68, 0x72, 0x65, 0x65, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x46,
	0x6f, 0x75, 0x72, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x69, 0x76, 0x65, 0x10, 0x07, 0x12,
	0x07, 0x0a, 0x03, 0x53, 0x69, 0x78, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x65, 0x76, 0x65,
	0x6e, 0x10, 0x0b, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x69, 0x67, 0x68, 0x74, 0x10, 0x0c, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x69, 0x6e, 0x65, 0x10, 0x0f, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x65, 0x6e, 0x10,
	0x11, 0x42, 0x18, 0x5a, 0x16, 0x78, 0x67, 0x6f, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x70,
	0x62, 0x2f, 0x70, 0x62, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_tests_proto_example_example2_proto_rawDescOnce sync.Once
	file_tests_proto_example_example2_proto_rawDescData = file_tests_proto_example_example2_proto_rawDesc
)

func file_tests_proto_example_example2_proto_rawDescGZIP() []byte {
	file_tests_proto_example_example2_proto_rawDescOnce.Do(func() {
		file_tests_proto_example_example2_proto_rawDescData = protoimpl.X.CompressGZIP(file_tests_proto_example_example2_proto_rawDescData)
	})
	return file_tests_proto_example_example2_proto_rawDescData
}

var file_tests_proto_example_example2_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tests_proto_example_example2_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_tests_proto_example_example2_proto_goTypes = []interface{}{
	(Enum2)(0),                    // 0: example2.Enum2
	(*Empty2)(nil),                // 1: example2.Empty2
	(*Example2)(nil),              // 2: example2.Example2
	nil,                           // 3: example2.Example2.MString1Entry
	nil,                           // 4: example2.Example2.MMessage1Entry
	nil,                           // 5: example2.Example2.MEnumEntry
	(*durationpb.Duration)(nil),   // 6: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
	(*anypb.Any)(nil),             // 8: google.protobuf.Any
}
var file_tests_proto_example_example2_proto_depIdxs = []int32{
	1,  // 0: example2.Example2.f_message3:type_name -> example2.Empty2
	0,  // 1: example2.Example2.f_enum1:type_name -> example2.Enum2
	0,  // 2: example2.Example2.f_enum2:type_name -> example2.Enum2
	0,  // 3: example2.Example2.f_enum5:type_name -> example2.Enum2
	0,  // 4: example2.Example2.f_enum6:type_name -> example2.Enum2
	6,  // 5: example2.Example2.f_duration1:type_name -> google.protobuf.Duration
	7,  // 6: example2.Example2.f_timestamp1:type_name -> google.protobuf.Timestamp
	1,  // 7: example2.Example2.f_message11:type_name -> example2.Empty2
	8,  // 8: example2.Example2.f_any1:type_name -> google.protobuf.Any
	1,  // 9: example2.Example2.r_message:type_name -> example2.Empty2
	0,  // 10: example2.Example2.r_enum:type_name -> example2.Enum2
	3,  // 11: example2.Example2.m_string1:type_name -> example2.Example2.MString1Entry
	4,  // 12: example2.Example2.m_message1:type_name -> example2.Example2.MMessage1Entry
	5,  // 13: example2.Example2.m_enum:type_name -> example2.Example2.MEnumEntry
	1,  // 14: example2.Example2.MMessage1Entry.value:type_name -> example2.Empty2
	0,  // 15: example2.Example2.MEnumEntry.value:type_name -> example2.Enum2
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_tests_proto_example_example2_proto_init() }
func file_tests_proto_example_example2_proto_init() {
	if File_tests_proto_example_example2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tests_proto_example_example2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tests_proto_example_example2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Example2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tests_proto_example_example2_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Example2_FString2)(nil),
		(*Example2_FMessage3)(nil),
		(*Example2_FString4)(nil),
		(*Example2_FString5)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tests_proto_example_example2_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tests_proto_example_example2_proto_goTypes,
		DependencyIndexes: file_tests_proto_example_example2_proto_depIdxs,
		EnumInfos:         file_tests_proto_example_example2_proto_enumTypes,
		MessageInfos:      file_tests_proto_example_example2_proto_msgTypes,
	}.Build()
	File_tests_proto_example_example2_proto = out.File
	file_tests_proto_example_example2_proto_rawDesc = nil
	file_tests_proto_example_example2_proto_goTypes = nil
	file_tests_proto_example_example2_proto_depIdxs = nil
}
