syntax = "proto3";

package json;

option go_package = "github.com/yu31/protoc-plugin-json/xgo/pb/pbjson";

// Package name of class.
option java_package = "io.github.yu31.protoc.pb.pbjson";
// File name of class.
option java_outer_classname = "PBJSON";
option java_multiple_files = true;

import "google/protobuf/descriptor.proto";

// SerializeOptions in message scope.
extend google.protobuf.MessageOptions {
  MessageOptions message = 64032;
}

// Options in field scope.
extend google.protobuf.FieldOptions {
  FieldOptions field = 64033;
}

// Options in oneof scope.
extend google.protobuf.OneofOptions {
  OneofOptions oneof = 64034;
}

message MessageOptions {
  // Whether ignore generating code for the this message.
  bool ignore = 1;

  // disallow_unknown_fields causes the Unmarshal to return an error when the destination
  // is a struct and the input contains object keys which do not match any
  // non-ignored, exported fields in the destination.
  bool disallow_unknown_fields = 2;
}

message OneofOptions {
  // The key name in json format. Default is field's name in proto.
  // If "json" is "-", The field will be ignore.
  optional string json = 1;

  // If true, the field will be ignore. It same as `json: "-"`
  // If true, the all fields in `oneof` part will be ignore.
  bool ignore = 2;

  // Whether omit the field of empty value in encoding(MarshalJSON).
  // It same as the go struct tag `json:"xxx,omitempty"`.
  bool omitempty = 3;

  // Whether hide the `oneof` key in json format.
  // If the oneof field are hide, It will be omitted for empty value.
  bool hide = 4;
}

// TODO: unsupported the type of bool as map key same as the standard JSON.
message FieldOptions {
  // The key name in json format. Default is field's name in proto.
  // If "json" is "-", The field will be ignore.
  optional string json = 1;

  // If true, the field will be ignore. It same as `json: "-"`
  bool ignore = 2;

  // Whether omit the field of empty value in encoding(MarshalJSON).
  // It same as the struct tag `json:"xxx,omitempty"`.
  bool omitempty = 3;

  // Whether use string format for enum type. default use integer.
  bool use_enum_string = 4;

  // TODO: supported well know type. any, duration, timestamp...
  oneof WKT {
    TypeEnum enum = 11;

    TypeAny any = 12;

    TypeDuration duration = 13;

    TypeTimestamp timestamp = 14;
  }
}

message TypeEnum {
  // Default to use use_number.
  oneof Format {
    bool use_number = 1;
    bool use_string = 2;
  }
}

message TypeAny {
  // Default to use native.
  oneof Format {
    bool native = 1;

    bool expand = 2;
  }
}

message TypeDuration {
  // Default to use native.
  oneof Format {
    bool native = 1;

    bool string = 2;

    bool nanoseconds = 3;
    bool microseconds = 4;
    bool milliseconds = 5;
    bool seconds = 6;
    bool minutes = 7;
    bool hours = 8;
  }
}

message TypeTimestamp {
  message TimeLayout {
    string golang = 1;
    string java = 2;
    string rust = 3;
    string python = 4;
  }

  // Default to use native.
  oneof Format {
    bool native = 1;

    TimeLayout time_layout = 2;

    bool unix_nano = 3;
    bool unix_micro = 4;
    bool unix_milli = 5;
    bool unix_sec = 6;
  }
}

