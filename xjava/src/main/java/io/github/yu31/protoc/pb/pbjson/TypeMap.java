// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: json.proto

package io.github.yu31.protoc.pb.pbjson;

/**
 * <pre>
 * TypeMap declares the codec applied to the field map.
 * </pre>
 *
 * Protobuf type {@code json.TypeMap}
 */
public final class TypeMap extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:json.TypeMap)
    TypeMapOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TypeMap.newBuilder() to construct.
  private TypeMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TypeMap() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TypeMap();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TypeMap(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.github.yu31.protoc.pb.pbjson.TypeFormat.Builder subBuilder = null;
            if (key_ != null) {
              subBuilder = key_.toBuilder();
            }
            key_ = input.readMessage(io.github.yu31.protoc.pb.pbjson.TypeFormat.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(key_);
              key_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.github.yu31.protoc.pb.pbjson.TypeFormat.Builder subBuilder = null;
            if (value_ != null) {
              subBuilder = value_.toBuilder();
            }
            value_ = input.readMessage(io.github.yu31.protoc.pb.pbjson.TypeFormat.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(value_);
              value_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.github.yu31.protoc.pb.pbjson.PBJSON.internal_static_json_TypeMap_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.github.yu31.protoc.pb.pbjson.PBJSON.internal_static_json_TypeMap_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.github.yu31.protoc.pb.pbjson.TypeMap.class, io.github.yu31.protoc.pb.pbjson.TypeMap.Builder.class);
  }

  public static final int KEY_FIELD_NUMBER = 1;
  private io.github.yu31.protoc.pb.pbjson.TypeFormat key_;
  /**
   * <pre>
   * Key reports the codec of map key.
   * </pre>
   *
   * <code>.json.TypeFormat key = 1;</code>
   * @return Whether the key field is set.
   */
  @java.lang.Override
  public boolean hasKey() {
    return key_ != null;
  }
  /**
   * <pre>
   * Key reports the codec of map key.
   * </pre>
   *
   * <code>.json.TypeFormat key = 1;</code>
   * @return The key.
   */
  @java.lang.Override
  public io.github.yu31.protoc.pb.pbjson.TypeFormat getKey() {
    return key_ == null ? io.github.yu31.protoc.pb.pbjson.TypeFormat.getDefaultInstance() : key_;
  }
  /**
   * <pre>
   * Key reports the codec of map key.
   * </pre>
   *
   * <code>.json.TypeFormat key = 1;</code>
   */
  @java.lang.Override
  public io.github.yu31.protoc.pb.pbjson.TypeFormatOrBuilder getKeyOrBuilder() {
    return getKey();
  }

  public static final int VALUE_FIELD_NUMBER = 2;
  private io.github.yu31.protoc.pb.pbjson.TypeFormat value_;
  /**
   * <pre>
   * Value reports the codec of map value.
   * </pre>
   *
   * <code>.json.TypeFormat value = 2;</code>
   * @return Whether the value field is set.
   */
  @java.lang.Override
  public boolean hasValue() {
    return value_ != null;
  }
  /**
   * <pre>
   * Value reports the codec of map value.
   * </pre>
   *
   * <code>.json.TypeFormat value = 2;</code>
   * @return The value.
   */
  @java.lang.Override
  public io.github.yu31.protoc.pb.pbjson.TypeFormat getValue() {
    return value_ == null ? io.github.yu31.protoc.pb.pbjson.TypeFormat.getDefaultInstance() : value_;
  }
  /**
   * <pre>
   * Value reports the codec of map value.
   * </pre>
   *
   * <code>.json.TypeFormat value = 2;</code>
   */
  @java.lang.Override
  public io.github.yu31.protoc.pb.pbjson.TypeFormatOrBuilder getValueOrBuilder() {
    return getValue();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (key_ != null) {
      output.writeMessage(1, getKey());
    }
    if (value_ != null) {
      output.writeMessage(2, getValue());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (key_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getKey());
    }
    if (value_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getValue());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.github.yu31.protoc.pb.pbjson.TypeMap)) {
      return super.equals(obj);
    }
    io.github.yu31.protoc.pb.pbjson.TypeMap other = (io.github.yu31.protoc.pb.pbjson.TypeMap) obj;

    if (hasKey() != other.hasKey()) return false;
    if (hasKey()) {
      if (!getKey()
          .equals(other.getKey())) return false;
    }
    if (hasValue() != other.hasValue()) return false;
    if (hasValue()) {
      if (!getValue()
          .equals(other.getValue())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasKey()) {
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
    }
    if (hasValue()) {
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.github.yu31.protoc.pb.pbjson.TypeMap parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.yu31.protoc.pb.pbjson.TypeMap parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.yu31.protoc.pb.pbjson.TypeMap parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.yu31.protoc.pb.pbjson.TypeMap parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.yu31.protoc.pb.pbjson.TypeMap parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.yu31.protoc.pb.pbjson.TypeMap parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.yu31.protoc.pb.pbjson.TypeMap parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.github.yu31.protoc.pb.pbjson.TypeMap parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.github.yu31.protoc.pb.pbjson.TypeMap parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.github.yu31.protoc.pb.pbjson.TypeMap parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.github.yu31.protoc.pb.pbjson.TypeMap parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.github.yu31.protoc.pb.pbjson.TypeMap parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.github.yu31.protoc.pb.pbjson.TypeMap prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * TypeMap declares the codec applied to the field map.
   * </pre>
   *
   * Protobuf type {@code json.TypeMap}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:json.TypeMap)
      io.github.yu31.protoc.pb.pbjson.TypeMapOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.github.yu31.protoc.pb.pbjson.PBJSON.internal_static_json_TypeMap_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.github.yu31.protoc.pb.pbjson.PBJSON.internal_static_json_TypeMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.github.yu31.protoc.pb.pbjson.TypeMap.class, io.github.yu31.protoc.pb.pbjson.TypeMap.Builder.class);
    }

    // Construct using io.github.yu31.protoc.pb.pbjson.TypeMap.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (keyBuilder_ == null) {
        key_ = null;
      } else {
        key_ = null;
        keyBuilder_ = null;
      }
      if (valueBuilder_ == null) {
        value_ = null;
      } else {
        value_ = null;
        valueBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.github.yu31.protoc.pb.pbjson.PBJSON.internal_static_json_TypeMap_descriptor;
    }

    @java.lang.Override
    public io.github.yu31.protoc.pb.pbjson.TypeMap getDefaultInstanceForType() {
      return io.github.yu31.protoc.pb.pbjson.TypeMap.getDefaultInstance();
    }

    @java.lang.Override
    public io.github.yu31.protoc.pb.pbjson.TypeMap build() {
      io.github.yu31.protoc.pb.pbjson.TypeMap result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.github.yu31.protoc.pb.pbjson.TypeMap buildPartial() {
      io.github.yu31.protoc.pb.pbjson.TypeMap result = new io.github.yu31.protoc.pb.pbjson.TypeMap(this);
      if (keyBuilder_ == null) {
        result.key_ = key_;
      } else {
        result.key_ = keyBuilder_.build();
      }
      if (valueBuilder_ == null) {
        result.value_ = value_;
      } else {
        result.value_ = valueBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.github.yu31.protoc.pb.pbjson.TypeMap) {
        return mergeFrom((io.github.yu31.protoc.pb.pbjson.TypeMap)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.github.yu31.protoc.pb.pbjson.TypeMap other) {
      if (other == io.github.yu31.protoc.pb.pbjson.TypeMap.getDefaultInstance()) return this;
      if (other.hasKey()) {
        mergeKey(other.getKey());
      }
      if (other.hasValue()) {
        mergeValue(other.getValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.github.yu31.protoc.pb.pbjson.TypeMap parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.github.yu31.protoc.pb.pbjson.TypeMap) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.github.yu31.protoc.pb.pbjson.TypeFormat key_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.github.yu31.protoc.pb.pbjson.TypeFormat, io.github.yu31.protoc.pb.pbjson.TypeFormat.Builder, io.github.yu31.protoc.pb.pbjson.TypeFormatOrBuilder> keyBuilder_;
    /**
     * <pre>
     * Key reports the codec of map key.
     * </pre>
     *
     * <code>.json.TypeFormat key = 1;</code>
     * @return Whether the key field is set.
     */
    public boolean hasKey() {
      return keyBuilder_ != null || key_ != null;
    }
    /**
     * <pre>
     * Key reports the codec of map key.
     * </pre>
     *
     * <code>.json.TypeFormat key = 1;</code>
     * @return The key.
     */
    public io.github.yu31.protoc.pb.pbjson.TypeFormat getKey() {
      if (keyBuilder_ == null) {
        return key_ == null ? io.github.yu31.protoc.pb.pbjson.TypeFormat.getDefaultInstance() : key_;
      } else {
        return keyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Key reports the codec of map key.
     * </pre>
     *
     * <code>.json.TypeFormat key = 1;</code>
     */
    public Builder setKey(io.github.yu31.protoc.pb.pbjson.TypeFormat value) {
      if (keyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        key_ = value;
        onChanged();
      } else {
        keyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Key reports the codec of map key.
     * </pre>
     *
     * <code>.json.TypeFormat key = 1;</code>
     */
    public Builder setKey(
        io.github.yu31.protoc.pb.pbjson.TypeFormat.Builder builderForValue) {
      if (keyBuilder_ == null) {
        key_ = builderForValue.build();
        onChanged();
      } else {
        keyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Key reports the codec of map key.
     * </pre>
     *
     * <code>.json.TypeFormat key = 1;</code>
     */
    public Builder mergeKey(io.github.yu31.protoc.pb.pbjson.TypeFormat value) {
      if (keyBuilder_ == null) {
        if (key_ != null) {
          key_ =
            io.github.yu31.protoc.pb.pbjson.TypeFormat.newBuilder(key_).mergeFrom(value).buildPartial();
        } else {
          key_ = value;
        }
        onChanged();
      } else {
        keyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Key reports the codec of map key.
     * </pre>
     *
     * <code>.json.TypeFormat key = 1;</code>
     */
    public Builder clearKey() {
      if (keyBuilder_ == null) {
        key_ = null;
        onChanged();
      } else {
        key_ = null;
        keyBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Key reports the codec of map key.
     * </pre>
     *
     * <code>.json.TypeFormat key = 1;</code>
     */
    public io.github.yu31.protoc.pb.pbjson.TypeFormat.Builder getKeyBuilder() {
      
      onChanged();
      return getKeyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Key reports the codec of map key.
     * </pre>
     *
     * <code>.json.TypeFormat key = 1;</code>
     */
    public io.github.yu31.protoc.pb.pbjson.TypeFormatOrBuilder getKeyOrBuilder() {
      if (keyBuilder_ != null) {
        return keyBuilder_.getMessageOrBuilder();
      } else {
        return key_ == null ?
            io.github.yu31.protoc.pb.pbjson.TypeFormat.getDefaultInstance() : key_;
      }
    }
    /**
     * <pre>
     * Key reports the codec of map key.
     * </pre>
     *
     * <code>.json.TypeFormat key = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.github.yu31.protoc.pb.pbjson.TypeFormat, io.github.yu31.protoc.pb.pbjson.TypeFormat.Builder, io.github.yu31.protoc.pb.pbjson.TypeFormatOrBuilder> 
        getKeyFieldBuilder() {
      if (keyBuilder_ == null) {
        keyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.github.yu31.protoc.pb.pbjson.TypeFormat, io.github.yu31.protoc.pb.pbjson.TypeFormat.Builder, io.github.yu31.protoc.pb.pbjson.TypeFormatOrBuilder>(
                getKey(),
                getParentForChildren(),
                isClean());
        key_ = null;
      }
      return keyBuilder_;
    }

    private io.github.yu31.protoc.pb.pbjson.TypeFormat value_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.github.yu31.protoc.pb.pbjson.TypeFormat, io.github.yu31.protoc.pb.pbjson.TypeFormat.Builder, io.github.yu31.protoc.pb.pbjson.TypeFormatOrBuilder> valueBuilder_;
    /**
     * <pre>
     * Value reports the codec of map value.
     * </pre>
     *
     * <code>.json.TypeFormat value = 2;</code>
     * @return Whether the value field is set.
     */
    public boolean hasValue() {
      return valueBuilder_ != null || value_ != null;
    }
    /**
     * <pre>
     * Value reports the codec of map value.
     * </pre>
     *
     * <code>.json.TypeFormat value = 2;</code>
     * @return The value.
     */
    public io.github.yu31.protoc.pb.pbjson.TypeFormat getValue() {
      if (valueBuilder_ == null) {
        return value_ == null ? io.github.yu31.protoc.pb.pbjson.TypeFormat.getDefaultInstance() : value_;
      } else {
        return valueBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Value reports the codec of map value.
     * </pre>
     *
     * <code>.json.TypeFormat value = 2;</code>
     */
    public Builder setValue(io.github.yu31.protoc.pb.pbjson.TypeFormat value) {
      if (valueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        value_ = value;
        onChanged();
      } else {
        valueBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Value reports the codec of map value.
     * </pre>
     *
     * <code>.json.TypeFormat value = 2;</code>
     */
    public Builder setValue(
        io.github.yu31.protoc.pb.pbjson.TypeFormat.Builder builderForValue) {
      if (valueBuilder_ == null) {
        value_ = builderForValue.build();
        onChanged();
      } else {
        valueBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Value reports the codec of map value.
     * </pre>
     *
     * <code>.json.TypeFormat value = 2;</code>
     */
    public Builder mergeValue(io.github.yu31.protoc.pb.pbjson.TypeFormat value) {
      if (valueBuilder_ == null) {
        if (value_ != null) {
          value_ =
            io.github.yu31.protoc.pb.pbjson.TypeFormat.newBuilder(value_).mergeFrom(value).buildPartial();
        } else {
          value_ = value;
        }
        onChanged();
      } else {
        valueBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Value reports the codec of map value.
     * </pre>
     *
     * <code>.json.TypeFormat value = 2;</code>
     */
    public Builder clearValue() {
      if (valueBuilder_ == null) {
        value_ = null;
        onChanged();
      } else {
        value_ = null;
        valueBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Value reports the codec of map value.
     * </pre>
     *
     * <code>.json.TypeFormat value = 2;</code>
     */
    public io.github.yu31.protoc.pb.pbjson.TypeFormat.Builder getValueBuilder() {
      
      onChanged();
      return getValueFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Value reports the codec of map value.
     * </pre>
     *
     * <code>.json.TypeFormat value = 2;</code>
     */
    public io.github.yu31.protoc.pb.pbjson.TypeFormatOrBuilder getValueOrBuilder() {
      if (valueBuilder_ != null) {
        return valueBuilder_.getMessageOrBuilder();
      } else {
        return value_ == null ?
            io.github.yu31.protoc.pb.pbjson.TypeFormat.getDefaultInstance() : value_;
      }
    }
    /**
     * <pre>
     * Value reports the codec of map value.
     * </pre>
     *
     * <code>.json.TypeFormat value = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.github.yu31.protoc.pb.pbjson.TypeFormat, io.github.yu31.protoc.pb.pbjson.TypeFormat.Builder, io.github.yu31.protoc.pb.pbjson.TypeFormatOrBuilder> 
        getValueFieldBuilder() {
      if (valueBuilder_ == null) {
        valueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.github.yu31.protoc.pb.pbjson.TypeFormat, io.github.yu31.protoc.pb.pbjson.TypeFormat.Builder, io.github.yu31.protoc.pb.pbjson.TypeFormatOrBuilder>(
                getValue(),
                getParentForChildren(),
                isClean());
        value_ = null;
      }
      return valueBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:json.TypeMap)
  }

  // @@protoc_insertion_point(class_scope:json.TypeMap)
  private static final io.github.yu31.protoc.pb.pbjson.TypeMap DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.github.yu31.protoc.pb.pbjson.TypeMap();
  }

  public static io.github.yu31.protoc.pb.pbjson.TypeMap getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TypeMap>
      PARSER = new com.google.protobuf.AbstractParser<TypeMap>() {
    @java.lang.Override
    public TypeMap parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TypeMap(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TypeMap> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TypeMap> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.github.yu31.protoc.pb.pbjson.TypeMap getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

